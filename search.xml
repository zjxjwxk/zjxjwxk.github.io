<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Dubbo微服务影院系列（5）：Dubbo基本特性（用户模块开发）</title>
      <link href="/2020/03/09/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/5.Dubbo%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7%EF%BC%88%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%EF%BC%89/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%885%EF%BC%89%EF%BC%9ADubbo%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7%EF%BC%88%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%EF%BC%89/"/>
      <url>/2020/03/09/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/5.Dubbo%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7%EF%BC%88%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%EF%BC%89/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%885%EF%BC%89%EF%BC%9ADubbo%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7%EF%BC%88%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="章节概要"><a href="#章节概要" class="headerlink" title="章节概要"></a>章节概要</h1><ul><li>学会 API 网关权限验证和其他服务交互</li><li>学会开发 SpringBoot 的自定义配置</li><li>学会 Dubbo 负载均衡策略选择和使用</li></ul><h2 id="用户模块开发"><a href="#用户模块开发" class="headerlink" title="用户模块开发"></a>用户模块开发</h2><h3 id="修改-Guns-中的-JWT-模块"><a href="#修改-Guns-中的-JWT-模块" class="headerlink" title="修改 Guns 中的 JWT 模块"></a>修改 Guns 中的 JWT 模块</h3><ul><li>增加忽略验证 URL 配置</li><li>修改返回内容匹配业务</li><li>增加 Threadlocal 的用户信息保存</li></ul><h3 id="业务功能开发"><a href="#业务功能开发" class="headerlink" title="业务功能开发"></a>业务功能开发</h3><ul><li>增加用户服务并提供接口</li><li>初步了解 API 网关与服务之间交互的过程</li><li>根据接口文档开发用户接口</li></ul><h1 id="创建用户表"><a href="#创建用户表" class="headerlink" title="创建用户表"></a>创建用户表</h1><pre><code class="SQL">DROP TABLE IF EXISTS user;CREATE TABLE user(   UUID INT PRIMARY KEY AUTO_INCREMENT COMMENT &#39;主键编号&#39;,   user_name VARCHAR(50) COMMENT &#39;用户账号&#39;,   user_pwd VARCHAR(50) COMMENT &#39;用户密码&#39;,   nick_name VARCHAR(50) COMMENT &#39;用户昵称&#39;,   user_sex INT COMMENT &#39;用户性别 0-男，1-女&#39;,   birthday VARCHAR(50) COMMENT &#39;出生日期&#39;,   email VARCHAR(50) COMMENT &#39;用户邮箱&#39;,   user_phone VARCHAR(50) COMMENT &#39;用户手机号&#39;,   address VARCHAR(50) COMMENT &#39;用户住址&#39;,   head_url VARCHAR(50) COMMENT &#39;头像URL&#39;,   biography VARCHAR(200) COMMENT &#39;个人介绍&#39;,   life_state INT COMMENT &#39;生活状态 0-单身，1-热恋中，2-已婚，3-为人父母&#39;,   begin_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,   update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;) COMMENT &#39;用户表&#39; ENGINE = INNODB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;insert into user(user_name,user_pwd,nick_name,user_sex,birthday,email,user_phone,address,head_url,life_state,biography) values(&#39;admin&#39;,&#39;0192023a7bbd73250516f069df18b500&#39;,&#39;管理员&#39;,0,&#39;2018-07-31&#39;,&#39;admin@gmail.com&#39;,&#39;13888888888&#39;,&#39;浙江省杭州市西湖区某路某号&#39;,&#39;cinema/img/head-img.jpg&#39;,0,&#39;我是苦逼的管理员&#39;);insert into user(user_name,user_pwd,nick_name,user_sex,birthday,email,user_phone,address,head_url,life_state,biography) values(&#39;test&#39;,&#39;5e2de6bd1c9b50f6e27d4e55da43b917&#39;,&#39;测试用户&#39;,0,&#39;2018-08-20&#39;,&#39;test@gmail.com&#39;,&#39;13866666666&#39;,&#39;测试地址&#39;,&#39;cinema/img/head-img.jpg&#39;,1,&#39;我是测试用户&#39;);</code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务架构 </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo微服务影院系列（4）：业务基础环境构建</title>
      <link href="/2020/03/09/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/4.%E4%B8%9A%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%884%EF%BC%89%EF%BC%9A%E4%B8%9A%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/"/>
      <url>/2020/03/09/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/4.%E4%B8%9A%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%884%EF%BC%89%EF%BC%9A%E4%B8%9A%E5%8A%A1%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="章节概要"><a href="#章节概要" class="headerlink" title="章节概要"></a>章节概要</h1><ul><li>构建基于 Guns + SpringBoot + Dubbo 的框架</li><li>学会抽离业务接口</li><li>学会 API 网关变形应用</li></ul><h1 id="API-网关介绍"><a href="#API-网关介绍" class="headerlink" title="API 网关介绍"></a>API 网关介绍</h1><ul><li>API 网关有点类似于设计模式中的 Facade 模式</li><li>API 网关一般都是微服务系统中的门面</li><li><strong>API  网关是微服务的重要组成部分</strong></li></ul><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309195624129.png" alt="API网关示意图"></p><h2 id="API-网关的常见作用"><a href="#API-网关的常见作用" class="headerlink" title="API 网关的常见作用"></a>API 网关的常见作用</h2><ul><li>身份验证和安全</li><li>审查和检测</li><li>动态路由</li><li>压力测试</li><li>负载均衡（Dubbo 自带）</li><li>静态相应处理</li></ul><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309200432132.png" alt="API网关作用"></p><h1 id="Guns-环境构建"><a href="#Guns-环境构建" class="headerlink" title="Guns 环境构建"></a>Guns 环境构建</h1><h2 id="导入-guns-项目"><a href="#导入-guns-项目" class="headerlink" title="导入 guns 项目"></a>导入 guns 项目</h2><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309203515871.png" alt="guns项目结构"></p><h2 id="创建-guns-rest-数据库"><a href="#创建-guns-rest-数据库" class="headerlink" title="创建 guns_rest 数据库"></a>创建 guns_rest 数据库</h2><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309203649262.png" alt="guns_rest数据库"></p><h2 id="创建-user-表"><a href="#创建-user-表" class="headerlink" title="创建 user 表"></a>创建 user 表</h2><pre><code class="SQL">-- ------------------------------ Table structure for user-- ----------------------------DROP TABLE IF EXISTS `user`;CREATE TABLE `user`  (  `id` bigint(20) NOT NULL AUTO_INCREMENT,  `userName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,  PRIMARY KEY (`id`) USING BTREE) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;-- ------------------------------ Records of user-- ----------------------------INSERT INTO `user` VALUES (1, &#39;admin&#39;);SET FOREIGN_KEY_CHECKS = 1;</code></pre><h2 id="添加-log4j-依赖"><a href="#添加-log4j-依赖" class="headerlink" title="添加 log4j 依赖"></a>添加 log4j 依赖</h2><pre><code class="XML">&lt;dependency&gt;  &lt;groupId&gt;log4j&lt;/groupId&gt;  &lt;artifactId&gt;log4j&lt;/artifactId&gt;  &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt;</code></pre><h2 id="修改-datasource-的-url"><a href="#修改-datasource-的-url" class="headerlink" title="修改 datasource 的 url"></a>修改 datasource 的 url</h2><p>修改 application.yml 中 spring 的 datasource 的 url 为</p><pre><code class="YAML">url: jdbc:mysql://127.0.0.1:3306/guns_rest?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</code></pre><h2 id="验证环境"><a href="#验证环境" class="headerlink" title="验证环境"></a>验证环境</h2><p>启动 GunsRestApplication，访问 url <a href="http://localhost/auth?userName=admin&amp;password=admin，若返回如下" target="_blank" rel="noopener">http://localhost/auth?userName=admin&amp;password=admin，若返回如下</a> token 则环境搭建成功。</p><pre><code class="JSON">{  &quot;randomKey&quot;: &quot;zd8rb8&quot;,  &quot;token&quot;: &quot;eyJhbGciOiJIUzUxMiJ9.eyJyYW5kb21LZXkiOiJ6ZDhyYjgiLCJzdWIiOiJhZG1pbiIsImV4cCI6MTU4NDM2MjkxOCwiaWF0IjoxNTgzNzU4MTE4fQ.mR7Elro8oK8T2Rx6FE02FWTvORJnUAcFfPka4-KbQYsSpoMQQl5iUgd-wd9wYIw_5wbXpn3TFoii72suPn0b4A&quot;}</code></pre><h1 id="API-网关模块构建测试"><a href="#API-网关模块构建测试" class="headerlink" title="API 网关模块构建测试"></a>API 网关模块构建测试</h1><p>在 guns 项目中复制一份 guns-rest 模块并重命名为 guns-gateway，在主模块 pom.xml 中添加 <module>guns-gateway</module></p><pre><code class="XML">    &lt;modules&gt;        &lt;module&gt;guns-admin&lt;/module&gt;        &lt;module&gt;guns-core&lt;/module&gt;        &lt;module&gt;guns-rest&lt;/module&gt;        &lt;module&gt;guns-generator&lt;/module&gt;        &lt;module&gt;guns-gateway&lt;/module&gt;    &lt;/modules&gt;</code></pre><p>修改其 pom.xml 中有关名称为 guns-gateway，并在 Project Structure 中将该模块重命名为 guns-gateway，同时删除原来 guns-rest 中多余的 Content Root（从 guns-gateway 加入的）</p><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309210548081.png" alt="需删除的Content Root"></p><p>这样 guns-gateway 就构建好了（测试同 guns-rest）。</p><h1 id="API-网关集成-Dubbo"><a href="#API-网关集成-Dubbo" class="headerlink" title="API 网关集成 Dubbo"></a>API 网关集成 Dubbo</h1><p>在 guns-gateway 项目的 pom.xml 文件中添加 Dubbo 和 ZooKeeper 的依赖</p><pre><code class="XML">&lt;dependency&gt;  &lt;groupId&gt;com.alibaba.spring.boot&lt;/groupId&gt;  &lt;artifactId&gt;dubbo-spring-boot-starter&lt;/artifactId&gt;  &lt;version&gt;2.0.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;  &lt;groupId&gt;com.101tec&lt;/groupId&gt;  &lt;artifactId&gt;zkclient&lt;/artifactId&gt;  &lt;version&gt;0.10&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>在 application.yml 中添加 </p><pre><code class="YAML">spring:  application:    name: cinema-gateway  dubbo:    server: true    registry: zookeeper://localhost:2181</code></pre><ul><li>在 Application 类上添加注解 @EnableDubboConfiguration</li><li>在 Service 实现类上添加注解 @Component 和 @Service(interfaceClass = UserAPI.class)，其中 @Service 来自Dubbo</li></ul><h1 id="抽离业务-API"><a href="#抽离业务-API" class="headerlink" title="抽离业务 API"></a>抽离业务 API</h1><ul><li>在 guns 项目中复制一份 guns-core 模块并重命名为 guns-api</li><li>修改其 pom.xml 中各名称后，删除其所有依赖</li><li>删除所有 java 下所有包，创建 api 包，其中可创建公用接口类</li><li>使用 Maven 的 install 指令将其放入库中</li></ul><p><img src="/2020/03/09/Dubbo/Dubbo微服务影院系列/4.业务基础环境构建/Dubbo微服务影院系列（4）：业务基础环境构建/image-20200309215810417.png" alt="maven install"></p><ul><li>在主模块的 pom.xml 中添加依赖</li></ul><pre><code class="XML">&lt;dependency&gt;  &lt;groupId&gt;com.stylefeng&lt;/groupId&gt;  &lt;artifactId&gt;guns-api&lt;/artifactId&gt;  &lt;version&gt;${guns.version}&lt;/version&gt;&lt;/dependency&gt;</code></pre><ul><li>在 guns-gateway 的 pom.xml 中添加依赖</li></ul><pre><code class="XML">&lt;dependency&gt;  &lt;groupId&gt;com.stylefeng&lt;/groupId&gt;  &lt;artifactId&gt;guns-api&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><p>之后，就可以在 guns-gateway 模块中，引入 guns-api 中的接口来使用了。这样接口类只需要在 guns-api 中写一份就够了，避免了冗余。</p>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务架构 </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT甲级 A1014 Waiting in Line (30分)</title>
      <link href="/2020/03/08/PAT/Advanced_Level/A1014/"/>
      <url>/2020/03/08/PAT/Advanced_Level/A1014/</url>
      
        <content type="html"><![CDATA[<p>Suppose a bank has N windows open for service. There is a yellow line in front of the windows which devides the waiting area into two parts. The rules for the customers to wait in line are:</p><ul><li>The space inside the yellow line in front of each window is enough to contain a line with M customers. Hence when all the N lines are full, all the customers after (and including) the (NM+1)st one will have to wait in a line behind the yellow line.</li><li>Each customer will choose the shortest line to wait in when crossing the yellow line. If there are two or more lines with the same length, the customer will always choose the window with the smallest number.</li><li>Customer[i] will take T[i] minutes to have his/her transaction processed.</li><li>The first N customers are assumed to be served at 8:00am.</li></ul><p>Now given the processing time of each customer, you are supposed to tell the exact time at which a customer has his/her business done.</p><p>For example, suppose that a bank has 2 windows and each window may have 2 customers waiting inside the yellow line. There are 5 customers waiting with transactions taking 1, 2, 6, 4 and 3 minutes, respectively. At 08:00 in the morning, customer[1] is served at window[1] while customer[2] is served at window[2]. Customer[3] will wait in front of window[1] and customer[4] will wait in front of window[2]. Customer[5] will wait behind the yellow line.</p><p>At 08:01, customer[1] is done and customer[5] enters the line in front of window[1] since that line seems shorter now. Customer[2] will leave at 08:02, customer[4] at 08:06, customer[3] at 08:07, and finally customer[5] at 08:10.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case starts with a line containing 4 positive integers: <em>N</em> (≤20, number of windows), <em>M</em> (≤10, the maximum capacity of each line inside the yellow line), <em>K</em> (≤1000, number of customers), and <em>Q</em> (≤1000, number of customer queries).</p><p>The next line contains <em>K</em> positive integers, which are the processing time of the <em>K</em> customers.</p><p>The last line contains <em>Q</em> positive integers, which represent the customers who are asking about the time they can have their transactions done. The customers are numbered from 1 to <em>K</em>.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each of the <em>Q</em> customers, print in one line the time at which his/her transaction is finished, in the format <code>HH:MM</code> where <code>HH</code> is in [08, 17] and <code>MM</code> is in [00, 59]. Note that since the bank is closed everyday after 17:00, for those customers who cannot be served before 17:00, you must output <code>Sorry</code> instead.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><pre><code class="in">2 2 7 51 2 6 4 3 534 23 4 5 6 7</code></pre><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><pre><code class="out">08:0708:0608:1017:00Sorry</code></pre><p>题⽬大意：n个窗口，每个窗口可以排队m人。有k位⽤用户需要服务，给出了每位⽤户需要的minute数，所有客户在8点开始服务，如果有窗口还没排满就入队，否则就在黄线外等候。如果有某⼀列有一个用户走了服务完毕了，黄线外的人就进来一个。如果同时就选窗⼝数小的。求q个人的服务结束时间。</p><p>坑点：如果⼀个客户在17:00以及以后还没有开始服务（<strong>此处不是结束服务是开始服务</strong>）就不再服务输出sorry；如果这个服务已经开始了了，无论时间多长都要等他服务完毕。如果当成结束服务，则测试点2，4，5不能通过。</p><pre><code class="C++">#include &lt;cstdio&gt;#include &lt;queue&gt;using namespace std;const int maxk = 1001, maxn = 21, maxTime = 540;int n, m, k, q, t[maxk], ans[maxk] = {0};int main() {    scanf(&quot;%d %d %d %d&quot;, &amp;n, &amp;m, &amp;k, &amp;q);    for (int i = 1; i &lt;= k; i++) {        scanf(&quot;%d&quot;, &amp;t[i]);    }    queue&lt;int&gt; que[maxn];    int time = 0, index = 0, query;    for (int i = 1; i &lt;= m; i++) {        for (int j = 1; j &lt;= n; j++) {            que[j].push(++index);            if (index == k) {                break;            }        }        if (index == k) {            break;        }    }    while (time != maxTime - 1) {        time++;        for (int i = 1; i &lt;= n; i++) {            if (que[i].size() &gt; 0) {                int front = que[i].front();                if (t[front] &gt; 0) {                    t[front]--;                    if (t[front] == 0) {                        que[i].pop();                        ans[front] = time;                        if (index != k) {                            que[i].push(++index);                        }                    }                }            }        }    }  // 额外处理到17:00还没有服务完的客户    for (int i = 1; i &lt;= n; i++) {        if (que[i].size() &gt; 0) {            int front = que[i].front();            ans[front] = time + t[front];        }    }    for (int i = 0; i &lt; q; i++) {        scanf(&quot;%d&quot;, &amp;query);        if (ans[query] != 0) {            printf(&quot;%02d:%02d\n&quot;, 8 + ans[query] / 60, ans[query] % 60);        } else {            printf(&quot;Sorry\n&quot;);        }    }    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo微服务影院系列（2）：微服务入门</title>
      <link href="/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/2.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%882%EF%BC%89%EF%BC%9A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8/"/>
      <url>/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/2.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%882%EF%BC%89%EF%BC%9A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="传统业务应用"><a href="#传统业务应用" class="headerlink" title="传统业务应用"></a>传统业务应用</h1><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/2.微服务入门/Dubbo微服务影院系列（2）：微服务入门/image-20200306231434458.png" alt="传统业务应用"></p><h1 id="传统应用带来的问题"><a href="#传统应用带来的问题" class="headerlink" title="传统应用带来的问题"></a>传统应用带来的问题</h1><ul><li>单一业务开发和迭代困难</li><li>扩容困难</li><li>部署和回滚困难</li></ul><h1 id="微服务发展历程"><a href="#微服务发展历程" class="headerlink" title="微服务发展历程"></a>微服务发展历程</h1><h2 id="面向服务开发-SOA"><a href="#面向服务开发-SOA" class="headerlink" title="面向服务开发 - SOA"></a>面向服务开发 - SOA</h2><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/2.微服务入门/Dubbo微服务影院系列（2）：微服务入门/image-20200306231555431.png" alt="SOA"></p><h2 id="微服务开发"><a href="#微服务开发" class="headerlink" title="微服务开发"></a>微服务开发</h2><h1 id="微服务概述"><a href="#微服务概述" class="headerlink" title="微服务概述"></a>微服务概述</h1><ul><li>微服务是一种将业务系统进一步拆分的架构风格</li><li>微服务强调每个单一业务都独立运行</li><li>每个单一服务都应该使用更轻量的机制保持通信</li><li>服务不强调环境，可以不同语言或数据源</li></ul><h1 id="微服务选择"><a href="#微服务选择" class="headerlink" title="微服务选择"></a>微服务选择</h1><ul><li>Dubbo</li><li>Spring Cloud</li><li>Zero ICE</li></ul>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务架构 </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo微服务影院系列（3）：环境搭建</title>
      <link href="/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/3.%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%883%EF%BC%89%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/3.%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%883%EF%BC%89%EF%BC%9A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="基础环境搭建"><a href="#基础环境搭建" class="headerlink" title="基础环境搭建"></a>基础环境搭建</h1><h2 id="基于Guns-SpringBoot-Dubbo构建影院平台"><a href="#基于Guns-SpringBoot-Dubbo构建影院平台" class="headerlink" title="基于Guns + SpringBoot + Dubbo构建影院平台"></a>基于Guns + SpringBoot + Dubbo构建影院平台</h2><ul><li>Spring + Dubbo</li><li>SpringBoot + Dubbo</li></ul><h2 id="微服务基本概念"><a href="#微服务基本概念" class="headerlink" title="微服务基本概念"></a>微服务基本概念</h2><ul><li>Provider：服务提供者</li><li>Consumer：服务调用者，调用 Provider 提供的服务实现</li><li>同一个服务可以即是 Provider，又是 Consumer</li></ul><p>以下可以选用 Spring 或 SpringBoot</p><h2 id="Spring基础环境构建"><a href="#Spring基础环境构建" class="headerlink" title="Spring基础环境构建"></a>Spring基础环境构建</h2><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/3.环境搭建/Dubbo微服务影院系列（3）：环境搭建/image-20200306232618900.png" alt="Spring基础环境项目结构"></p><h3 id="主模块（Spring-Dubbo-Demo）"><a href="#主模块（Spring-Dubbo-Demo）" class="headerlink" title="主模块（Spring-Dubbo-Demo）"></a>主模块（Spring-Dubbo-Demo）</h3><p>在 pom.xml 中添加 dependencies</p><pre><code class="XML">&lt;dependencies&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.101tec&lt;/groupId&gt;      &lt;artifactId&gt;zkclient&lt;/artifactId&gt;      &lt;version&gt;0.9&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;      &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;      &lt;version&gt;3.4.9&lt;/version&gt;      &lt;type&gt;pom&lt;/type&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;      &lt;artifactId&gt;dubbo&lt;/artifactId&gt;      &lt;version&gt;2.5.3&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;io.netty&lt;/groupId&gt;      &lt;artifactId&gt;netty-all&lt;/artifactId&gt;      &lt;version&gt;4.1.6.Final&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;commons-logging&lt;/groupId&gt;      &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;      &lt;version&gt;1.2&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.javassist&lt;/groupId&gt;      &lt;artifactId&gt;javassist&lt;/artifactId&gt;      &lt;version&gt;3.21.0-GA&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;log4j&lt;/groupId&gt;      &lt;artifactId&gt;log4j&lt;/artifactId&gt;      &lt;version&gt;1.2.17&lt;/version&gt;    &lt;/dependency&gt;    &lt;!-- spring相关jar --&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-core&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework&lt;/groupId&gt;      &lt;artifactId&gt;spring-expression&lt;/artifactId&gt;      &lt;version&gt;4.3.3.RELEASE&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;junit&lt;/groupId&gt;      &lt;artifactId&gt;junit&lt;/artifactId&gt;      &lt;version&gt;4.12&lt;/version&gt;      &lt;scope&gt;test&lt;/scope&gt;    &lt;/dependency&gt;  &lt;/dependencies&gt;</code></pre><h3 id="子模块（provider、consumer）"><a href="#子模块（provider、consumer）" class="headerlink" title="子模块（provider、consumer）"></a>子模块（provider、consumer）</h3><p>在 resources 中添加 applicationContext.xml（可更改后缀）</p><pre><code class="XML">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;    xmlns:context=&quot;http://www.springframework.org/schema/context&quot;    xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;    xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;    xmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot;    xsi:schemaLocation=&quot;    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd    &quot;    &gt;&lt;/beans&gt;</code></pre><h2 id="Spring的直连提供者"><a href="#Spring的直连提供者" class="headerlink" title="Spring的直连提供者"></a>Spring的直连提供者</h2><h3 id="provider"><a href="#provider" class="headerlink" title="provider"></a>provider</h3><p>applicationContext-hello-provider.xml 配置</p><pre><code class="XML">&lt;dubbo:application name=&quot;hello-world-app&quot;  /&gt;&lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; /&gt;&lt;bean id=&quot;quickStartService&quot; class=&quot;com.zjut.zjxjwxk.dubbo.quickstart.QuickStartServiceImpl&quot;&gt;&lt;/bean&gt;&lt;dubbo:service    registry=&quot;N/A&quot;    interface=&quot;com.zjut.zjxjwxk.dubbo.ServiceAPI&quot;    ref=&quot;quickStartService&quot; /&gt;</code></pre><p>启动 provider</p><pre><code class="Java">public class ProviderClient {    public static void main(String[] args) {        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext-hello-provider.xml&quot;);        context.start();        try {            System.in.read();        } catch (IOException e) {            e.printStackTrace();        }    }}</code></pre><h3 id="consumer"><a href="#consumer" class="headerlink" title="consumer"></a>consumer</h3><p>consumer 的 applicationContext-hello-consumer.xml 配置</p><pre><code class="XML">&lt;dubbo:application name=&quot;consumer-of-hello-world-app&quot;  /&gt;&lt;dubbo:reference    id=&quot;consumerService&quot;    interface=&quot;com.zjut.zjxjwxk.dubbo.ServiceAPI&quot;    url=&quot;dubbo://localhost:20880&quot;/&gt;</code></pre><p>启动 consumer 即可获取和调用 provider 提供的接口</p><pre><code class="Java">public class ConsumerClient {    public static void main(String[] args) {        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext-hello-consumer.xml&quot;);        context.start();        while (true) {            Scanner scanner = new Scanner(System.in);            String message = scanner.next();            // 获取接口            ServiceAPI serviceAPI = (ServiceAPI) context.getBean(&quot;consumerService&quot;);            System.out.println(serviceAPI.sendMessage(message));        }    }}</code></pre><h2 id="SpringBoot基础环境构建"><a href="#SpringBoot基础环境构建" class="headerlink" title="SpringBoot基础环境构建"></a>SpringBoot基础环境构建</h2><h3 id="项目结构-1"><a href="#项目结构-1" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/3.环境搭建/Dubbo微服务影院系列（3）：环境搭建/image-20200306233743772.png" alt="SpringBoot基础环境项目结构"></p><h3 id="主模块（SpringBoot-Dubbo-Demo）"><a href="#主模块（SpringBoot-Dubbo-Demo）" class="headerlink" title="主模块（SpringBoot-Dubbo-Demo）"></a>主模块（SpringBoot-Dubbo-Demo）</h3><h3 id="子模块（consumer、provider）"><a href="#子模块（consumer、provider）" class="headerlink" title="子模块（consumer、provider）"></a>子模块（consumer、provider）</h3><h4 id="provider-1"><a href="#provider-1" class="headerlink" title="provider"></a>provider</h4><ul><li>配置 application.properties</li></ul><pre><code class="yaml">spring.application.name=dubbo-spring-boot-starterspring.dubbo.server=truespring.dubbo.registry=N/A</code></pre><h4 id="consumer-1"><a href="#consumer-1" class="headerlink" title="consumer"></a>consumer</h4><ul><li>配置 application.properties</li></ul><pre><code class="yaml">spring.application.name=dubbo-spring-boot-starter</code></pre><h2 id="SpringBoot的直连提供者"><a href="#SpringBoot的直连提供者" class="headerlink" title="SpringBoot的直连提供者"></a>SpringBoot的直连提供者</h2><p>给 provider 和 consumer 的 Application 都添加 @EnableDubboConfiguration 注解。</p><h3 id="provider-2"><a href="#provider-2" class="headerlink" title="provider"></a>provider</h3><ul><li>给实现类添加     @Component 和 @Service 注解（来自dubbo的）</li><li>@Service 指明实现接口的     Class</li></ul><pre><code class="Java">@Component@Service(interfaceClass = ServiceAPI.class)public class QuickStartServiceImpl implements ServiceAPI {    @Override    public String sendMessage(String message) {        return &quot;quickstart-provider-message=&quot; + message;    }}</code></pre><h3 id="consumer-2"><a href="#consumer-2" class="headerlink" title="consumer"></a>consumer</h3><ul><li>consumer 即可注入并调用接口</li><li>声明的接口添加 @Reference 注解并注明 url （dubbo默认在20880端口）</li></ul><pre><code class="Java">@Componentpublic class QuickStartConsumer {    @Reference(url = &quot;dubbo://localhost:20880&quot;)    ServiceAPI serviceAPI;    public void sendMessage(String message) {        System.out.println(serviceAPI.sendMessage(message));    }}</code></pre><ul><li>项目结构</li></ul><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/3.环境搭建/Dubbo微服务影院系列（3）：环境搭建/image-20200306234410548.png" alt="SpringBoot的直连提供者项目结构"></p><h1 id="注册中心概念"><a href="#注册中心概念" class="headerlink" title="注册中心概念"></a>注册中心概念</h1><h2 id="直连提供者"><a href="#直连提供者" class="headerlink" title="直连提供者"></a>直连提供者</h2><ul><li>消费端知道服务提供者的地址，直接进行连接</li><li>该种方式一般只在测试环境中使用</li><li>直连提供者限制了分布式的易扩展性</li></ul><h2 id="Dubbo架构"><a href="#Dubbo架构" class="headerlink" title="Dubbo架构"></a>Dubbo架构</h2><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/3.环境搭建/Dubbo微服务影院系列（3）：环境搭建/image-20200306234710428.png" alt="Dubbo架构"></p><table><thead><tr><th>节点</th><th>角色说明</th></tr></thead><tbody><tr><td>Provider</td><td>暴露服务的服务提供方</td></tr><tr><td>Consumer</td><td>调用远程服务的服务消费方</td></tr><tr><td>Registry</td><td>服务注册与发现的注册中心，通常使用 ZooKeeper</td></tr><tr><td>Monitor</td><td>统计服务的调用次数和调用时间的监控中心</td></tr><tr><td>Container</td><td>服务运行容器</td></tr></tbody></table><h1 id="ZooKeeper安装和启动"><a href="#ZooKeeper安装和启动" class="headerlink" title="ZooKeeper安装和启动"></a>ZooKeeper安装和启动</h1><ul><li>从 Apache ZooKeeper 官网下载 <a href="https://www.apache.org/dyn/closer.cgi/zookeeper" target="_blank" rel="noopener">https://www.apache.org/dyn/closer.cgi/zookeeper</a></li><li>在 conf 目录下将 zoo-sample.cfg 改为 zoo.cfg</li><li>在 bin 目录下启动 zkServer.sh<pre><code class="sh">sh zkServer.sh start</code></pre></li></ul><h1 id="Spring集成注册中心"><a href="#Spring集成注册中心" class="headerlink" title="Spring集成注册中心"></a>Spring集成注册中心</h1><h2 id="provider-3"><a href="#provider-3" class="headerlink" title="provider"></a>provider</h2><p>在 applicationContext-hello-provider.xml 中添加注册中心配置</p><pre><code class="XML">&lt;dubbo:registry address=&quot;zookeeper://localhost:2181&quot;/&gt;</code></pre><p>去除 service 中的 registry 属性</p><pre><code class="XML">&lt;dubbo:service    interface=&quot;com.zjut.zjxjwxk.dubbo.ServiceAPI&quot;    ref=&quot;quickStartService&quot; /&gt;&lt;!--registry=&quot;N/A&quot;--&gt;</code></pre><h2 id="consumer-3"><a href="#consumer-3" class="headerlink" title="consumer"></a>consumer</h2><p>在 applicationContext-hello-consumer.xml 中添加注册中心配置</p><pre><code class="XML">&lt;dubbo:registry address=&quot;zookeeper://localhost:2181&quot;/&gt;</code></pre><p>去除 reference 中的 url 属性（非直连，而是通过 zookeeper 注册中心）</p><pre><code class="XML">&lt;dubbo:reference    id=&quot;consumerService&quot;    interface=&quot;com.zjut.zjxjwxk.dubbo.ServiceAPI&quot;/&gt;&lt;!--url=&quot;dubbo://localhost:20880&quot;--&gt;</code></pre><h1 id="SpringBoot集成注册中心"><a href="#SpringBoot集成注册中心" class="headerlink" title="SpringBoot集成注册中心"></a>SpringBoot集成注册中心</h1><h2 id="provider-4"><a href="#provider-4" class="headerlink" title="provider"></a>provider</h2><p>在 pom.xml 中添加 ZooKeeper 依赖</p><pre><code class="XML">&lt;dependency&gt;    &lt;groupId&gt;com.101tec&lt;/groupId&gt;    &lt;artifactId&gt;zkclient&lt;/artifactId&gt;    &lt;version&gt;0.10&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>在 application.properties 中添加注册中心</p><pre><code class="yaml">spring.dubbo.registry=zookeeper://localhost:2181</code></pre><h2 id="consumer-4"><a href="#consumer-4" class="headerlink" title="consumer"></a>consumer</h2><p>在 pom.xml 中添加 ZooKeeper 依赖</p><pre><code class="XML">&lt;dependency&gt;    &lt;groupId&gt;com.101tec&lt;/groupId&gt;    &lt;artifactId&gt;zkclient&lt;/artifactId&gt;    &lt;version&gt;0.10&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>在 application.properties 中添加注册中心</p><pre><code class="yaml">spring.dubbo.registry=zookeeper://localhost:2181</code></pre><p>去掉 @Reference 括号中的 url （非直连，而是通过 zookeeper 注册中心）</p><pre><code class="Java">@Reference    ServiceAPI serviceAPI;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务架构 </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo微服务影院系列（1）：课程导学</title>
      <link href="/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/1.%E8%AF%BE%E7%A8%8B%E5%AF%BC%E5%AD%A6/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%881%EF%BC%89%EF%BC%9A%E8%AF%BE%E7%A8%8B%E5%AF%BC%E5%AD%A6/"/>
      <url>/2020/03/06/Dubbo/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97/1.%E8%AF%BE%E7%A8%8B%E5%AF%BC%E5%AD%A6/Dubbo%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BD%B1%E9%99%A2%E7%B3%BB%E5%88%97%EF%BC%881%EF%BC%89%EF%BC%9A%E8%AF%BE%E7%A8%8B%E5%AF%BC%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么使用Dubbo"><a href="#为什么使用Dubbo" class="headerlink" title="为什么使用Dubbo"></a>为什么使用Dubbo</h1><h2 id="Dubbo-是基于-RPC-通信协议，速度更快"><a href="#Dubbo-是基于-RPC-通信协议，速度更快" class="headerlink" title="Dubbo 是基于 RPC 通信协议，速度更快"></a>Dubbo 是基于 RPC 通信协议，速度更快</h2><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/1.课程导学/Dubbo微服务影院系列（1）：课程导学/image-20200306225758803.png" alt="千万次调用"></p><h2 id="Dubbo-的多中心配置更灵活"><a href="#Dubbo-的多中心配置更灵活" class="headerlink" title="Dubbo 的多中心配置更灵活"></a>Dubbo 的多中心配置更灵活</h2><ul><li>ZooKeeper</li><li>Redis</li></ul><h2 id="Dubbo-可以按需集成其他组件，完成微服务生态环境构建"><a href="#Dubbo-可以按需集成其他组件，完成微服务生态环境构建" class="headerlink" title="Dubbo 可以按需集成其他组件，完成微服务生态环境构建"></a>Dubbo 可以按需集成其他组件，完成微服务生态环境构建</h2><ul><li>Hystrix</li><li>Zipkin</li></ul><h2 id="包括阿里、小米、京东等多家互联网公司都有使用"><a href="#包括阿里、小米、京东等多家互联网公司都有使用" class="headerlink" title="包括阿里、小米、京东等多家互联网公司都有使用"></a>包括阿里、小米、京东等多家互联网公司都有使用</h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><ul><li>构建业务完整的商业化项目</li><li>掌握以 Dubbo 为底的各项微服务套件的应用</li><li>掌握基于 Dubbo 的微服务常见面试问题</li></ul><h1 id="业务结构图"><a href="#业务结构图" class="headerlink" title="业务结构图"></a>业务结构图</h1><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/1.课程导学/Dubbo微服务影院系列（1）：课程导学/image-20200306230144862.png" alt="业务结构图"></p><h1 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h1><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/1.课程导学/Dubbo微服务影院系列（1）：课程导学/image-20200306230227966.png" alt="核心功能"></p><h1 id="主要知识点"><a href="#主要知识点" class="headerlink" title="主要知识点"></a>主要知识点</h1><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/1.课程导学/Dubbo微服务影院系列（1）：课程导学/image-20200306230255648.png" alt="主要知识点"></p><h1 id="技术架构图"><a href="#技术架构图" class="headerlink" title="技术架构图"></a>技术架构图</h1><p><img src="/2020/03/06/Dubbo/Dubbo微服务影院系列/1.课程导学/Dubbo微服务影院系列（1）：课程导学/image-20200306230335981.png" alt="技术架构图"></p>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务架构 </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Outsourcing</title>
      <link href="/2019/06/21/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Outsourcing/Outsourcing/"/>
      <url>/2019/06/21/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Outsourcing/Outsourcing/</url>
      
        <content type="html"><![CDATA[<h1 id="What-is-GSE"><a href="#What-is-GSE" class="headerlink" title="What is GSE?"></a>What is GSE?</h1><p>GSE is a complex phenomenon that unites many different collaboration models and project organization models.</p><h1 id="Reason-for-GSE"><a href="#Reason-for-GSE" class="headerlink" title="Reason for GSE?"></a>Reason for GSE?</h1><ul><li>Reduce overheads, free up resources</li><li>Improve efficiency</li><li>Offload non-core functions</li><li>Get access to specialized skills</li><li>Get access to a specific market</li></ul><h1 id="Differences-between-co-located-team-and-global-team"><a href="#Differences-between-co-located-team-and-global-team" class="headerlink" title="Differences between co-located team and global team"></a>Differences between co-located team and global team</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190623152437638.png" alt="Differences between co-located team and global team"> </p><h1 id="According-to-What-When-Where-to-determine-whether-the-supplier-is-suitable"><a href="#According-to-What-When-Where-to-determine-whether-the-supplier-is-suitable" class="headerlink" title="According to What, When, Where to determine whether the supplier is suitable"></a>According to What, When, Where to determine whether the supplier is suitable</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190622103720847.png" alt="Each combination is unique"> </p><h1 id="Alternative"><a href="#Alternative" class="headerlink" title="Alternative"></a>Alternative</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190622110154177.png" alt="Alternative">  </p><h1 id="Different-transfers"><a href="#Different-transfers" class="headerlink" title="Different transfers"></a>Different transfers</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190623164656509.png" alt="Different transfers">  </p><h1 id="Different-transfers-can-result-in"><a href="#Different-transfers-can-result-in" class="headerlink" title="Different transfers can result in"></a>Different transfers can result in</h1><ul><li>Full relocation of a product to the receiving site</li><li>Relocation of a component / task / phase which overall is developed jointly</li></ul><h1 id="18P-There-are-several-ways-or-models-to-transfer-GSE-project-globally-Please-tell-at-least-three-models-that-you-would-apply-in-your-GSE-project-and-give-your-comments-about-their-advantages-and-disadvantages-in-applying-them-respectively"><a href="#18P-There-are-several-ways-or-models-to-transfer-GSE-project-globally-Please-tell-at-least-three-models-that-you-would-apply-in-your-GSE-project-and-give-your-comments-about-their-advantages-and-disadvantages-in-applying-them-respectively" class="headerlink" title="(18P) There are several ways or models to transfer GSE project globally. Please tell at least three models that you would apply in your GSE project, and give your comments about their advantages and disadvantages in applying them respectively."></a>(18P) There are several ways or models to transfer GSE project globally. Please tell at least three models that you would apply in your GSE project, and give your comments about their advantages and disadvantages in applying them respectively.</h1><h2 id="Customization-model"><a href="#Customization-model" class="headerlink" title="Customization model"></a>Customization model</h2><p><strong>advantages</strong>: customization can satisfy customers according to their special requirements</p><p><strong>disadvantages</strong>: customization will use more resource, such as, human resources, time and money.</p><h2 id="Follow-the-sun-model"><a href="#Follow-the-sun-model" class="headerlink" title="Follow-the-sun model"></a>Follow-the-sun model</h2><p><strong>advantages</strong>: It works for defect resolution and support</p><p><strong>disadvantages</strong>: Not good for development</p><h2 id="Modularized-model"><a href="#Modularized-model" class="headerlink" title="Modularized model"></a>Modularized model</h2><p><strong>advantage</strong>: This reduce the need for inter-site coordination and communication; good for decoupled and clear tasks.</p><p><strong>disadvantage</strong>: Increase the cost of whole project.</p><h1 id="Critical-factors-that-alleviate-transfers"><a href="#Critical-factors-that-alleviate-transfers" class="headerlink" title="Critical factors that alleviate transfers"></a>Critical factors that alleviate transfers</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190621221551428.png" alt="Critical factors"> </p><h1 id="Describe-6-reasons-for-applying-Global-Software-Engineering-GSE-and-3-reasons-for-not-good-to-do-GSE"><a href="#Describe-6-reasons-for-applying-Global-Software-Engineering-GSE-and-3-reasons-for-not-good-to-do-GSE" class="headerlink" title="Describe 6 reasons for applying Global Software Engineering(GSE) and 3 reasons for not good to do GSE."></a>Describe 6 reasons for applying Global Software Engineering(GSE) and 3 reasons for not good to do GSE.</h1><h2 id="Good"><a href="#Good" class="headerlink" title="Good:"></a>Good:</h2><ol><li>Reduce development costs</li><li>Leveraging time zone effectiveness</li><li>Access to large skilled labor pool</li><li>Closer proximity to market and customer</li><li>Innovation and shared best practice</li><li>Improved resource allocation</li></ol><h2 id="Not-good"><a href="#Not-good" class="headerlink" title="Not good:"></a>Not good:</h2><ol><li>Loss of knowledge within the product</li><li>Temporary productivity decrease</li><li>Temporal decrease in quality</li></ol><h1 id="Causes-of-failure-of-global-projects"><a href="#Causes-of-failure-of-global-projects" class="headerlink" title="Causes of failure of global projects"></a>Causes of failure of global projects</h1><p>Many specific problems, but mainly because managers are unaware of these problems and fail to properly coordinate work in a distributed environment</p><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190622140556011.png" alt="Major challenges"> </p><h1 id="16P-The-course-discussed-quite-lot-about-3C-in-GSE-since-they-are-important-factors-for-successful-project-in-GES-The-3C-are-6P-1-C-2-C-3-C-Please-tell-the-main-contents-or-activities-that-involved-in-each-C-10P"><a href="#16P-The-course-discussed-quite-lot-about-3C-in-GSE-since-they-are-important-factors-for-successful-project-in-GES-The-3C-are-6P-1-C-2-C-3-C-Please-tell-the-main-contents-or-activities-that-involved-in-each-C-10P" class="headerlink" title="(16P) The course discussed quite lot about 3C in GSE, since they are important factors for successful project in GES The 3C are (6P) (1) C_____________ (2) C_________________ (3) C__________________ Please tell the main contents or activities that involved in each C (10P)"></a>(16P) The course discussed quite lot about 3C in GSE, since they are important factors for successful project in GES The 3C are (6P) (1) C_____________ (2) C_________________ (3) C__________________ Please tell the main contents or activities that involved in each C (10P)</h1><h2 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h2><ul><li>Cohesiveness, teamness, mutual trust</li><li>Common background, language and culture</li></ul><h2 id="Coordination"><a href="#Coordination" class="headerlink" title="Coordination"></a>Coordination</h2><ul><li>Joint processes and tools</li><li>Plan-driven standardized approach</li></ul><h2 id="Control"><a href="#Control" class="headerlink" title="Control"></a>Control</h2><ul><li>Process transparency and visibility</li><li>Managers directly supervise team performance</li></ul><h1 id="What-is-a-project"><a href="#What-is-a-project" class="headerlink" title="What is a project?"></a>What is a project?</h1><h2 id="A-project-is-a-temporary-endeavour-undertaken-to-create-a-unique-product-or-service"><a href="#A-project-is-a-temporary-endeavour-undertaken-to-create-a-unique-product-or-service" class="headerlink" title="A project is a temporary endeavour undertaken to create a unique product or service."></a>A project is a temporary endeavour undertaken to create a unique product or service.</h2><ul><li>Temporary means that every project has a definite beginning and a definite end.</li><li>Unique means that the product or service is different in some distinguishing way from all similar products or services.</li></ul><h1 id="15P-Both-development-models-of-agile-method-and-waterfall-method-can-be-applied-in-GSE-project-Briefly-describe-the-two-methods-just-some-basic-idea-or-steps-without-details-and-why-you-would-choose-which-method-in-your-project-development"><a href="#15P-Both-development-models-of-agile-method-and-waterfall-method-can-be-applied-in-GSE-project-Briefly-describe-the-two-methods-just-some-basic-idea-or-steps-without-details-and-why-you-would-choose-which-method-in-your-project-development" class="headerlink" title="(15P) Both development models of agile method and waterfall method can be applied in GSE project. Briefly describe the two methods (just some basic idea or steps without details) and why you would choose which method in your project development."></a>(15P) Both development models of agile method and waterfall method can be applied in GSE project. Briefly describe the two methods (just some basic idea or steps without details) and why you would choose which method in your project development.</h1><p>The <strong>waterfall model</strong> is a sequential (non-iterative) design process, used in software development processes, in which progress is flowing steadily downwards (like a waterfall). Steps can be described in following picture:</p><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190621192336747.png" alt="Waterfall"> </p><p><strong>Agile method</strong> is a group of software development methods in which requirements and solutions evolve through collaboration between self-organizing, cross-functional teams. It promotes adaptive planning, evolutionary development, early delivery, continuous improvement, and encourages rapid and flexible response to change. Steps can be described in following picture: </p><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190621192533027.png" alt="Agile"></p><h2 id="Advantage-of-Agile"><a href="#Advantage-of-Agile" class="headerlink" title="Advantage of Agile"></a>Advantage of Agile</h2><ul><li>Focus on the question of how to address key problems in software development: too long, too costly, poor quality</li><li>Have the potential to improve communication and, as a result, reduce coordination and control overhead</li><li>Small co-located teams, so it is easily for coordination.</li><li>Scrum Agile method is a simple and effective way to have control over your development process, make sure things go according to plan</li></ul><h1 id="The-Difference-Agility-vs-Waterfall"><a href="#The-Difference-Agility-vs-Waterfall" class="headerlink" title="The Difference: Agility vs. Waterfall"></a>The Difference: Agility vs. Waterfall</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190623193652637.png" alt="Agility vs. Waterfall"> </p><h1 id="20P-Culture-does-matter-in-GSE-then-what-is-culture-can-be-examples-5P-What-are-building-blocks-elements-for-a-culture-5P-And-describe-Hofstede’s-5-dimensions-of-culture-10P"><a href="#20P-Culture-does-matter-in-GSE-then-what-is-culture-can-be-examples-5P-What-are-building-blocks-elements-for-a-culture-5P-And-describe-Hofstede’s-5-dimensions-of-culture-10P" class="headerlink" title="(20P) Culture does matter in GSE, then what is culture (can be examples) (5P)? What are building blocks (elements) for a culture (5P)? And describe Hofstede’s 5 dimensions of culture (10P)."></a>(20P) Culture does matter in GSE, then what is culture (can be examples) (5P)? What are building blocks (elements) for a culture (5P)? And describe Hofstede’s 5 dimensions of culture (10P).</h1><h2 id="What-is-culture"><a href="#What-is-culture" class="headerlink" title="What is culture?"></a>What is culture?</h2><p>Culture is a set of shared experiences, understandings, and meanings among members of a group, an organization, a community, or a nation.</p><p>Culture provides members with images of:</p><ul><li>the basic concerns, principles, ethics</li><li>bodies of manners</li><li>Rituals(礼仪）, ideologies</li><li>strategies, tactics of self-survival</li><li>notions of good acts and bad</li><li>various forms of folklore and legends</li></ul><h2 id="What-are-building-blocks-elements-for-a-culture"><a href="#What-are-building-blocks-elements-for-a-culture" class="headerlink" title="What are building blocks (elements) for a culture?"></a>What are building blocks (elements) for a culture?</h2><p><strong>values</strong>, including preferences people use to make work related and communication related decisions in projects.</p><p><strong>practices</strong>, including cultural norms for adopting specific project management styles and organization structures.</p><h2 id="Hofstede’s-5-dimensions-of-culture"><a href="#Hofstede’s-5-dimensions-of-culture" class="headerlink" title="Hofstede’s 5 dimensions of culture?"></a>Hofstede’s 5 dimensions of culture?</h2><ul><li><strong>Power distance</strong> - how a society handles inequalities; A higher degree of the Index indicates that hierarchy is clearly established and executed in society, without doubt or reason. A lower degree of the Index signifies that people question authority and attempt to distribute power.</li><li><strong>Individualism/collectivism</strong> - behavior towards the group; individualism has loose ties that often only relates an individual. Collectivism emphasizes on building skills and has tightly-integrated relations into group.</li><li><strong>Masculinity/femininity</strong> - behavior according to gender; besides distinction of gender, masculinity is defined as a preference in society for achievement, heroism, assertiveness and material rewards for success. Femininity represents a preference for cooperation, modesty, caring for the weak and quality of life.</li><li><strong>Uncertainty avoidance</strong> - the need for structure; a high degree in this index strictly follows laws, guidelines, behaviors and etc. a low degree in this index shows more acceptance of differing thoughts or ideas.</li><li><strong>Long term orientation(LTO)</strong> - value of long-standing traditions; a high degree in this index indicates the factors of family, elders, strong work ethic and high value. A low degree in this index emphasizes creativity, individualism, equality and selfactualization.</li></ul><h1 id="The-effect-of-culture-in-software-development-organizations"><a href="#The-effect-of-culture-in-software-development-organizations" class="headerlink" title="The effect of culture in software development organizations"></a>The effect of culture in software development organizations</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190622140811067.png" alt="The effect of culture in software development organizations"> </p><h1 id="5P-You-are-a-project-leader-for-GSE-project-and-you-know-it-is-important-to-build-up-to-the-team-work-What-would-you-do-to-build-up-your-team-to-trust-each-other-Provide-at-least-5-ways-or-kinds-of-activities-to-this-team-building"><a href="#5P-You-are-a-project-leader-for-GSE-project-and-you-know-it-is-important-to-build-up-to-the-team-work-What-would-you-do-to-build-up-your-team-to-trust-each-other-Provide-at-least-5-ways-or-kinds-of-activities-to-this-team-building" class="headerlink" title="(5P) You are a project leader for GSE project, and you know it is important to build up to the team work. What would you do to build up your team to trust each other? Provide at least 5 ways or kinds of activities to this team building."></a>(5P) You are a project leader for GSE project, and you know it is important to build up to the team work. What would you do to build up your team to trust each other? Provide at least 5 ways or kinds of activities to this team building.</h1><ul><li>kick-off meetings</li><li>regular traveling</li><li>team-building activities</li><li>cultural training</li><li>regular video-conferences</li></ul><h1 id="Phase-in-forming-a-team"><a href="#Phase-in-forming-a-team" class="headerlink" title="Phase in forming a team"></a>Phase in forming a team</h1><p><img src="/2019/06/21/期末复习/Outsourcing/Outsourcing/image-20190623191253458.png" alt="Phase in forming a team"> </p><p><strong>Forming:</strong> the team gets together and gets to know each other. It clarifies roles, figures out the tasks and objectives</p><p><strong>Storming:</strong> conflicts break out over roles, objectives, and task allocations. Different leaders, official or otherwise, are pursuing different goals</p><p><strong>Norming:</strong> the team begins to form norms, roles, and protocols for working together. Some team cohesion may begin.</p><p><strong>Performing:</strong> the team begins to perform well, working together toward a common goal. Conflicts are handled constructively</p>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己编译JDK</title>
      <link href="/2019/03/11/Java/JVM/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91JDK/"/>
      <url>/2019/03/11/Java/JVM/%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91JDK/</url>
      
        <content type="html"><![CDATA[<p>想要一探 JDK 内部的实现机制，最便捷的捷径之一就是自己编译一套 JDK，通过阅读和跟踪调试 JDK 源码去了解 Java 技术体系的原理。本人选择了 OpenJDK 进行编译。</p><h2 id="1-获取-JDK-源码"><a href="#1-获取-JDK-源码" class="headerlink" title="1. 获取 JDK 源码"></a>1. 获取 JDK 源码</h2><p>获取 JDK 源码有两种方式：</p><h3 id="1-通过-Mercurial-代码版本管理工具从-Repository-中直接取得源码"><a href="#1-通过-Mercurial-代码版本管理工具从-Repository-中直接取得源码" class="headerlink" title="(1). 通过 Mercurial 代码版本管理工具从 Repository 中直接取得源码"></a>(1). 通过 Mercurial 代码版本管理工具从 Repository 中直接取得源码</h3><p>Repository 地址：<a href="http://hg.openjdk.java.net/jdk7u/jdk7u" target="_blank" rel="noopener">http://hg.openjdk.java.net/jdk7u/jdk7u</a></p><p>获取过程如以下代码所示</p><pre><code class="shell">hg clone http://hg.openjdk.java.net/jdk7u/jdk7u-devcd jdk7u-devchmod 755 get_source.sh./get_source.sh</code></pre><p>从版本管理中看变更轨迹效果较好，但不足之处是速度太慢，而且 Mercurial 不如 Git、SVN 等版本控制工具那样普及。</p><h3 id="2-通过-OpenJDK™-Source-Releases-页面取得打包好的源码"><a href="#2-通过-OpenJDK™-Source-Releases-页面取得打包好的源码" class="headerlink" title="(2). 通过 OpenJDK™ Source Releases 页面取得打包好的源码"></a>(2). 通过 OpenJDK™ Source Releases 页面取得打包好的源码</h3><p>页面地址：<a href="https://download.java.net/openjdk/jdk7/" target="_blank" rel="noopener">https://download.java.net/openjdk/jdk7/</a></p><h2 id="2-系统需求"><a href="#2-系统需求" class="headerlink" title="2. 系统需求"></a>2. 系统需求</h2><p>建议在 Linux、MacOS 或 Solaris 上构建 OpenJDK</p><p>本人采用的是 64 位操作系统，编译的也是 64 位的 OpenJDK</p><h2 id="3-构建编译环境"><a href="#3-构建编译环境" class="headerlink" title="3. 构建编译环境"></a>3. 构建编译环境</h2><p>本人使用的是 MacOS ，需要安装最新版本的 XCode 和 Command Line Tools for Xcode，另外还要准备一个 6u14 以上版本的 JDK，官方称这个 JDK 为 “Bootstrap JDK” 。最后，需要下载一个 1.7.1 以上版本的 Apache Ant，用于执行 Java 编译代码中的 Ant 脚本。</p><h2 id="4-进行编译"><a href="#4-进行编译" class="headerlink" title="4. 进行编译"></a>4. 进行编译</h2><p>最后我们还需要对系统的环境变量做一些简单设置以便编译能够顺利通过，这里给出使用的编译 Shell 脚本：</p><pre><code class="bash">#语言选项,这个必须设置,否则编译好后会出现一个HashTable的NPE错export LANG=C#Bootstrap JDK的安装路径。必须设置export ALT_BOOTDIR=/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home#允许自动下载依赖export ALLOW_DOWNLOADS=true#并行编译的线程数,设置为和CPU内核数量一致即可export HOTSPOT_BUILD_J0BS=8export ALT_PARALLEL_COMPILE_JOBS=8#比较本次build出来的映像与先前版本的差异。这对我们来说没有意义, #必须设置为false,香则sanity检查会报缺少先前版本JDK的映像的错误提示。 #如桌已经设置dev或者DEV_ONLY=true,这个不显式设置也行export SKIP_COMPARE_IMAGES=true#使用预编译头文件,不加这个编译会更慢一些export USE_PRECOMPILED_HEADER=true#要编译的内容export BUILD_LANGTOOLS=true#export BUILD_JAXP=false#export BUILD_JAXWS=fa1se#export BUILD_CORBA=falseexport BUILD_HOTSPOT=trueexport BUILD_JDK=true#要编译的版本#export SKIP_DEBUG_BUILD=false#export SKIP_FASTDEBUG_BUILD=true#export DEBUG_NAME=debug#把它设置为false可以避开java111`ws和浏览器Java插件之类的部分的buildBUILD_DEPLOY=false#把它设置为false就不会build出安装包。因为安装包里有些奇怪的依赖, #但即便不build出它也已经能得到完整的JDK映像,所以还是别build它好了BUILD_INSTALL=false#编译结果所存放的路径export ALT_OUTPUTDIR=/Users/zjxjwxk/Documents/JVM/JDK-Build/build#这两个环境变量必须去掉,不然会有很诡异的事情发生（我没有具体查过这些 &quot;诡异的#事情” ,Makefile脚本裣查到有这2个变量就会提示警告)unset JAVA_HOMEunset CLASSPATHmake 2&gt;&amp;1 | tee $ALT_OUTPUTDIR/build.log</code></pre><h2 id="5-检查"><a href="#5-检查" class="headerlink" title="5. 检查"></a>5. 检查</h2><p>全部设置结束之后，可以输入 <code>make sanity</code> 来检查我们所做的设置是否全部正确。如果一切顺利，那么几秒钟之后会有类似代码清单1-2所示的输出。</p><pre><code class="bash">~/Develop/JVM/jdkBuild/openjdk_7u4$ make sanity  Build Machine Information:     build machine = IcyFenix-RMBP.local  Build Directory Structure:     CWD = /Users/IcyFenix/Develop/JVM/jdkBuild/openjdk_7u4     TOPDIR = .     LANGTOOLS_TOPDIR = ./langtools     JAXP_TOPDIR = ./jaxp     JAXWS_TOPDIR = ./jaxws     CORBA_TOPDIR = ./corba     HOTSPOT_TOPDIR = ./hotspot     JDK_TOPDIR = ./jdk  Build Directives:     BUILD_LANGTOOLS = true      BUILD_JAXP = true      BUILD_JAXWS = true      BUILD_CORBA = true      BUILD_HOTSPOT = true      BUILD_JDK    = true      DEBUG_CLASSFILES =       DEBUG_BINARIES =    ……因篇幅关系，中间省略了大量的输出内容……  OpenJDK-specific settings:    FREETYPE_HEADERS_PATH = /usr/X11R6/include      ALT_FREETYPE_HEADERS_PATH =     FREETYPE_LIB_PATH = /usr/X11R6/lib      ALT_FREETYPE_LIB_PATH =   Previous JDK Settings:    PREVIOUS_RELEASE_PATH = USING-PREVIOUS_RELEASE_IMAGE      ALT_PREVIOUS_RELEASE_PATH =     PREVIOUS_JDK_VERSION = 1.6.0      ALT_PREVIOUS_JDK_VERSION =     PREVIOUS_JDK_FILE =       ALT_PREVIOUS_JDK_FILE =     PREVIOUS_JRE_FILE =       ALT_PREVIOUS_JRE_FILE =     PREVIOUS_RELEASE_IMAGE = /Library/Java/JavaVirtualMachines/jdk1.7.0_04.jdk/Contents/Home      ALT_PREVIOUS_RELEASE_IMAGE =   Sanity check passed.  </code></pre><p>Makefile 的 Sanity 检查过程输出了编译所需的所有环境变量，如果看到 “Sanity check passed” 说明检查过程通过了，可以输入 <code>make</code> 执行整个 OpenJDK 编译 (make 不加参数，默认编译 make all)。</p><p>编译完成后，进入 OpenJDK 源码下的 build/j2sdk-image 目录，这是整个 JDK 的完整编译结果，复制到 JAVA_HOME 目录，就可以作为一个完整的 JDK 使用，编译出来的虚拟机，在 <code>-version</code> 命令中带有用户的机器名。</p><pre><code class="bash">&gt; ./java -version  openjdk version &quot;1.7.0-internal-fastdebug&quot;  OpenJDK Runtime Environment (build 1.7.0-internal-fastdebug-icyfenix_2012_12_24_15_57-b00)  OpenJDK 64-Bit Server VM (build 23.0-b21-fastdebug, mixed mode) </code></pre><h2 id="6-单独编译-HotSpot-虚拟机"><a href="#6-单独编译-HotSpot-虚拟机" class="headerlink" title="6. 单独编译 HotSpot 虚拟机"></a>6. 单独编译 HotSpot 虚拟机</h2><p>在大多数时候，如果我们不关心 JDK 中 HotSpot 虚拟机以外的内容，只想单独编译 HotSpot 虚拟机的话（例如调试虚拟机时，每次改动程序都执行整个 OpenJDK 的Makefile，速度肯定受不了），那么使用 hotspot/make 目录 下的 Makefile 进行替换即可，其他参数设置与前面是一致的，这时候虚拟机的输出结果存放在 build/hotspot/outputdir/bsd_amd64_compiler2 目录中，进入后可以见到以下几个目录。</p><pre><code class="bash">0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:24 debug  0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:24 fastdebug  0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:25 generated  0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:24 jvmg  0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:24 optimized  0 drwxr-xr-x  584 IcyFenix  staff    19K 12 13 17:25 product  0 drwxr-xr-x   15 IcyFenix  staff   510B 12 13 17:24 profiled </code></pre><p>这些目录对应了不同的优化级别，优化级别越高，性能自然越好，但是输出代码与源码的差别就越大，难于调试，具体哪个目录有内容，取决于 <code>make</code> 命令后面的参数。</p><p>在编译结束之后、运行虚拟机之前，还要手工编辑目录下的 env.sh 文件，这个文件由编译脚本自动产生，用于设置虚拟机的环境变量，里面已经发布了 “JAVA_HOME、CLASSPATH、HOTSPOT_BUILD_USER” 3个环境变量，还需要增加一个“LD_LIBRARY_PATH”，内容如下：</p><pre><code class="bash">LD_LIBRARY_PATH=.:${JAVA_HOME}/jre/lib/amd64/native_threads:${JAVA_HOME}/jre/lib/amd64:  export LD_LIBRARY_PATH </code></pre><p>然后执行以下命令启动虚拟机（这时的启动器名为gamma），输出版本号。</p><pre><code class="bash">. ./env.sh  ./gamma -version  Using java runtime at: /Library/Java/JavaVirtualMachines/jdk1.7.0_04.jdk/Contents/Home/jre  java version &quot;1.7.0_04&quot;  Java(TM) SE Runtime Environment (build 1.7.0_04-b21)  OpenJDK 64-Bit Server VM (build 23.0-b21, mixed mode) </code></pre><p>看到自己编译的虚拟机成功运行起来，很有成就感吧!</p><blockquote><p>来源：《深入理解Java虚拟机：JVM高级特性与最佳实践（第2版）》</p><p>作者：周志明</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 简化分页查询Page接口的JSON响应</title>
      <link href="/2019/02/02/Spring%20Boot/Spring-Boot-%E7%AE%80%E5%8C%96%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2Page%E6%8E%A5%E5%8F%A3%E7%9A%84JSON%E5%93%8D%E5%BA%94/"/>
      <url>/2019/02/02/Spring%20Boot/Spring-Boot-%E7%AE%80%E5%8C%96%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2Page%E6%8E%A5%E5%8F%A3%E7%9A%84JSON%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<h3 id="多余的分页信息"><a href="#多余的分页信息" class="headerlink" title="多余的分页信息"></a>多余的分页信息</h3><p>Spring Data 的 Page 接口进行数据分页返回了很多很多垃圾信息：</p><pre><code class="JSON">{    &quot;status&quot;: 0,    &quot;data&quot;: {        &quot;content&quot;: [            {                &quot;goodsId&quot;: 1,                &quot;producerId&quot;: 1,                &quot;categoryId&quot;: 4,                &quot;name&quot;: &quot;耐克sb滑板鞋&quot;,                &quot;price&quot;: 500,                &quot;stock&quot;: 500,                &quot;status&quot;: &quot;正常&quot;,                &quot;createTime&quot;: &quot;2019-02-02T03:48:33.000+0000&quot;,                &quot;updateTime&quot;: null            },            {                &quot;goodsId&quot;: 2,                &quot;producerId&quot;: 1,                &quot;categoryId&quot;: 4,                &quot;name&quot;: &quot;阿迪达斯小白鞋&quot;,                &quot;price&quot;: 500,                &quot;stock&quot;: 300,                &quot;status&quot;: &quot;正常&quot;,                &quot;createTime&quot;: &quot;2019-02-02T03:48:59.000+0000&quot;,                &quot;updateTime&quot;: null            }        ],        &quot;pageable&quot;: {            &quot;sort&quot;: {                &quot;sorted&quot;: false,                &quot;unsorted&quot;: true,                &quot;empty&quot;: true            },            &quot;offset&quot;: 0,            &quot;pageSize&quot;: 10,            &quot;pageNumber&quot;: 0,            &quot;paged&quot;: true,            &quot;unpaged&quot;: false        },        &quot;last&quot;: true,        &quot;totalPages&quot;: 1,        &quot;totalElements&quot;: 2,        &quot;size&quot;: 10,        &quot;number&quot;: 0,        &quot;numberOfElements&quot;: 2,        &quot;sort&quot;: {            &quot;sorted&quot;: false,            &quot;unsorted&quot;: true,            &quot;empty&quot;: true        },        &quot;first&quot;: true,        &quot;empty&quot;: false    }}</code></pre><h3 id="实际需要的分页信息"><a href="#实际需要的分页信息" class="headerlink" title="实际需要的分页信息"></a>实际需要的分页信息</h3><p>实际上我只需要下面这些分页信息：</p><pre><code class="JSON">&quot;totalPages&quot;: 3,&quot;totalElements&quot;: 20,&quot;pageNumber&quot;: 2,&quot;numberOfElements&quot;: 7</code></pre><h3 id="创建-PageChunk-类进行封装"><a href="#创建-PageChunk-类进行封装" class="headerlink" title="创建 PageChunk 类进行封装"></a>创建 PageChunk 类进行封装</h3><p>我的 GoodsRepository 接口为：</p><pre><code class="Java">Page&lt;Goods&gt; findByCategoryId(Integer categoryId, Pageable pageable);</code></pre><p>我们看到返回了很多多余的，重复的数据。为了解决这个问题，创建一个Pagination DTO(<code>PageChunk</code>)来包装一下分页数据。这个类的作用很简单就是包含每一次分页的内容和分页元数据（<strong>总页数</strong>，<strong>搜索结果总数</strong>，<strong>当前页号</strong>， <strong>当前页包含多少项</strong>）。</p><pre><code class="Java">import lombok.Data;import java.util.List;/** * @author zjxjwxk */@Datapublic class PageChunk&lt;T&gt; {    private List&lt;T&gt; content;    private int totalPages;    private long totalElements;    private int pageNumber;    private int numberOfElements;}</code></pre><p>同时，我根据业务需求对商品信息进行了DTO的包装，（只需要商品id，名称和价格即可）。</p><pre><code class="Java">import lombok.Data;/** * @author zjxjwxk */@Datapublic class GoodsDTO {    private Integer goodsId;    private String name;    private Integer price;}</code></pre><h3 id="用-PageChunk-替代-Page"><a href="#用-PageChunk-替代-Page" class="headerlink" title="用 PageChunk 替代 Page"></a>用 PageChunk 替代 Page</h3><p>编写以下 getPageChunk 方法用于将 Page<goods> 对象转化为 PageChunk<goodsdto> 对象，仅仅提取 Page 对象中所需要的Content 和一些分页信息，将 PageChunk 对象封装并返回。编写 getGoodsDTO 方法用于简化商品信息。</goodsdto></goods></p><pre><code class="Java">@Service(&quot;GoodsService&quot;)public class GoodsServiceImpl implements GoodsService {    private final GoodsRepository goodsRepository;    @Autowired    public GoodsServiceImpl(GoodsRepository goodsRepository) {        this.goodsRepository = goodsRepository;    }    @Override    public ServerResponse getList(String keyword, Integer categoryId,                                               Integer pageNum, Integer pageSize,                                               String orderBy) {        PageRequest pageRequest = PageRequest.of(pageNum - 1, pageSize);        Page&lt;Goods&gt; goodsPage = goodsRepository.findByCategoryId(categoryId, pageRequest);        return ServerResponse.createBySuccess(getPageChunk(goodsPage));    }    private PageChunk&lt;GoodsDTO&gt; getPageChunk(Page&lt;Goods&gt; goodsPage) {        PageChunk&lt;GoodsDTO&gt; pageChunk = new PageChunk&lt;&gt;();        pageChunk.setContent(getGoodsDTO(goodsPage.getContent()));        pageChunk.setTotalPages(goodsPage.getTotalPages());        pageChunk.setTotalElements(goodsPage.getTotalElements());        pageChunk.setPageNumber(goodsPage.getPageable().getPageNumber() + 1);        pageChunk.setNumberOfElements(goodsPage.getNumberOfElements());        return pageChunk;    }    private List&lt;GoodsDTO&gt; getGoodsDTO(List&lt;Goods&gt; goodsList) {        List&lt;GoodsDTO&gt; goodsDTOList = new ArrayList&lt;&gt;();        for (Goods goods :                goodsList) {            GoodsDTO goodsDTO = new GoodsDTO();            goodsDTO.setGoodsId(goods.getGoodsId());            goodsDTO.setName(goods.getName());            goodsDTO.setPrice(goods.getPrice());            goodsDTOList.add(goodsDTO);        }        return goodsDTOList;    }}</code></pre><blockquote><p>为了返回 JSON 数据，我自定义了一个 ServerResponse 服务响应对象，它的作用是让我们返回的 JSON 有一个通用的格式</p></blockquote><h3 id="简化后的结果"><a href="#简化后的结果" class="headerlink" title="简化后的结果"></a>简化后的结果</h3><pre><code class="JSON">{    &quot;status&quot;: 0,    &quot;data&quot;: {        &quot;content&quot;: [            {                &quot;goodsId&quot;: 8,                &quot;name&quot;: &quot;Clarks 男 Tri Spark生活休闲鞋26135668&quot;,                &quot;price&quot;: 459            },            {                &quot;goodsId&quot;: 9,                &quot;name&quot;: &quot;Adidas三叶草 男 休闲跑步鞋 STAN SMITH M20324&quot;,                &quot;price&quot;: 415            },            {                &quot;goodsId&quot;: 10,                &quot;name&quot;: &quot;Skechers 斯凯奇 SKECHERS SPORT系列 男 绑带运动鞋 999732-NVOR&quot;,                &quot;price&quot;: 355            },            {                &quot;goodsId&quot;: 11,                &quot;name&quot;: &quot;Saucony 圣康尼 RSP 男 休闲跑步鞋 KINETA RELAY S2524465&quot;,                &quot;price&quot;: 479            },            {                &quot;goodsId&quot;: 12,                &quot;name&quot;: &quot;Mustang 男 帆布鞋休闲运动 4058-305（亚马逊进口直采,德国品牌）&quot;,                &quot;price&quot;: 324            },            {                &quot;goodsId&quot;: 13,                &quot;name&quot;: &quot;Clarks 男 Tri Spark生活休闲鞋26135655&quot;,                &quot;price&quot;: 123425            },            {                &quot;goodsId&quot;: 14,                &quot;name&quot;: &quot;New Balance 574系列 男 休闲跑步鞋 ML574EG-D&quot;,                &quot;price&quot;: 324            }        ],        &quot;totalPages&quot;: 3,        &quot;totalElements&quot;: 20,        &quot;pageNumber&quot;: 2,        &quot;numberOfElements&quot;: 7    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring-Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring-Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Eureka</title>
      <link href="/2019/01/31/Spring%20Cloud/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/Spring-Cloud-Eureka/"/>
      <url>/2019/01/31/Spring%20Cloud/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/Spring-Cloud-Eureka/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Cloud-Eureka"><a href="#Spring-Cloud-Eureka" class="headerlink" title="Spring Cloud Eureka"></a>Spring Cloud Eureka</h1><ul><li>基于 Netflix Eureka 做了二次封装</li><li>两个组件组成：<ul><li>Eureka Server 注册中心<ul><li>作为具有服务注册功能的服务器，是服务注册中心，系统中的其他微服务使用 Eureka Client 连接到Eureka Server ，并维持心跳连接以监控各个微服务是否正常运行。</li></ul></li><li>Eureka Client 服务注册<ul><li>用于简化与服务器的交互，作为轮询负载均衡器，并提供服务的故障切换支持。</li></ul></li></ul></li></ul><h2 id="启动-Eureka-Server"><a href="#启动-Eureka-Server" class="headerlink" title="启动 Eureka Server"></a>启动 Eureka Server</h2><h3 id="1-创建Spring项目"><a href="#1-创建Spring项目" class="headerlink" title="1. 创建Spring项目"></a>1. 创建Spring项目</h3><p><img src="/2019/01/31/Spring Cloud/服务注册与发现/Spring-Cloud-Eureka/image-20190131155138441.png" alt="创建Spring项目"></p><h1 id="2-填充项目信息"><a href="#2-填充项目信息" class="headerlink" title="2. 填充项目信息"></a>2. 填充项目信息</h1><p><img src="/2019/01/31/Spring Cloud/服务注册与发现/Spring-Cloud-Eureka/image-20190131155241197.png" alt="填充项目信息"></p><h3 id="3-选择项目类型为-Cloud-Discovery-中的-Eureka-Server"><a href="#3-选择项目类型为-Cloud-Discovery-中的-Eureka-Server" class="headerlink" title="3. 选择项目类型为 Cloud Discovery 中的 Eureka Server"></a>3. 选择项目类型为 Cloud Discovery 中的 Eureka Server</h3><p><img src="/2019/01/31/Spring Cloud/服务注册与发现/Spring-Cloud-Eureka/image-20190131155453826.png" alt="选择Eureka Server"></p><h3 id="4-完成创建"><a href="#4-完成创建" class="headerlink" title="4. 完成创建"></a>4. 完成创建</h3><p><img src="/2019/01/31/Spring Cloud/服务注册与发现/Spring-Cloud-Eureka/image-20190131160337079.png" alt="完成创建"></p><h3 id="5-添加注解-EnableEurekaServer"><a href="#5-添加注解-EnableEurekaServer" class="headerlink" title="5. 添加注解 @EnableEurekaServer"></a>5. 添加注解 @EnableEurekaServer</h3><pre><code class="Java">@SpringBootApplication@EnableEurekaServerpublic class EurekaApplication {    public static void main(String[] args) {        SpringApplication.run(EurekaApplication.class, args);    }}</code></pre><h3 id="6-配置-application-yml"><a href="#6-配置-application-yml" class="headerlink" title="6. 配置 application.yml"></a>6. 配置 application.yml</h3><pre><code class="yml">eureka:  client:    service-url:      defaultZone: http://localhost:8761/eureka/    register-with-eureka: falsespring:  application:    name: eurekaserver:  port: 8761</code></pre><h3 id="7-启动-Eureka-Server"><a href="#7-启动-Eureka-Server" class="headerlink" title="7. 启动 Eureka Server"></a>7. 启动 Eureka Server</h3><p><img src="/2019/01/31/Spring Cloud/服务注册与发现/Spring-Cloud-Eureka/image-20190131172458551.png" alt="Eureka Server信息"></p><p>这样，一个简单的Eureka Server就启动完成了。</p>]]></content>
      
      
      <categories>
          
          <category> Spring-Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring-Cloud </tag>
            
            <tag> 微服务架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务简介</title>
      <link href="/2019/01/31/Spring%20Cloud/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/01/31/Spring%20Cloud/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务简介"><a href="#微服务简介" class="headerlink" title="微服务简介"></a>微服务简介</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>The microservice architectural style is an approach to developing a single application running as <strong>a suite of small services</strong>, each <strong>running its own process</strong> and communicating with lightweight mechanisms, often an HTTP resource API. These services are <strong>built around business capabilities</strong> and <strong>independently deployable</strong> by fully automated deployment machinery. There is <strong>a bare minimum of centralized management of these services</strong>, which may be written in different programming languages and use different data storage technologies.</p><ul><li>一系列微小的服务共同组成</li><li>跑在自己的进程里</li><li>每个服务为独立的业务开发</li><li>独立部署</li><li>分布式的管理</li></ul><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。</p><p><img src="http://dubbo.apache.org/docs/zh-cn/user/sources/images/dubbo-architecture-roadmap.jpg" alt="单一应用架构-&gt;垂直应用架构-&gt;分布式服务架构-&gt;流动计算架构"></p><h3 id="单一应用架构"><a href="#单一应用架构" class="headerlink" title="单一应用架构"></a>单一应用架构</h3><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。</p><h3 id="垂直应用架构"><a href="#垂直应用架构" class="headerlink" title="垂直应用架构"></a>垂直应用架构</h3><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的Web框架(MVC)是关键。</p><h3 id="分布式服务架构"><a href="#分布式服务架构" class="headerlink" title="分布式服务架构"></a>分布式服务架构</h3><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(RPC)是关键。</p><h3 id="流动计算架构"><a href="#流动计算架构" class="headerlink" title="流动计算架构"></a>流动计算架构</h3><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的资源调度和治理中心(SOA)是关键。</p><h2 id="单体架构"><a href="#单体架构" class="headerlink" title="单体架构"></a>单体架构</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>容易测试</li><li>容易部署</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>开发效率低</li><li>代码维护难</li><li>部署不灵活</li><li>稳定性不高</li><li>扩展性不够</li></ul><h2 id="分布式定义"><a href="#分布式定义" class="headerlink" title="分布式定义"></a>分布式定义</h2><p>旨在支持应用程序和服务的开发，可以利用物理架构，由多个自治的处理元素，不共享主内存，但通过网络发送消息合作。——Leslie Lamport</p><h2 id="简单的微服务"><a href="#简单的微服务" class="headerlink" title="简单的微服务"></a>简单的微服务</h2><p><img src="/2019/01/31/Spring Cloud/微服务架构/微服务简介/image-20190131150906318.png" alt="简单的微服务"></p><h3 id="微服务架构的基础框架-组件"><a href="#微服务架构的基础框架-组件" class="headerlink" title="微服务架构的基础框架/组件"></a>微服务架构的基础框架/组件</h3><ul><li>服务注册发现</li><li><p>服务网关（Service Gateway）</p></li><li><p>后端通用服务（也称中间层服务 Middle Tire Service）</p></li><li>前端服务（也称边缘服务 Edge Service）<ul><li>聚合<ul><li>对多个API调用进行聚合，从而减少客户端的请求数</li></ul></li><li>裁剪<ul><li>对返回不同的设备的内容进行裁剪（PC、移动端）</li></ul></li></ul></li></ul><h2 id="两大阵营"><a href="#两大阵营" class="headerlink" title="两大阵营"></a>两大阵营</h2><h3 id="阿里系"><a href="#阿里系" class="headerlink" title="阿里系"></a>阿里系</h3><ul><li>Dubbo（服务化治理）</li><li>Zookeeper（服务注册中心）</li><li>Spring MVC or SpringBoot</li><li>…</li></ul><h3 id="Spring-Cloud"><a href="#Spring-Cloud" class="headerlink" title="Spring Cloud"></a>Spring Cloud</h3><ul><li>Spring Cloud Netflix Eureka</li><li>SpringBoot</li><li>…</li></ul><h2 id="Spring-Cloud-是什么"><a href="#Spring-Cloud-是什么" class="headerlink" title="Spring Cloud 是什么"></a>Spring Cloud 是什么</h2><ul><li>Spring Cloud 是一个开发工具集，含了多个子项目<ul><li>利用Spring Boot的开发便利</li><li>主要是基于对Netflix开源组件的进一步封装</li></ul></li><li>Spring Cloud 简化了分布式开发</li><li>掌握如何使用，更要理解分布式、架构的特点</li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring-Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring-Cloud </tag>
            
            <tag> 微服务架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS jar包后台运行</title>
      <link href="/2019/01/30/Linux/CentOS/CentOS%20jar%E5%8C%85%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/01/30/Linux/CentOS/CentOS%20jar%E5%8C%85%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="运行jar包命令"><a href="#运行jar包命令" class="headerlink" title="运行jar包命令"></a>运行jar包命令</h1><pre><code class="shell">java -jar application.jar</code></pre><p>当前ssh窗口被锁定，可按CTRL + C打断程序运行，或直接关闭窗口让程序退出。</p><p>那如何让窗口不被锁定？</p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><pre><code class="shell">java -jar application.jar &amp;</code></pre><p>&amp;代表在后台运行。</p><p>当前ssh窗口不被锁定，但是当窗口关闭时，程序中止运行。</p><p>继续改进，如何让窗口关闭时，程序仍然运行？</p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><pre><code class="shell">nohup java -jar application.jar &amp;</code></pre><p>nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行。</p><p>那怎么不打印该程序输出的内容，而写入某个文件中呢？</p><h1 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h1><pre><code class="shell">nohup java -jar application.jar &gt;out.txt &amp;</code></pre><p>当用 nohup 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中，除非另外指定了输出文件，如 out.txt。</p><p>command &gt;out.txt是将command的输出重定向到out.txt文件，即输出内容不打印到屏幕上，而是输出到out.txt文件中。</p><h3 id="通过jobs命令查看后台运行任务"><a href="#通过jobs命令查看后台运行任务" class="headerlink" title="通过jobs命令查看后台运行任务"></a>通过jobs命令查看后台运行任务</h3><pre><code class="shell">jobs</code></pre><p>那么就会列出所有后台执行的作业，并且每个作业前面都有个编号。</p><h3 id="如果想将某个作业调回前台控制，只需要-fg-编号即可。"><a href="#如果想将某个作业调回前台控制，只需要-fg-编号即可。" class="headerlink" title="如果想将某个作业调回前台控制，只需要 fg + 编号即可。"></a>如果想将某个作业调回前台控制，只需要 fg + 编号即可。</h3><pre><code class="shell">fg 23</code></pre><h3 id="查看某端口占用的线程的pid"><a href="#查看某端口占用的线程的pid" class="headerlink" title="查看某端口占用的线程的pid"></a>查看某端口占用的线程的pid</h3><pre><code class="shell">netstat -nlp |grep :9181</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Applied-Software-Project-Management</title>
      <link href="/2019/01/20/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Applied-Software-Project-Management/Applied-Software-Project-Management/"/>
      <url>/2019/01/20/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Applied-Software-Project-Management/Applied-Software-Project-Management/</url>
      
        <content type="html"><![CDATA[<h1 id="General-characteristics-of-a-project"><a href="#General-characteristics-of-a-project" class="headerlink" title="General characteristics of a project"></a>General characteristics of a project</h1><p>A project is a temporary endeavour undertaken to create a unique product or service. It is specific, timely, usually multidisciplinary, and always conflict ridden. Projects are parts of overall programs and may be broken down into tasks, subtasks, and further if desired.</p><ul><li>Vary in size</li><li>Vary in type</li><li>Have desired completion dates</li><li>Requires various kinds of knowledge</li><li>Requires domain knowledge</li><li>Requires team work</li><li>Requires responsibilities and authorities</li><li>Do not exist in isolation</li></ul><h1 id="General-management-vs-Project-management"><a href="#General-management-vs-Project-management" class="headerlink" title="General management vs. Project management"></a>General management vs. Project management</h1><ul><li>General management<ul><li>Organizational management</li><li>Portfolio management</li><li>Program management</li><li>Not time limited?</li><li>No completion dates?</li><li>No managerial hierarchy?</li><li>Routine activities</li><li>Annual budgeting</li></ul></li><li>Project management<ul><li>Project management is the application of knowledge, skills, tools, and techniques to project activities to meet the project requirements</li></ul></li></ul><h1 id="Five-categories-of-activities"><a href="#Five-categories-of-activities" class="headerlink" title="Five categories of activities"></a>Five categories of activities</h1><ul><li>Initiating</li><li>Planning</li><li>Executing</li><li>Monitoring and Controlling</li><li>Closing</li></ul><h1 id="How-does-the-world-look-like"><a href="#How-does-the-world-look-like" class="headerlink" title="How does the world look like?"></a>How does the world look like?</h1><ul><li>Uncertainty</li><li>Plans go awry</li><li>Even the closest future is unpredictable</li><li>Chance events occur frequently</li><li>The life is a rough road</li><li>We need to do trade-offs every day</li><li>We constantly negotiate</li><li>We need flexibility</li></ul><h1 id="Risk-management"><a href="#Risk-management" class="headerlink" title="Risk management"></a>Risk management</h1><ul><li>“Project management is risk management”</li><li>Identify potential problems before they occur</li><li>Put preventive actions in place before unrecoverable harm occurs</li></ul><h2 id="Risks"><a href="#Risks" class="headerlink" title="Risks"></a>Risks</h2><ul><li>possible events that may affect the project negatively</li></ul><h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><ul><li>events that have or will affect the project negatively<h2 id="Stages-in-risk-management"><a href="#Stages-in-risk-management" class="headerlink" title="Stages in risk management:"></a>Stages in risk management:</h2><ul><li>Risk identification; project, product and business risks</li><li>Risk analysis; probability and consequences, triggers</li><li>Risk planning; how to address risks – eliminate, reduce, ignore</li><li>Risk monitoring; controlling and updating the risks</li></ul></li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548175505399.png" alt="Risk reporting Matrix"></p><h1 id="Decision-matrix"><a href="#Decision-matrix" class="headerlink" title="Decision matrix"></a>Decision matrix</h1><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548142778618.png" alt="Decision matrix"></p><h1 id="Gantt-chart"><a href="#Gantt-chart" class="headerlink" title="Gantt chart"></a>Gantt chart</h1><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548144904444.png" alt="Strategic Plan for New Business"></p><h1 id="RACI-matrix"><a href="#RACI-matrix" class="headerlink" title="RACI matrix"></a>RACI matrix</h1><ul><li>Usually derived from the WBS</li><li>Clarify responsibilities<h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2></li><li>Responsible, who is responsible for actually doing the activity<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2></li><li>Accountable, who is accountable for the completion of the task<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2></li><li>Consult, who should be consulted<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2></li><li>Informed, who must be informed</li><li>Note that combinations may exist, e.g. AR, CI, AC</li><li><p>Example<br><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548142472944.png" alt="RACI matrix"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548142487683.png" alt="RACI Model"></p></li></ul><h1 id="Critical-path"><a href="#Critical-path" class="headerlink" title="Critical path"></a>Critical path</h1><ul><li>A path from the projects start event to its finish event that, if delayed, will delay the completion date</li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548143653742.png" alt="Critical path1"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548144057724.png" alt="Critical path2"></p><h1 id="Brainstorming"><a href="#Brainstorming" class="headerlink" title="Brainstorming"></a>Brainstorming</h1><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548142617388.png" alt="Brainstorming"></p><h1 id="Sprint-Sprint-backlog"><a href="#Sprint-Sprint-backlog" class="headerlink" title="Sprint, Sprint backlog"></a>Sprint, Sprint backlog</h1><h2 id="Sprint"><a href="#Sprint" class="headerlink" title="Sprint"></a>Sprint</h2><ul><li>A fixed period of time, usually 2 or 3 weeks but can be more</li><li>Always use the same fixed period</li><li>The development team should have full authority during the sprint</li><li>The Sprint goal must be defined in advance</li><li><p>The team can change (the depth of) the functionality of the Sprint, as long as it meets its sprint goal</p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548155535982.png" alt="Sprint"></p></li></ul><h1 id="Product-backlog"><a href="#Product-backlog" class="headerlink" title="Product backlog"></a>Product backlog</h1><ul><li>Requirements gathering for the Product Backlog<ul><li>Identify the stakeholders and their goals<ul><li>Identify the different categories of stakeholders</li><li>Ask the question: “Why do you need this?”</li><li>What are the business objectives and goals?</li><li>How do we measure goal accomplishment?</li><li>The goals shall be SMART:<ul><li>Specific</li><li>Measurable</li><li>Acceptable</li><li>Realistic</li><li>Time-based</li></ul></li></ul></li><li>Gather requirements for the Product Backlog<ul><li>Meet the stakeholders</li><li>Understand the stakeholders needs</li><li>Use the “Tree and Forest” analogy<ul><li>Identify the trees, branches and leaves</li><li>Use a top down approach mixed with bottom-up?</li><li>The leaves may be user stories</li><li>Group the leaves into branches</li><li>Group the branches into trees</li><li>Verify the stories with the stakeholders</li></ul></li><li>The CUTFIT rules Validate the user stories<ul><li>Consistent no conflict between user stories</li><li>Unambiguous one interpretation</li><li>Testable test cases can be created</li><li>Feasible possible to implement</li><li>Independent independent of other user stories</li><li>Traceable you can link the story to the project goals</li></ul></li></ul></li></ul></li><li>Do not write stories endlessly. You can stop when you cannot decompose anymore or when you can derive tasks with working effort of approximately one day</li><li>Product Backlog Item (PBI), example</li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548060857834.png" alt="Product Backlog Item"></p><ul><li>Scrum board</li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548060911632.png" alt="Scrum board"></p><ul><li>Some thoughts about the Backlog<ul><li>Scrum in action recommends items to be stories (branches)</li><li>Frequently, in practice, it seems to be a mix of stories, features, functions, tasks, improvements and incidents</li><li>If you choose stories, you should consider defining tasks (leaves) in the stories</li><li>The tasks should be transferred to activities in the sprint planning</li></ul></li></ul><h1 id="Burndown-charts-amp-EVM-method"><a href="#Burndown-charts-amp-EVM-method" class="headerlink" title="Burndown charts &amp; EVM method"></a>Burndown charts &amp; EVM method</h1><h2 id="Earned-Value-Method-EVM"><a href="#Earned-Value-Method-EVM" class="headerlink" title="Earned Value Method - EVM"></a>Earned Value Method - EVM</h2><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548170614674.png" alt="Negative schedule, negative cost"><br><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548170969127.png" alt="Positive schedule, negative cost"><br><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548170999918.png" alt="Negative schedule, positive cost"><br><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548171236485.png" alt="Positive schedule, positive cost"></p><h2 id="Trend-projection-EV"><a href="#Trend-projection-EV" class="headerlink" title="Trend projection - EV"></a>Trend projection - EV</h2><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172014991.png" alt="Trend projection1"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172040323.png" alt="Trend projection2"></p><h2 id="Agile-and-Scrum-tracking"><a href="#Agile-and-Scrum-tracking" class="headerlink" title="Agile and Scrum tracking"></a>Agile and Scrum tracking</h2><ul><li>Release tracking<ul><li>Tracking story progress</li><li>Release burndown chart</li></ul></li><li>Sprint tracking<ul><li>Tracking task progress</li><li>Sprint burndown chart</li></ul></li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172373109.png" alt="Release burndown chart1"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172438304.png" alt="Release burndown chart2"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172594127.png" alt="Release burndown chart3"></p><h2 id="Burndown-charts"><a href="#Burndown-charts" class="headerlink" title="Burndown charts"></a>Burndown charts</h2><ul><li>Displays the <strong>remaining</strong> effort for a given period of time</li><li>Do have good value for the stakeholders and the team</li><li>Visualization is a good thing to do</li><li>Conversation starters</li><li>Over time it will give you the average number of points for a sprint</li><li>You will learn the teams velocity</li><li>You need to have a clear definition of done (DoD)</li></ul><h2 id="Sprint-burndown-chart"><a href="#Sprint-burndown-chart" class="headerlink" title="Sprint burndown chart"></a>Sprint burndown chart</h2><ul><li>Burndown charts<ul><li>X axis displays working days</li><li>Y axis displays remaining effort</li><li>Ideal effort is (may be) a good guideline</li><li>Consists of real progress of effort</li></ul></li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172874084.png" alt="Put # of hours (story points) at the Y axis"></p><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548172936874.png" alt="If backlog items are added to the sprint"></p><h1 id="Scrum-team"><a href="#Scrum-team" class="headerlink" title="Scrum team"></a>Scrum team</h1><ul><li>Why is Scrum effective?<ul><li>Systematic reduction of problems and risks</li><li>A leaner software development cycle</li><li>More adaptive process</li><li>People´s motivation and pride are in focus</li></ul></li></ul><h1 id="Monitoring-and-Controlling"><a href="#Monitoring-and-Controlling" class="headerlink" title="Monitoring and Controlling"></a>Monitoring and Controlling</h1><ul><li>Determine the current status of the project schedule</li><li>Influencing the factors that create schedule changes</li><li>Determining if the project schedule has changed</li><li>Managing the actual changes as they occur</li></ul><h2 id="Monitoring"><a href="#Monitoring" class="headerlink" title="Monitoring"></a>Monitoring</h2><ul><li>All parties, stakeholders and others, must have available the information required to exercise control over the project</li><li>An effective information system is needed</li><li>Automated and manual</li><li>Collection, recording and reporting project information</li><li>Activities and performance need to be monitored</li></ul><h2 id="Controlling"><a href="#Controlling" class="headerlink" title="Controlling"></a>Controlling</h2><ul><li>Uses monitored data and information to bring actual performance into agreement with the plan</li><li>Do we have the right information?</li><li>How shall we interpret the information?</li><li>How to balance into decisions?</li><li>Without control there would be confusion, scope risks and conflict among stakeholders</li><li>Chaos could be the norm of the project</li><li>Monitoring and Controlling are easily treated together</li></ul><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548165068217.png" alt="Monitoring and Control"></p><h2 id="Execute-plan-Design-the-monitoring-system"><a href="#Execute-plan-Design-the-monitoring-system" class="headerlink" title="Execute plan - Design the monitoring system"></a>Execute plan - Design the monitoring system</h2><ul><li>Identify characteristics of scope, time and cost</li><li>Identify the goals, the objectives</li><li>Define the boundaries when do we need to take action?<ul><li>Thresholds.</li></ul></li><li>Monitor progress against the sub-goals (e.g. milestones, sprint goals)</li><li>Define data gathering mechanisms</li><li>Define communication plan</li><li>Measure activities, but always measure against RESULTS</li><li>Define the system before-hand, up front</li></ul><h2 id="Obtain-results"><a href="#Obtain-results" class="headerlink" title="Obtain results"></a>Obtain results</h2><ul><li>Decide on the data format<ul><li>Frequency, e.g. occurrence of event</li><li>Raw numbers, actual amount</li><li>Subjective numeric ratings, estimates, ranking</li><li>Indicators, indirect measures</li><li>Verbal characterization, team spirit, soft issues, feelings</li></ul></li><li>Collect data<ul><li>Decide on how to collect the defined data. More easily and preferably automated.</li></ul></li></ul><h2 id="Analyse-results"><a href="#Analyse-results" class="headerlink" title="Analyse results"></a>Analyse results</h2><ul><li>Analyse BEFORE reporting</li><li>Simple aggregation can be done</li><li>Compare with the planned results</li><li>Averages, summaries, medians, trends</li><li>Examples<ul><li>Number of activities done/left</li><li>Actual cost/remaining cost</li><li>Number of bugs per unit</li><li>Performance or velocity</li></ul></li><li>You should use data for discovering, and as input for decision making</li></ul><h2 id="Identify-variance-and-Analyse-results"><a href="#Identify-variance-and-Analyse-results" class="headerlink" title="Identify variance and Analyse results"></a>Identify variance and Analyse results</h2><ul><li>Identify deviations from the plan</li><li>Variances can lead to severe problems</li><li>The goal is to identify variances as early as possible</li><li>Use plots, bars, lines, dots, etc. for analyzing trends (more later)</li><li>Compare the variances towards the planned (allowed) variances</li></ul><h2 id="Variances"><a href="#Variances" class="headerlink" title="Variances"></a>Variances</h2><ul><li>Acceptable – continue to monitor</li><li>Unacceptable – additional action is required<ul><li>Consult personnel</li><li>Consult expertise</li><li>Could it generate more problems?</li><li>Any additional risks?</li><li>Call for meeting, analyze in groups</li></ul></li></ul><h2 id="Identify-root-cause-and-consider-options"><a href="#Identify-root-cause-and-consider-options" class="headerlink" title="Identify root cause and consider options"></a>Identify root cause and consider options</h2><ul><li>Do not immediately adopt the first identified solution</li><li>Try to find the optimal solution</li><li>Analyse side-effects to the different solutions</li><li>Resources needed?</li><li>Cost?</li><li>Time?</li><li>Need help/decisions from sponsor/stakeholders?</li></ul><h2 id="Corrective-action-and-implementation"><a href="#Corrective-action-and-implementation" class="headerlink" title="Corrective action and implementation"></a>Corrective action and implementation</h2><ul><li>Decide on corrective actions<ul><li>Review options</li><li>Define success measures if possible</li><li>Make choices of actions</li><li>Who decide?</li></ul></li><li>Implement<ul><li>How will it be implemented?</li><li>By whom? When?</li><li>Who is responsible?</li></ul></li></ul><h2 id="Analyse-the-results"><a href="#Analyse-the-results" class="headerlink" title="Analyse the results"></a>Analyse the results</h2><ul><li>Analyse the results of the corrective actions</li><li>Compare against the defined measurements</li><li>If unacceptable result then go to root cause analysis (again)</li><li>If acceptable close the problem and store into lessons learned</li><li>Repository of Lessons Learned: Take care of your Best Practices</li><li>Avoid the situation from re-occurring</li></ul><h2 id="Reporting"><a href="#Reporting" class="headerlink" title="Reporting"></a>Reporting</h2><ul><li>Different kinds of reports<ul><li>Status reports</li><li>Progress reports</li><li>Forecast report</li><li>Time/Cost report</li><li>Variance report</li><li>Presentations</li><li>Demos</li></ul></li></ul><h1 id="SWOT-analysis"><a href="#SWOT-analysis" class="headerlink" title="SWOT analysis"></a>SWOT analysis</h1><p><img src="/2019/01/20/期末复习/Applied-Software-Project-Management/Applied-Software-Project-Management/1548056696215.png" alt="SWOT"></p><ul><li><strong>Strengths and Weaknesses</strong><ul><li>Internal factors</li><li>Human factors</li><li>Finances</li><li>Organisational factors</li><li>Physical resources</li><li>Experiences and knowledge</li></ul></li><li><strong>Opportunities and Threats</strong><ul><li>Trends</li><li>New research</li><li>Funding</li><li>Competitors</li><li>Competence</li><li>Channels (marketing)</li></ul></li><li><strong>SWOT analysis</strong><ul><li>Prioritize elements in the analysis</li><li>Define possible activities</li><li>Analyse if it is feasible</li><li>Decide on further management and activities</li><li>Close down strategic direction if found</li><li>necessary</li><li>Keep the SWOT-analysis continuously updated</li><li>Focus on the prioritized elements</li></ul></li></ul><h1 id="Stakeholder-Management"><a href="#Stakeholder-Management" class="headerlink" title="Stakeholder Management"></a>Stakeholder Management</h1><ul><li><strong>Definition</strong> of the term stakeholder:<ul><li>An individual</li><li>A group</li><li>An organisation</li><li>who may affect, be affected by, or perceive itself to be affected by a decision, activity, or outcome of a project.</li><li>Project governance the alignment of the project stakeholders´ needs or objectives</li></ul></li><li>Stakeholder can be<ul><li>The sponsor, the one who provides the resources and support</li><li>Customers and users persons or organisations that will approve and manage the project´s product, service or result.</li><li>Sellers provides components or services necessary for the project</li><li>Business partners provides special expertise, e.g. installation, training, support.</li></ul></li><li>Example<ul><li>Organizational groups internal groups affected by the project activities</li><li>Functional managers human resource, financial, accounting, procurement, IT</li><li>Other stakeholders government experts, subject matter experts, consultants,</li></ul></li></ul><h1 id="Project-Cost-estimation"><a href="#Project-Cost-estimation" class="headerlink" title="Project Cost estimation"></a>Project Cost estimation</h1><ul><li>Budgeting the project<ul><li>Must (always) be approved by management</li><li>Resources must be allocated based on the estimations</li><li>Should be connected to the vision and goals</li><li>Should be supporting to the portfolio and program management</li><li>Upper management is always (?) relating the project success to its relation to the approved budget</li></ul></li><li>Budgeting the project, necessities<ul><li>Shall always be related to the stakeholder requirements</li><li>You need to have an idea of which resources you have</li><li>Correct data must be collected</li><li>Timely reporting</li><li>Strong focus on resource and cost predictions</li><li>Confirm approval of changes</li><li>Consider always changed cost predictions when decisions are taken</li><li>Consider changed cost predictions when problems occur</li><li>Estimate changed cost predictions if risks become problems</li></ul></li><li>Forecasting<ul><li>What resources will be needed?</li><li>How much resources will be needed?</li><li>When will they be needed?</li><li>How much will the resources cost?</li></ul></li><li>The resource cost can be differentiated by<ul><li>Unit, role</li><li>Individual, level of competence or salary</li></ul></li><li>Need to consider<ul><li>Unit (hours, days, weeks, money,…)</li><li>Level of precision (round up or down)</li><li>Level of accuracy (range)</li><li>Links to backlog and stories</li><li>Threshold (agreed variations, if any)</li><li>Performance measurement (earned value or story points left)</li></ul></li><li>Cost estimation tools and techniques<ol><li>Expert judgment</li><li>Analogous estimation</li><li>Parametric estimation</li><li>Top-Down estimating</li><li>Bottom-Up estimating</li><li>Three-Point estimating</li><li>Group-decision techniques</li><li>Wide-band Delphi technique</li></ol></li></ul><h1 id="User-story-amp-story-points"><a href="#User-story-amp-story-points" class="headerlink" title="User story &amp; story points"></a>User story &amp; story points</h1><ul><li>User story<ul><li>A story is a feature a bit of functionality with some characteristics (non-functional characteristics)</li><li>Keep the stories simple and as short as possible</li><li>A story is an agreement between the customer and the supplier</li><li>It must provide some value to the customer</li><li>Stories should be independent of each other</li><li>Stories must be testable</li></ul></li><li>Examples<ul><li>As a power user, I can specify files or folders to backup based on file size, date created and date modified.</li><li>As a user, I can indicate folders not to backup so that my backup drive isn’t filled up with things I don’t need saved.</li><li>As a consumer, I want shopping cart functionality to easily purchase items online.</li></ul></li></ul><h1 id="Agile-and-Scrum"><a href="#Agile-and-Scrum" class="headerlink" title="Agile and Scrum"></a>Agile and Scrum</h1><ul><li>Agile and Scrum<ul><li>Agile volatile, easy to move, easy to change</li><li>Scrum start the game over again.</li><li>Was originally launched as a contrast to plan-driven development</li><li>The goal is: To produce software more effectively</li><li>Embrace change</li><li>Embrace change quickly!</li><li>The change towards agile is not easy</li><li>You need to have the organization with you</li><li>See change as something positive</li><li>You need to change your mind-set</li></ul></li><li>Scrum is<ul><li>a risk reduction mechanism</li><li>a leaner software process</li><li>a more adaptive software project management process</li><li>A framework based on a team´s self-organization, motivation, ownership and pride.</li></ul></li></ul><h1 id="Scrum-master"><a href="#Scrum-master" class="headerlink" title="Scrum master"></a>Scrum master</h1><ul><li>Ensuring that Scrum values, practices and rules are used</li><li>Represents the management and the team to each other</li><li>Guide and coach the team towards achieving the goals</li><li>Should protect the team towards outside disturbances</li><li>Support in keeping track of progress</li><li>Organize retrospectives to help the team and the organization to learn how to be more effective</li><li>Enforces immediate decisions needed</li></ul><h2 id="7-qualities"><a href="#7-qualities" class="headerlink" title="7 qualities"></a>7 qualities</h2><ol><li>In-depth theoretical and practical knowledge about Scrum</li><li>Great servant-leadership ability</li><li>Strong organizational skills</li><li>Great communication skills</li><li>Excellent presentation skills</li><li>Conflict resolution skills</li><li>Great human development skills</li></ol><h1 id="Product-Owner"><a href="#Product-Owner" class="headerlink" title="Product Owner"></a>Product Owner</h1><ul><li>Guards the product vision</li><li>Ensure the fulfilment of goals</li><li>Focus is on delivering business values and results</li><li>The dependence of a good product owner is high<h2 id="The-focus-is-to-control-the-backlog-by-working-with-the-stakeholders-identified"><a href="#The-focus-is-to-control-the-backlog-by-working-with-the-stakeholders-identified" class="headerlink" title="The focus is to control the backlog by working with the stakeholders identified"></a>The focus is to control the backlog by working with the stakeholders identified</h2></li><li>Gather requirements for the backlog</li><li>Solely controls the backlog</li><li>Collaborate with the team and the scrum master to do release planning</li><li>Guide and support the team</li><li>Keeps himself/herself updated with project progress</li><li>Are available to the team, give the team feedback</li><li>Is one person, not a team</li></ul><h2 id="7-qualities-1"><a href="#7-qualities-1" class="headerlink" title="7 qualities"></a>7 qualities</h2><ol><li>Know how to manage stakeholder´s expectations and sometimes their conflicting priorities</li><li>Have a clear vision and knowledge of the product</li><li>Know how to gather the requirements and turn them into a good product backlog</li><li>Be available for the team</li><li>Know how to be a good organizer</li><li>Know how to communicate better than the average person</li><li>Knows that it is all about servant leadership</li></ol><h1 id="The-Development-Team-the-Scrum-team"><a href="#The-Development-Team-the-Scrum-team" class="headerlink" title="The Development Team, the Scrum team"></a>The Development Team, the Scrum team</h1><ul><li>Self-managed and self-organized</li><li>Estimate backlog items, stories</li><li>Turns items, stories into tasks to work on in the Sprints</li><li>Commits to the sprint goals</li><li>Keeps track of progress</li><li>Responsible for Sprint demos</li><li>The team should solve their internal problems by themselves</li><li>The team should be small, 7 +- 2 persons</li><li>Minimize communication interfaces</li><li>Teams should be cross-functional, including different capabilities</li><li>Open work environments are to be preferred</li></ul><h1 id="Agile-Manifesto"><a href="#Agile-Manifesto" class="headerlink" title="Agile Manifesto"></a>Agile Manifesto</h1><ul><li>Individuals and interactions——over processes and tools</li><li>Working software——over comprehensive documentation</li><li>Customer collaboration——over contract negotiation</li><li>Responding to change——over following a plan</li></ul><h1 id="Daily-Scrum-meetings"><a href="#Daily-Scrum-meetings" class="headerlink" title="Daily Scrum meetings"></a>Daily Scrum meetings</h1><ul><li>Where the team communicates</li><li>Approximately 15 minutes, short meetings</li><li>Stand-up meeting<h2 id="Focus-on-three-things"><a href="#Focus-on-three-things" class="headerlink" title="Focus on three things:"></a>Focus on three things:</h2></li><li>What has been done since the previous meeting?</li><li>What are we going to do?</li><li>What risks and problems exists?</li><li>Removing obstacles</li><li>Making necessary decisions</li></ul><h1 id="Leadership-style-Situational-leadership-style"><a href="#Leadership-style-Situational-leadership-style" class="headerlink" title="Leadership style, Situational leadership style"></a>Leadership style, Situational leadership style</h1><h2 id="Project-Manager"><a href="#Project-Manager" class="headerlink" title="Project Manager"></a>Project Manager</h2><ul><li>The person assigned by the performing organization to lead the team that is responsible for achieving the project objectives</li></ul><h2 id="Interpersonal-skills-needed"><a href="#Interpersonal-skills-needed" class="headerlink" title="Interpersonal skills needed"></a>Interpersonal skills needed</h2><ul><li>Leadership</li><li>Team building</li><li>Motivation</li><li>Communication</li><li>Influencing</li><li>Decision making</li><li>Political (company and business) awareness</li><li>Cultural awareness</li><li>Negotiation</li><li>Trust building</li><li>Conflict (healthy and unhealthy) management</li><li>Coaching</li></ul>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Team Collaboration and Career Development</title>
      <link href="/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/"/>
      <url>/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/</url>
      
        <content type="html"><![CDATA[<h1 id="Career-decision-making-cycle"><a href="#Career-decision-making-cycle" class="headerlink" title="Career decision making cycle"></a>Career decision making cycle</h1><p><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/1547727641728.png" alt="Career decision making cycle"></p><h2 id="Know-the-elements"><a href="#Know-the-elements" class="headerlink" title="Know the elements"></a>Know the elements</h2><p>Communication, Analysis, Synthesis, Valuing, Execution</p><h2 id="Know-the-definition"><a href="#Know-the-definition" class="headerlink" title="Know the definition"></a>Know the definition</h2><p><strong>Communication</strong>: Identifying the gap<br><strong>Analysis</strong>: Thinking about alternatives<br><strong>Synthesis</strong>: Creating likely alternatives<br><strong>Valuing</strong>: Prioritizing alternatives<br><strong>Execution</strong>: Taking action to narrow the gap</p><h2 id="Be-able-to-elaborate-the-elements"><a href="#Be-able-to-elaborate-the-elements" class="headerlink" title="Be able to elaborate the elements"></a>Be able to elaborate the elements</h2><p><strong>Communication</strong>:<br>• Become aware of the gap<br>• Discomfort, not so much fear of change<br>• Seek assistance if needed<br>• Emotions<br><strong>Analysis</strong>:<br>• Clarify your knowledge<br>• Clarify gap<br>• Understand how you make decisions<br>• Understand what influences you<br>• What do you want?<br>• What have you learned?<br>• What are your values, interests and skills?<br>• Do you want to take responsibility?<br>• Self-awareness<br><strong>Synthesis</strong>:<br>• Solve the gap<br>• Avoid missing alternatives<br>• Reduce to a manageable amount of options.<br>• Brainstorm and reduce.<br><strong>Valuing</strong>:<br>• Judge the benefit (and cost)<br>• Rank<br>• What´s the best choice?<br>• Select an option<br><strong>Execution</strong>:<br>• Convert decisions into action<br>• Formulate a goal and a plan<br>• Execute the plan<br>• Plan, try, evaluate</p><h1 id="Describe-forces-that-affect-our-career"><a href="#Describe-forces-that-affect-our-career" class="headerlink" title="Describe forces that affect our career"></a>Describe forces that affect our career</h1><ul><li>The world is rapidly changing</li><li>The economy goes up and down</li><li>New companies emerges</li><li>Some companies close down</li><li>Unemployment goes up and down</li><li>Organizational failures appears sometimes</li></ul><h1 id="Career-planning-vs-workforce-planning"><a href="#Career-planning-vs-workforce-planning" class="headerlink" title="Career planning vs. workforce planning"></a>Career planning vs. workforce planning</h1><h2 id="Career-development"><a href="#Career-development" class="headerlink" title="Career development"></a>Career development</h2><ul><li>What the individuals in the organization do in order to ensure their interests and future<h2 id="Workforce-planning"><a href="#Workforce-planning" class="headerlink" title="Workforce planning"></a>Workforce planning</h2></li><li>What the organization does in order to ensure growth and profit</li></ul><h1 id="Activities-to-find-employers"><a href="#Activities-to-find-employers" class="headerlink" title="Activities to find employers"></a>Activities to find employers</h1><ul><li>Business/Industry</li><li>Government</li><li>Education</li><li>Non-profit</li><li>Private</li></ul><h1 id="The-elements-of-a-job-campaign-describe-and-elaborate"><a href="#The-elements-of-a-job-campaign-describe-and-elaborate" class="headerlink" title="The elements of a job campaign, describe and elaborate"></a>The elements of a job campaign, describe and elaborate</h1><ul><li>Gain Experience</li><li>Create Connections</li><li>First Impressions Count</li><li>Be Professional</li><li>Be Prepared and Persistent</li><li>Be Realistic, Open-minded and Flexible</li></ul><h1 id="Elements-and-recommendations-for-writing-a-CV"><a href="#Elements-and-recommendations-for-writing-a-CV" class="headerlink" title="Elements and recommendations for writing a CV"></a>Elements and recommendations for writing a CV</h1><h2 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h2><ul><li>Identification</li><li>Career objective</li><li>Education/Training</li><li>Experience</li><li>Other categories as appropriate</li><li>References<h2 id="Recommendations"><a href="#Recommendations" class="headerlink" title="Recommendations"></a>Recommendations</h2></li><li>Be brief</li><li>Be consistent</li><li>Be positive</li><li>Be honest</li><li>Be neat</li></ul><h1 id="Know-basic-elements-for-good-communication"><a href="#Know-basic-elements-for-good-communication" class="headerlink" title="Know basic elements for good communication"></a>Know basic elements for good communication</h1><p> Treat others as you would like to be treated yourself</p><h1 id="The-typical-team-as-defined-by-Brown"><a href="#The-typical-team-as-defined-by-Brown" class="headerlink" title="The typical team, as defined by Brown"></a>The typical team, as defined by Brown</h1><ul><li>Designers</li><li>Managers</li><li>Subject Matter Experts</li><li>Stakeholders</li></ul><h1 id="The-three-values-of-the-glue-of-a-team"><a href="#The-three-values-of-the-glue-of-a-team" class="headerlink" title="The three values of the glue of a team"></a>The three values of the glue of a team</h1><ul><li>Respect</li><li>Humility</li><li>Empathy</li></ul><h1 id="Be-able-to-distinguish-between-assignment-and-commitment"><a href="#Be-able-to-distinguish-between-assignment-and-commitment" class="headerlink" title="Be able to distinguish between assignment and commitment"></a>Be able to distinguish between assignment and commitment</h1><h2 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h2><h3 id="Assignments-should-be-commitments"><a href="#Assignments-should-be-commitments" class="headerlink" title="Assignments should be commitments"></a>Assignments should be commitments</h3><h3 id="Pressure-to-deliver"><a href="#Pressure-to-deliver" class="headerlink" title="Pressure to deliver"></a>Pressure to deliver</h3><h3 id="Requirements-to-perform"><a href="#Requirements-to-perform" class="headerlink" title="Requirements to perform"></a>Requirements to perform</h3><ul><li>The expected result</li><li>The expected cost</li><li>Within the expected time frame</li><li>Normally, these three items are pushed to its limits<h2 id="Commitment"><a href="#Commitment" class="headerlink" title="Commitment"></a>Commitment</h2></li><li>Should be voluntarily</li><li>Deadlines, delivery dates should be defined</li><li>Should be specific, clearly defined</li><li>Clearly motivated</li><li>Admit problems and risks</li><li>Practice commitment culture</li></ul><h1 id="Mindset-defined-Perception-Attitude-Disposition"><a href="#Mindset-defined-Perception-Attitude-Disposition" class="headerlink" title="Mindset defined (Perception, Attitude, Disposition)"></a>Mindset defined (Perception, Attitude, Disposition)</h1><h2 id="Perception"><a href="#Perception" class="headerlink" title="Perception"></a>Perception</h2><p>– How to interpret thing</p><h2 id="Attitude"><a href="#Attitude" class="headerlink" title="Attitude"></a>Attitude</h2><p>– How to react</p><h2 id="Disposition"><a href="#Disposition" class="headerlink" title="Disposition"></a>Disposition</h2><p>– Decide course of action, what to do</p><h1 id="Different-mindsets"><a href="#Different-mindsets" class="headerlink" title="Different mindsets"></a>Different mindsets</h1><p><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/1547781642160.png" alt="1"></p><p><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/1547781711943.png" alt="2"></p><p><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development/1547781723233.png" alt="3"></p><h1 id="Active-listening"><a href="#Active-listening" class="headerlink" title="Active listening"></a>Active listening</h1><h2 id="Active-listening-1"><a href="#Active-listening-1" class="headerlink" title="Active listening"></a>Active listening</h2><ul><li>Understanding</li><li>Acknowledge</li><li>Encourage</li><li>Elaborate</li><li>Hear others ideas</li><li>See others ideas</li></ul><h1 id="Types-of-listening"><a href="#Types-of-listening" class="headerlink" title="Types of listening"></a>Types of listening</h1><h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><p>– Get ready</p><h2 id="Pause"><a href="#Pause" class="headerlink" title="Pause"></a>Pause</h2><p>– Give time for speaking</p><h2 id="Probe"><a href="#Probe" class="headerlink" title="Probe"></a>Probe</h2><p>– Let people elaborate</p><h2 id="Paraphrase-re-phrase"><a href="#Paraphrase-re-phrase" class="headerlink" title="Paraphrase/re-phrase"></a>Paraphrase/re-phrase</h2><p>– Summarize</p><p>– Repeat</p><p>– Confirm</p><h1 id="Three-obstacles-to-listening"><a href="#Three-obstacles-to-listening" class="headerlink" title="Three obstacles to listening"></a>Three obstacles to listening</h1><ul><li>Short-circuiting</li><li>Closed doors</li><li>Embattled egos</li></ul><h1 id="Browns-definition-of-conflict"><a href="#Browns-definition-of-conflict" class="headerlink" title="Browns definition of conflict"></a>Browns definition of conflict</h1><p>Conflict is the way teams come to a shared understanding of each decision made in the process</p><h1 id="Origins-to-conflicts"><a href="#Origins-to-conflicts" class="headerlink" title="Origins to conflicts"></a>Origins to conflicts</h1><p>• Differences in objectives<br>• Different opinions<br>• Different values<br>• Argumentation and friction are unavoidable<br>• Negotiations with the customer<br>• Argumentation within the project organization<br>• Different or changed priorities</p><h1 id="Positive-consequences-of-conflicts"><a href="#Positive-consequences-of-conflicts" class="headerlink" title="Positive consequences of conflicts"></a>Positive consequences of conflicts</h1><ul><li>Produces better ideas</li><li>Forces people to search for new approaches</li><li>Causes problems to surface</li><li>Forces clarification</li><li>Stimulates interest and creativity</li><li>An opportunity for people to test capacities</li></ul><h1 id="Shared-understanding"><a href="#Shared-understanding" class="headerlink" title="Shared understanding"></a>Shared understanding</h1><h1 id="Obstacles-to-shared-understanding"><a href="#Obstacles-to-shared-understanding" class="headerlink" title="Obstacles to shared understanding"></a>Obstacles to shared understanding</h1><ul><li>Unclear goals</li><li>Unclear process, directions</li><li>Unknown constraints</li><li>Personal disagreements</li><li>Misconception</li><li>Ego</li><li>Disinterest</li></ul><h1 id="Healthy-and-unhealthy-conflicts"><a href="#Healthy-and-unhealthy-conflicts" class="headerlink" title="Healthy and unhealthy conflicts"></a>Healthy and unhealthy conflicts</h1><h2 id="Unhealthy-conflict"><a href="#Unhealthy-conflict" class="headerlink" title="Unhealthy conflict"></a>Unhealthy conflict</h2><h3 id="A-mask-for"><a href="#A-mask-for" class="headerlink" title="A mask for"></a>A mask for</h3><p>– Not understanding<br>– Not knowing<br>– Anxiety for the decision<br>– Personal conflicts</p><h1 id="Root-causes-to-conflicts"><a href="#Root-causes-to-conflicts" class="headerlink" title="Root causes to conflicts"></a>Root causes to conflicts</h1><h2 id="External"><a href="#External" class="headerlink" title="External"></a>External</h2><h3 id="Four-types-of-tensions"><a href="#Four-types-of-tensions" class="headerlink" title="Four types of tensions"></a>Four types of tensions</h3><p>– Disconnectedness<br>– Exclusion<br>– Misdirection<br>– Ambiguity</p><h2 id="Internal"><a href="#Internal" class="headerlink" title="Internal"></a>Internal</h2><h3 id="Method-conflict"><a href="#Method-conflict" class="headerlink" title="Method conflict"></a>Method conflict</h3><p>– Different ways of interpreting the method – HOW things are to be done<br>– Different criteria for success<br>– Re-do things<br>– Adapt and tailor the method<br>– Could be hidden by an outcome conflict<br>– Usually it is healthy, it progresses work</p><h3 id="Outcome-conflict"><a href="#Outcome-conflict" class="headerlink" title="Outcome conflict"></a>Outcome conflict</h3><p>– “The content of a decision”<br>– Product outcomes – how the product look like<br>– Poor performance – how to work<br>– How to structure (Plan) the project<br>– Purpose conflict – Why is this done?<br>– Lack of decisions, lack of clarity</p><h1 id="Know-the-five-principles-of-behaviour-patterns"><a href="#Know-the-five-principles-of-behaviour-patterns" class="headerlink" title="Know the five principles of behaviour patterns"></a>Know the five principles of behaviour patterns</h1><ol><li>There is no single right answer</li><li>Patterns may introduce new approaches</li><li>Not every pattern works in every situation</li><li>Several patterns may give the same result</li><li>Patterns that are experienced as comfortable may be your favourite patterns</li></ol><h1 id="The-four-types-of-patterns-to-solve-root-causes-of-conflicts"><a href="#The-four-types-of-patterns-to-solve-root-causes-of-conflicts" class="headerlink" title="The four types of patterns to solve root causes of conflicts"></a>The four types of patterns to solve root causes of conflicts</h1><h2 id="Empathize"><a href="#Empathize" class="headerlink" title="Empathize"></a>Empathize</h2><p>​    – Break down misunderstandings – shared understanding<br>​    – Let a neutral person take notes</p><h2 id="Involve"><a href="#Involve" class="headerlink" title="Involve"></a>Involve</h2><p>​    – To get more involvement<br>​    – Story telling. Could use neutral persons</p><h2 id="Redirect"><a href="#Redirect" class="headerlink" title="Redirect"></a>Redirect</h2><p>​    – Find focus, narrow the scope, take baby steps</p><h2 id="Reframe"><a href="#Reframe" class="headerlink" title="Reframe"></a>Reframe</h2><p>​    – Use different words, find other approaches</p><h1 id="The-definition-of-collaboration"><a href="#The-definition-of-collaboration" class="headerlink" title="The definition of collaboration"></a>The definition of collaboration</h1><p>• Collaboration means “working together” according to the dictionary<br>• In software projects it also includes “producing something”</p><h1 id="Collaboration-vs-Groupthink"><a href="#Collaboration-vs-Groupthink" class="headerlink" title="Collaboration vs. Groupthink"></a>Collaboration vs. Groupthink</h1><h2 id="Collaboration"><a href="#Collaboration" class="headerlink" title="Collaboration"></a>Collaboration</h2><ul><li>Working together</li></ul><h2 id="Groupthink"><a href="#Groupthink" class="headerlink" title="Groupthink"></a>Groupthink</h2><ul><li>When you agree rather than come up with something better</li></ul><p>Collaboration should lead to groupthink</p><h1 id="Aspects-of-collaboration"><a href="#Aspects-of-collaboration" class="headerlink" title="Aspects of collaboration"></a>Aspects of collaboration</h1><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="The-tools-have-different-focus"><a href="#The-tools-have-different-focus" class="headerlink" title="The tools have different focus"></a>The tools have different focus</h3><p>Tools helps in sharing and collaboration<br>Software tools for<br>– Messages<br>– Chats<br>– Video</p><h2 id="Mindset"><a href="#Mindset" class="headerlink" title="Mindset"></a>Mindset</h2><h3 id="Perception-1"><a href="#Perception-1" class="headerlink" title="Perception"></a>Perception</h3><p>– How to interpret thing</p><h3 id="Attitude-1"><a href="#Attitude-1" class="headerlink" title="Attitude"></a>Attitude</h3><p>– How to react</p><h3 id="Disposition-1"><a href="#Disposition-1" class="headerlink" title="Disposition"></a>Disposition</h3><p>– Decide course of action, what to do</p><h2 id="Culture"><a href="#Culture" class="headerlink" title="Culture"></a>Culture</h2><p>  • Open workspaces or closed rooms?<br>  • Dislike in some way of communicating<br>  • Against or for face-to-face communication<br>  • Organizational limitations and boundaries<br>  • Competition between people<br>  • Heading for a promotion?</p><h1 id="The-four-virtues-of-collaboration"><a href="#The-four-virtues-of-collaboration" class="headerlink" title="The four virtues of collaboration"></a>The four virtues of collaboration</h1><ol><li>Clarity and Definition</li><li>Accountability and Ownership</li><li>Awareness and Respect</li><li>Openness and Honesty</li></ol><table><thead><tr><th>situations</th><th>example</th><th>interpretation</th><th>pattern</th></tr></thead><tbody><tr><td>design ignorance</td><td>“I don’t see why we even   need to spend time on this.”我不知道为什么我们要浪费时间做这个</td><td>Designers sometimes find   themselves defending the practice of design itself.</td><td>reflect the position(考虑他的位置);   anticipate agendas;   communicate   implications 讨论影响（如果..会..?）</td></tr><tr><td>Distracted by internal   competition内部矛盾</td><td>“The   marketing team is setting up their own Web site.”</td><td>Members of the project   team lose focus on project objectives because they are distracted by a competitor</td><td>Help me prioritize;   Fame the conversition;   Recount previous conversation</td></tr><tr><td>Distracted by shiny   objects（consequence of   distraction）</td><td>“Our site   needs social sharing functions.”</td><td>“Shiny objects” is one   term for ideas or technologies or techniques that have captured the   imagination of the public or the industry.</td><td>make it real;   hold a workshop;   offer alternatives(做一些 mock-up来比较)</td></tr><tr><td>Don’t know   what we need</td><td>“What do you   think we should do?”</td><td>Without a   clear definition of the design problem, the project team may run in different   directions.</td><td>provide starting points;   set reasonable expectations;   make assumption;</td></tr><tr><td>Efforts ignored</td><td>“This stuff   doesn’t really matter because we’re working on a separate track.”</td><td>利益相关者或其他成员选择忽视outputs, recommendations, and   solutions provided by people assigned to   those activities.</td><td>convert failure to action;   help me help you;   blame a “bad cop”</td></tr><tr><td>Excluded from planning</td><td>“It’s a   shame she’s not in the meeting. All these action items are for her.”</td><td>In this situation,   the people responsible for delivering and executing are not included in the   planning process.</td><td>acknowledge achievements;   communicate implications;   reduce the assignment</td></tr><tr><td>False consensus</td><td>“I think we all agree here.” 大家都认为已经达到共识了，但仔细想想其实没有</td><td>In this   situation the team comes to some agreement (on direction or approach, for   example) but doesn’t re</td><td>ask for a story;   communicate implications;   help me make this better(说出有挑战的点)</td></tr><tr><td>Inconsistent   expectations</td><td>“That’s not   what I said!”</td><td>From one   conversation to the next, team members change their expectations.</td><td>Blame a “bad cop”;   make it real;   set reasonable expectations</td></tr><tr><td>Insufficient   progress   项目进度很慢，和懒惰有关</td><td>“You’ve done   how much?”</td><td>assigned   tasks remain incomplete, design problems remain unsolved, or feedback   isn’t fully   incorporated.</td><td>Go back to basics;   Reduce the assignment;   set reasonable expectations</td></tr><tr><td>Irrelevant (无关紧要的)comparisons</td><td>“Have you   seen this Web site?”</td><td>someone   contributes comparative examples with little or no practical relevance to the   design problem</td><td>consider micro/macro perspectives;   help me prioritize指出哪里相关;   communicate implications</td></tr><tr><td>Lack of clear inputs</td><td>“Mmm…   yeah… we’re not going to have the budget to do user research.”</td><td>Designers   don’t have detailed inputs (requirements, starting points, etc.) to frame the   problem and inform the solution.</td><td>Make a plan;   Make it real;   Make assumptions</td></tr><tr><td>Lack of   context</td><td>“There’s a   lot going on behind the scenes here…”</td><td>Teams do not   have insight into the organizational, business, or operational context   surrounding a project.</td><td>Pick one thing;   Help me help you;   List assumptions</td></tr><tr><td>Lack of decision maker</td><td>“So, what   does the group think?”</td><td>Design   decisions drag out because no authority is capable of rendering executive   decisions when necessary.</td><td>anticipate agendas;   hold a workshop;   communicate implications</td></tr><tr><td>Lack of stable strategy</td><td>“So, things   have changed since we last spoke…”</td><td>the project’s   objectives, parameters, or constraints change regularly.</td><td>make assumption一些原则;   blame a “bad cop”制定deadline;   treat it like a project</td></tr><tr><td>Late-breaking   requirements</td><td>“Now that I   think about it, we’re also going to need…”</td><td>the   stakeholder who didn’t have time to participate in the process; the one thing   that one guy   forgot; a   change to the business that has a ripple effect throughout all the company’s   systems.</td><td>Help me prioritize;   make it real;   make a plan</td></tr><tr><td>Misinterpretation of tone</td><td>“Your email   was really snippy.”</td><td>breeds hostility(敌意) or disrespect   in the   communications.</td><td>Change the channel;   reflect the position;   come back later</td></tr><tr><td>New perspectives</td><td>“I know I’m   coming in with this late, but…”</td><td>stakeholders offering new perspectives may not welcome   their positions being hastily dismissed.(立场被驳回)</td><td>assert your process;   frame the conversation(和利益相关者建立谈话);   offer alternatives（提供更多的选择）</td></tr><tr><td>No plan</td><td>“OK, so what   do we do next?”</td><td>In this   situation, the project lacks a plan that defines desired outcomes,   activities, schedule, and assignments.</td><td>Blame a “bad cop”;   draw pictures;   offer alternatives</td></tr><tr><td>No time to   design</td><td>“Just get   some rough ideas down by tomorrow, OK?”</td><td>Forces   outside the design team establish an unreasonable schedule for producing   design ideas</td><td>assert your process(坚持自己，说完不成);   help me help you;   set reasonable expectations</td></tr><tr><td>Not a team   player   拒绝和别人合作</td><td>“I can take   care of this.”</td><td>Someone on   the team refuses to engage with other members</td><td>Ask for help;   Go back to basic;   communicate implications</td></tr><tr><td>Overpreparation认为已经解决了问题</td><td>“I think we’ve   got the solution already.”</td><td>Product   teams may create early mock-ups to frame the problem, which locks them into a   particular way of thinking about the   problem.</td><td>Hold a workshop;   ask questions;   ask for a story</td></tr><tr><td>Poorly   composed feedback</td><td>“That just   doesn’t look right to me.”</td><td>The team   receives feedback that doesn’t clearly articulate the next steps, the desired   improvements, or the issues with the current   version.</td><td>Frame the conversation;   take baby steps(go through the   design point by point);   change the metaphor</td></tr><tr><td>Poorly   planned presentation or discussion</td><td>“I hate to   put you on the spot, but…”</td><td>Project   stakeholders do not understand the design work because the design team hasn’t   assembled a meaningful narrative</td><td>set reasonable expectations;   assert your process;   ask questions</td></tr><tr><td>Reluctant   participation in design activities   (一些人不积极参与design)</td><td>“I’ll leave   the drawing to my colleagues.”</td><td>Some members   of the team may not actively participate in creative games and brainstorming   activities.</td><td>provide starting points;   assert your process;   communicate implications</td></tr><tr><td>Responses   not timely</td><td>“[This quote   intentionally left blank.]”</td><td></td><td>provide starting points;   assert your process;   communicate implications(和25pattern一样)</td></tr><tr><td>Separated   from key stakeholders</td><td>“Let me take   this to the VP, and I’ll let you know what she says.”</td><td>Designers   find themselves separated from the true client or customer through layers of   bureaucracy.</td><td>Hold a workshop;   assert your process;   take baby steps</td></tr><tr><td>Tasks and   goals not aligned</td><td>“Everyone   says we need to hold a daylong brainstorming session.”</td><td>Designers   sometimes engage in design activities with no real rationale. Such activities   yield outcomes that likely don’t move the   project   forward, or do so inefficiently.</td><td>set expectations;   ask for the first step;   make a plan</td></tr><tr><td>Uncoordinated   collaboration</td><td>“So, which   one of us is doing this?”(分配任务)</td><td>Some project   teams have no plan, no overall direction of where they’re going long-term and   the activities required to get there.</td><td>Take responsibility;   provide starting points;   enumerate issues</td></tr><tr><td>Unfounded   design direction（毫无根据的设计方向）</td><td>“Hey, I did   some mock-ups!”</td><td>Someone   outside the design team prepares screen designs, concepts, or other artifacts   attempting to establish a creative direction.   When a   non-designer shows up with design artifacts, the team may feel tension   because it implies lack of performance from the   designers.</td><td>Ask questions;   take responsibility;   acknowledge achievements</td></tr><tr><td>Unreasonable   constraints</td><td>“I want the   design to look the same on every Web browser.”</td><td>Designers   thrive on constraints: boundaries help designers understand what constitutes   a good solution for the challenge. Some   projects,   however, are bounded by constraints that are arbitrary.</td><td>consider micro/macro perspectives;   help me prioritize;   make it real</td></tr><tr><td>Wrong scope</td><td>“What do you   mean I wasn’t supposed to work on that?”</td><td>A designer   works on the wrong thing.</td><td>Take responsibility;   acknowledge achievements;   Go back to basics</td></tr></tbody></table><table><thead><tr><th>pattern</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Acknowledge achievements（involve</td><td>“Wow, you   guys did a great job on this. I can see the effort you put in. Can you walk   me through to make sure I understand   everything?”</td><td></td><td>Engaging with someone   about his or her work, and potentially balancing achievements with   opportunities for improvement.</td></tr><tr><td>Anticipate agendas（empathize</td><td>“I know   there are a few things that are especially important to you, so I wanted to   address them right away.”</td><td>Imagine what’s   important to other members of the team or project stakeholders before   engaging in a discussion with them.</td><td>Entering a   conversation with people expected to be competitive or confrontational, to   demonstrate that you have their best   interest in mind.</td></tr><tr><td>ask for a story（reframe</td><td></td><td>Ask someone   to describe their ideas or thoughts or needs in the form of a story.</td><td>Someone   struggles to articulate their needs in the abstract, and you want to help   them make it more concrete.</td></tr><tr><td>ask for help（involve</td><td></td><td>Directly ask   someone to help you with your task.</td><td>You need   help. You’re preoccupied with proving yourself instead of solving the design   problem.</td></tr><tr><td>ask for the first step(Reframe)</td><td></td><td>Ask someone   what their first step will be in attempting to achieve an objective.</td><td>Someone   struggles to articulate their process for performing a task, by getting them   to focus only on a small slice.</td></tr><tr><td>ask questions(Reframe,Involve)</td><td></td><td>Instead of   jumping to conclusions, ask questions to make sure both you and the other people   understand what’s going on.</td><td>All. The.   Time. No other skill is as essential to designers as being able to ask good   questions. Except, perhaps, listening to   the answers.</td></tr><tr><td>assert your process(redirect)</td><td></td><td>Remind   participants of the schedule and the process on which it is based, providing   lots of detail about activities, outcomes, and goals.</td><td>Someone   introduces factors that may compromise or derail the process, like late-breaking   requirements.</td></tr><tr><td>Blame a “bad cop”(reframe)</td><td></td><td>Use another   team member (not present) as a scapegoat. By putting a human face on the   situation, people might work harder to find a   compromise,   or might forgive ignorance.</td><td>Facing   unreasonable constraints or being put on the spot for a question you can’t   answer immediately.</td></tr><tr><td>Call their bluff(揭发底牌) reframe</td><td></td><td>Take a   challenge to its inevitable conclusion and hold everyone involved accountable   for meeting the challenge. Help other team   members   understand the impact of their request.</td><td>Presented   with unreasonable requests that aim to put pressure on the design team   without any meaningful outcome.</td></tr><tr><td>Capture   lessons learned（involve，redirect）</td><td></td><td>Make a list   of issues, obstacles, and difficulties that came out of a prior project or   situation or challenge.</td><td>The project   team hasn’t taken a moment to reflect on their previous work and how they   could have done it better.</td></tr><tr><td>change the channel（email，voice，etc）（reframe</td><td></td><td>Find a   different “channel” in which to communicate. Sometimes this means moving from   email to voice, or in person to email, or   instant   messenger to video chat. Sometimes this means taking a conversation out of a   public venue.</td><td>The medium   of communications is impacting participants’ ability to express themselves   clearly.</td></tr><tr><td>Change the   metaphor（reframe）</td><td></td><td>Use a   different concept to explore or explain a complex idea.</td><td>Participants   become fixated on the metaphor and not the problem being solved, or when   participants need a new way of   looking at   the same old problem.</td></tr><tr><td>Channel your   colleagues’ best qualities（redirect</td><td></td><td>，想想一个能处理好这件事的人。考虑他们将如何表现,并试图将其融入到情况。</td><td>Confronting   a situation that is causing you particular anxiety or frustration. Sometimes,   pretending to be a different person   allows us to   tap into not only their capabilities, but also their strength.</td></tr><tr><td>come back later（Empathize, Redirect</td><td></td><td>Postpone(延期) taking action until   participants can consider the situation more deliberately.</td><td>The   situation has gotten out of hand, such that the participants aren’t providing   reasonable and appropriate contributions</td></tr><tr><td>Communicate   implications（reframe</td><td>“If we don’t   get feedback until next week, we’ll have to shift our delivery milestones.   Without feedback, I’m worried that   we’ll have   more work later in the project dealing with late-breaking requirements.”</td><td>State, in   the simplest terms possible, the consequences of a decision</td><td>Participants   make decisions without realizing the negative consequences for the process or   project outcome.</td></tr><tr><td>Consider   micro/macro perspectives（redirect</td><td></td><td>Look at the   situation from two different angles, broad versus narrow or high versus low.   Adopting a new perspective can help   expose new   issues and solutions.</td><td>Participants   become so focused on one perspective that they lose sight of the project or   task objectives</td></tr><tr><td>Consider   your work/their work（reframe</td><td></td><td>Offer   encouragement and deflate the anxiety of critique by reminding colleagues   that stakeholders and other team members are just   doing their jobs.</td><td>Confrontations   have escalated to the extent that participants are having trouble hearing   each other’s concerns</td></tr><tr><td>Convert   failure to action（redirect</td><td></td><td>Take   outcomes that seem to be dead ends and use those as starting points for   subsequent tasks.</td><td>Confronted   by people who approach failure with a gloom and doom attitude, thinking that nothing   is recoverable from such   outcomes</td></tr><tr><td>draw pictures（reframe</td><td></td><td>Use visual   aids, spontaneous sketches, whiteboards, diagrams, or other visualizations to   organize thoughts. Encourage participants to   draw or embellish others’ drawings.</td><td>Participants   are having trouble making sense of each other’s statements</td></tr><tr><td>Frame the   conversation（Involve,   Redirect）</td><td></td><td>Establish a   structure for conversations, with clearly articulated topics and goals. To   the extent feasible, identify items outside the   scope of the   discussion to avoid getting off track.</td><td>Participants   struggle to keep conversations focused or the agenda becomes dominated by a   few players that distract from   objectives.</td></tr><tr><td>Go back to   basics(redirect, involve)</td><td></td><td>Rely on tried-and-true   project management tools and techniques to keep project teams aligned and on   track.</td><td>Project   teams begin to spin out of control because they take project management   basics for granted</td></tr><tr><td>Help me help   you (empathize)</td><td>“I know how important   this design project is to your work here. I’d like to make sure you can be   successful and meet the   milestones   of the larger project. What I can I do to help you meet those goals?”</td><td>Position the   team’s work and the team’s role relative to another’s goals. 展示团队的目标是如何与个人目标相一致的。</td><td>A   stakeholder or participant signals that they see themselves as competitive   with or opposed to the rest of the team.</td></tr><tr><td>Help me make   this better（involve）</td><td></td><td>让expert去帮助improve   the design</td><td>参与者不愿意或不能提供建设性的反馈。</td></tr><tr><td>Help me   prioritize （redirect）</td><td></td><td>Ask participants to prioritize issues, requirements,   feedback, or whatever else may be driving subsequent activities.（找重点）</td><td>Presented with a list of issues that will impact the team’s   ability to execute their plan or to complete tasks within the project’s   constraints.（有好多问题要解决）</td></tr><tr><td>Hold a   workshop（involve）</td><td></td><td>组织一个meeting，可以让利益相关者来Structure a meeting as a   collection of participatory activities combined with presentations, as if   team members were attending a   training workshop.   By making the activity more participatory, teams can engage all stakeholders.</td><td>Working with   a team of people who need structure to actively contribute to a project.</td></tr><tr><td>List   assumptions（reframe）</td><td></td><td>List the   educated guesses the team made to allow them to move forward with the   project. Assumptions may be related to any   context:   product, performance, plan, or purpose</td><td>The list of   assumptions   may be used to justify decisions or as a tool to validate assumptions.团队里一些人没有什么看法，依赖于别人的看法。</td></tr><tr><td>make a plan （refame</td><td></td><td>Identify a   goal, a set of activities to reach that goal, and a set of milestones leading   up to the goal. With multiple goals, be sure to   prioritize.</td><td>面对大量的工作，没有明确的下一步如何取得进展</td></tr><tr><td>make   assumptions （redirect）</td><td></td><td>不要让未知的信息阻碍了项目目标的实现。对丢失的信息进行有根据的猜测。一定要分享这些假设与项目团队提供设计决策的基本原理。</td><td>您已经准备好开始设计过程，但是无法弥补在理解上的差距</td></tr><tr><td>make it real   （redirect）</td><td></td><td>Take steps   to embody abstract ideas</td><td>参与者在不考虑可行性的情况下抛出想法和反馈。</td></tr><tr><td>Offer   alternatives（involve</td><td></td><td>提供两三个想法，让参与者对比和比较</td><td>提出了一个模糊的问题，将没有明确的标准来评估一个解决方案。</td></tr><tr><td>Offer a sneak peek(提供一个先睹为快)（invole</td><td>我们明天要讲三个概念，我先说一下你们明天会看到的。</td><td>Show or   describe upcoming work in brief to set expectations about what will be seen   or what participants will need to comment on.</td><td>Presenting   ideas or approaches that will challenge some underlying assumptions, as a way   to build the right mindset in key   participants.</td></tr><tr><td>Pick one   thing （redirect）</td><td></td><td>Select one   item from a list to focus on.</td><td>有很多issue困扰着</td></tr><tr><td>Pick your   battles（empathize）</td><td>避免对抗，以后再说</td><td>Choose the right   time to engage in active conflict.</td><td>Facing a   potentially major conflict that, compared to confrontations likely to emerge   later, will have little impact on the final   outcome.</td></tr><tr><td>Prioritize the portfolio（优先考虑投资组合）redirect</td><td>虽然不喜欢这个project，但能提高职业目标</td><td></td><td>一个项目或任务的线程已经变得如此妥协，以至于很难在其中找到个人意义或满足感</td></tr><tr><td>Provide   starting points（empathize）</td><td></td><td>给人们举一些例子来说明你所期望的工作水平</td><td>要给新人分配任务，团队，确立方向和期望值</td></tr><tr><td>Recount   previous conversation（reframe</td><td></td><td>总结之前的对话，为当前的对话奠定基础</td><td>当和记忆里不好的人一起工作时，先确定她们agree之前的对话要点。（避免他们经常在会议中改变自己的想法）</td></tr><tr><td>Reduce   the assignment（redirect</td><td>redirect</td><td>把手头任务的一小部分用来控制范围</td><td>有一个很大的项目，一小块的分配允许人们关注一个可控的设计问题和调整他们的预期。</td></tr><tr><td>Reflect the   position（e）</td><td></td><td>重复别人说的话来确保自己听到的是正确的，也可以体现respect</td><td>当参与者觉得他们可能不理解对方的立场时</td></tr><tr><td>Seek small   victories（redirect）</td><td></td><td>Drive toward   a win, no matter how small, to demonstrate success or establish a foundation   of success. 努力争取胜利，无论多么小</td><td></td></tr><tr><td>Set   reasonable expectations（redirect）</td><td></td><td>Provide a   clear account of how long tasks will take.</td><td>被问到项目的截止时间和范围，何时交付项目</td></tr><tr><td>Show the   goal（Empathize,   Involve, Redirect</td><td></td><td>让利益相关者尽可能生动地描述项目或任务的期望结果，确保他们知道他们要什么。Ask stakeholders to describe as   vividly as possible the desired outcome of a project or task. This isn’t so   much to describe the final   design as it   is to make sure they know what they’re getting.</td><td>项目已经花了很多时间，但还是不清楚stakeholders到底要什么</td></tr><tr><td>show your   work（invole</td><td></td><td>揭示设计关键点，提供了基础和设计决策的理由</td><td>当给stakeholders看你的design   idea时</td></tr><tr><td>take baby   staps（redirect，involve</td><td></td><td>introduce引进小小的改变 给项目，一种文化来影响大的charge</td><td>团队或组织的习惯根深蒂固,新的思维方式难以实现。</td></tr><tr><td>take responsibility（Empathize</td><td></td><td>诚实坦率地面对错误。主动帮忙收拾残局 Be honest and forthright with   errors. Offer to help clean up the mess.</td><td>Facing an   error that has an impact on other team members or the success of the project.</td></tr><tr><td>treat it   like a project（reframe）</td><td>有一个问题很难达成一致，   create a plan 去解决</td><td>建立目标、活动、依赖关系、角色和其他结构，以推动冲突的解决方案Establish a goal, activities,   dependencies, roles, and other structure to drive toward a solution for a   conflict</td><td>Facing a   conflict with so many moving parts that resolution requires careful planning.</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>behavior</th><th>how</th><th>virtue</th><th>interpretation</th></tr></thead><tbody><tr><td>ask questions that yield specific   answers</td><td></td><td>Clarity and Definition</td><td>Structure   questions to encourage increasingly direct and detailed responses. Yes/no   questions are OK, so long as they validate a   specific decision or direction.</td></tr><tr><td>Centralize decision making 集中决策</td><td>At the   beginning of the project, ask who owns final decisions about design.   Lean on the   decision maker to validate direction and approach</td><td>Accountability and Ownership</td><td></td></tr><tr><td>Clarify   expectations regarding ability and delivery</td><td>在收到任务后，确保你明白任务的交付时间和任务</td><td>Accountability and Ownership</td><td>项目参与者应该让对方诚实地、公开地了解他们的工作地点</td></tr><tr><td>Communicate progress</td><td>日常保持小火苗！Establish a rhythm for   communicating updates to project leads.   Use a simple   template for email or other electronic messages to communicate updates.</td><td>Accountability and Ownership</td><td></td></tr><tr><td>Don’t hog opportunities不要占用机会？？？</td><td>在要说话之前，保持15分钟沉默，让别人先说</td><td>Awareness and Respect</td><td>让每个参与者都参与进来。</td></tr><tr><td>Embrace constructive criticism接受建设性的建议</td><td>先考虑一下这是他们的工作，也不算他们的错。在他们打击之前，先预测一下Anticipate   critiques before they happen to soften the blow.</td><td>Accountability and Ownership</td><td></td></tr><tr><td>Embrace risk</td><td>明白风险，可能的消极后果</td><td>Accountability and Ownership</td><td></td></tr><tr><td>Employ采用 tools that   yield meaningful outcomes</td><td>判断工具是否能让项目继续Question the value of every activity or deliverable, and   seek to understand how it will move the project forward and how it   will lead to   the next step</td><td>Clarity and Definition</td><td>make a contribution</td></tr><tr><td>Encourage disruptive communications</td><td>采用多种沟通渠道，为团队成员提供各种相互交流的方式。</td><td>Clarity and Definition</td><td></td></tr><tr><td>Engage in dialogue</td><td>Show up to   meetings with lots of questions prepared, whether you’re responsible for   presenting concepts or not.</td><td>Clarity and Definition</td><td>鼓励对话来阐述项目的概念、设计要求等。</td></tr><tr><td>Engage multiple senses to   communicate 调用多种感官来交流</td><td>计划会议不只是说什么，而是要展示什么。有一个文档相机准备显示屏幕上快速草图或投射在墙上。注意图片所示的节奏,特别是,人们会花最多的时间看看照片</td><td>Clarity and Definition</td><td>Use both   speaking and pictures to engage team members.</td></tr><tr><td>Establish role definitions</td><td>If you’re   not in charge of defining roles, ask for each participant’s responsibilities</td><td>Clarity and Definition</td><td>确保团队中的每个人都知道他或她的职责是什么。Take the time to ensure they understand whether they   own   particular activities, or are just contributors.</td></tr><tr><td>Give others   room to learn from mistakes</td><td>Offer to help colleagues reflect on   their failures.</td><td>Awareness and Respect</td><td></td></tr><tr><td>Have a communications plan</td><td>使用模板为常见的电子邮件格式。建立一些规则用不同的交流方式。Identify who can respond to inquiries from different   stakeholders</td><td>Clarity and Definition</td><td>为团队成员之间的交流创建标准。</td></tr><tr><td>Have a project plan</td><td>ensure you can answer who, what, where, when, why, and   how questions about the project.确保你能回答谁，什么，什么，何时，为什么，以及如何对这个项目的问题</td><td>Clarity and Definition</td><td>Create a   project schedule with milestones and resource assignments. Clearly state how   much time each team member should spend   on each   activity.</td></tr><tr><td>Have decision-making mechanisms有决策机制</td><td>为设计或项目计划制定目标或原则以指导决策。指定具体的人负责,负责具体的决策。Establish goals or principles for the design or project   plan to guide decisions.   Designate   specific people responsible and accountable for specific decisions.</td><td>Clarity and Definition</td><td></td></tr><tr><td>Have   objectives for every discussion</td><td>If you’re   organizing the meeting, send an agenda, a list of topics, or even a   one-sentence objective beforehand.   If you’re   not organizing the meeting, ask the organizer for the agenda or objectives.   If it’s an   ad hoc meeting, take a moment to validate expectations with other   participants.</td><td>Clarity and Definition</td><td>know   beforehand what you expect to come out of it.</td></tr><tr><td>Keep   meetings focused and short</td><td>Conclude a   meeting when it’s over, not when the clock says it’s over.   Show up with   an agenda and objectives so you know when it’s over.</td><td>Awareness and Respect</td><td>Golden Rule: Assume other people’s time is as valuable as   yours. 假设别人的时间和你的一样宝贵</td></tr><tr><td>Know when you’re “spinning” 知道你遇到瓶颈的时候</td><td>在任务或任务上花一小段时间(大约10% - 20%的时间)，然后评估进度。如果开始适应,坚持下去。如果没有明确的方向，可以向同事寻求帮助。</td><td>Accountability and Ownership</td><td>意识到你的努力没有成效。旋转的行为将是一个问题解决,没有做出任何实质性的进展。有些人坚持啃一个问题,消耗时间和金钱,因为他们需要证明自己。</td></tr><tr><td>Offer direct critiques</td><td>Avoid generalizations like “It’s not   good.”避免笼统地说“这不好”。</td><td>Awareness and Respect</td><td></td></tr><tr><td>Play to strengths 发挥优势</td><td>Reflect on abilities and skills to identify strengths反思能力和技能，以确定优势</td><td>Accountability and Ownership</td><td>确保项目中的角色和责任与团队成员的个人能力、技能和性格相一致。</td></tr><tr><td>Provide a rationale for decisions为决策提供依据</td><td>Enumerate key decisions and identify   the primary rationale for driving them.列举关键决策并确定驱动它们的基本原理。</td><td>Accountability and Ownership</td><td>确保所有的决定——关于产品，关于计划，关于项目——都有合理的理由</td></tr><tr><td>Recognize contributions承认贡献</td><td></td><td>Accountability and Ownership</td><td>if someone   inspired a particular direction or lent an insight, give them a shout-out.</td></tr><tr><td>Reduce competition</td><td>In   competitions, there is always a loser. Losers no longer feel as invested in   the project. When people feel like they will make a meaningful contribution,   regardless of their role, they will do better work and support each other in   the pursuit of the project’s goals</td><td>Accountability and Ownership</td><td>从设计过程中消除对彼此不利的设计过程。鼓励人们一起工作,而不是竞选。</td></tr><tr><td>Reflect on your performance</td><td></td><td>Awareness and Respect</td><td>花点时间考虑一下你在一个项目或任务上的表现。识别领域你可以表现的更好,发挥你的长处。确定下次你会做不同的事情，然后吸取教训，下次再用。</td></tr><tr><td>Respect the calendar</td><td></td><td>Awareness and Respect</td><td></td></tr><tr><td>Set availability expectations</td><td></td><td>Awareness and Respect</td><td></td></tr><tr><td>Set performance expectations</td><td></td><td>Awareness and Respect</td><td>Clearly   communicate ability to complete tasks and assignments.</td></tr></tbody></table><table><thead><tr><th>Traits</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Adaptability</td><td></td><td></td><td></td></tr><tr><td>Adherence to style</td><td></td><td></td><td></td></tr><tr><td>Assumption threshold</td><td>假设阈值</td><td></td><td></td></tr><tr><td>Creative triggers</td><td></td><td></td><td></td></tr><tr><td>Defining the challenge</td><td></td><td></td><td></td></tr><tr><td>Desired cadence</td><td>期望的节拍</td><td>Workload， client   culture</td><td></td></tr><tr><td>Dogmatism</td><td>教条主义</td><td></td><td></td></tr><tr><td>Format for feedback</td><td></td><td></td><td></td></tr><tr><td>Giving and getting   recognition</td><td></td><td></td><td></td></tr><tr><td>Knee-jerk reaction</td><td>很快的反应</td><td>要么不思考马上赞同，要么马上反对</td><td></td></tr><tr><td>Level of abstraction</td><td>喜欢做抽象的事情</td><td></td><td></td></tr><tr><td>Perception of control</td><td></td><td></td><td></td></tr><tr><td>Preferred environment</td><td></td><td></td><td></td></tr><tr><td>Preferred perspective</td><td></td><td></td><td></td></tr><tr><td>Project load</td><td></td><td></td><td></td></tr><tr><td>Structure of design   reviews</td><td></td><td></td><td></td></tr><tr><td>Transparency</td><td>透明度</td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Team Collaboration and Career Development for Exam</title>
      <link href="/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development%20for%20Exam/"/>
      <url>/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development%20for%20Exam/</url>
      
        <content type="html"><![CDATA[<h3 id="During-the-lectures-we-defined-three-different-areas-important-for-every-individual-Values-Interests-and-Skills-These-should-be-described-regarding-your-internal-focus-in-a-resume"><a href="#During-the-lectures-we-defined-three-different-areas-important-for-every-individual-Values-Interests-and-Skills-These-should-be-described-regarding-your-internal-focus-in-a-resume" class="headerlink" title="During the lectures we defined three different areas important for every individual: Values, Interests and Skills. These should be described regarding your internal focus in a resume."></a>During the lectures we defined three different areas important for every individual: Values, Interests and Skills. These should be described regarding your internal focus in a resume.</h3><p><strong>a. Describe, explain, these three areas, including at least two examples from each area. (15)</strong></p><ul><li><strong>Values</strong> are what is important for you, what you really care about, and which give you a sense of purpose. <strong>Example</strong>: High Income, Helping others.</li><li><strong>Interests</strong> are what is fun for you, what enjoys you, and those work activities which hold your attention and fire your enthusiasm. <strong>Example</strong>: Technical, Scientific.</li><li><strong>Skills</strong> are things you can do well, things you have learned, special talent and special abilities. <strong>Example</strong>: Technical skills, Leadership.<br><strong>b. What is a GAP? Give at least one example of a possible GAP relating to your own experiences, one example from each area. (6)</strong></li><li>A GAP is where you are and where you want to be.</li><li>The GAP for me: I hope that I can enter a big company like Alibaba to work as a Java developer. The GAP for me is that my understanding of the Java virtual machine is not deep enough, I don’t have enough knowledge of multithreading, don’t know enough about the principle and implementation of the database, and don’t know much about the distributed architecture.</li></ul><h3 id="2-Name-the-5-elements-of-the-Career-Development-Cycle-Draw-the-model-of-the-cycle-Describe-shortly-1-2-sentences-every-action-in-the-cycle-12"><a href="#2-Name-the-5-elements-of-the-Career-Development-Cycle-Draw-the-model-of-the-cycle-Describe-shortly-1-2-sentences-every-action-in-the-cycle-12" class="headerlink" title="2. Name the 5 elements of the Career Development Cycle. Draw the model of the cycle. Describe shortly, 1-2 sentences, every action in the cycle. (12)"></a>2. Name the 5 elements of the Career Development Cycle. Draw the model of the cycle. Describe shortly, 1-2 sentences, every action in the cycle. (12)</h3><ul><li>Communication, Analysis, Synthesis, Valuing, Execution<br><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development for Exam/1547730517318.png" alt="">  </li><li><strong>Communication</strong>: Become aware of the gap and feel discomfort about the gap. Seek assistance if needed.</li><li><strong>Analysis</strong>: Clarify your knowledge, what do you want, what are your values, interests and skills and so on.</li><li><strong>Synthesis</strong>: Solve the gap, avoid missing alternatives and reduce to a manageable amount of options.</li><li><strong>Valuing</strong>: Judge the benefit (and cost) and rank them to find the best choice. Select an option.</li><li><strong>Execution</strong>: Convert decisions into action, formulate a goal and a plan, and execute the plan.</li><li><strong>Communication</strong>: Review the state and think has the gap been closed. It is an on-going process.</li></ul><h3 id="3-Brown-talks-about-four-general-role-categories-of-people-in-teams-Name-these-roles-and-describe-them-shortly-12"><a href="#3-Brown-talks-about-four-general-role-categories-of-people-in-teams-Name-these-roles-and-describe-them-shortly-12" class="headerlink" title="3. Brown talks about four general role categories of people in teams. Name these roles and describe them shortly? (12)"></a>3. Brown talks about four general role categories of people in teams. Name these roles and describe them shortly? (12)</h3><ul><li><strong>Designers</strong>: People responsible for generating and documenting ideas about how the product works, looks, or behaves.</li><li><strong>Managers</strong>: People responsible for ensuring the project team delivers on its obligations, creates plans to do so, and successfully executes against those plans.</li><li><strong>Subject Matter Experts</strong>: People responsible for contributing information to the design process.</li><li><strong>Stakeholders</strong>: People ultimately accountable for the success of the project.</li></ul><h3 id="4-Consider-the-following-questions-among-individuals-where-we-have-different-characteristics-Select-three-of-them-Describe-how-people-individuals-can-have-different-characteristics-Describe-pros-and-cons-and-possible-consequences-to-a-characteristic-Comments-if-the-characteristics-you-choose-are-good-characteristics-or-not"><a href="#4-Consider-the-following-questions-among-individuals-where-we-have-different-characteristics-Select-three-of-them-Describe-how-people-individuals-can-have-different-characteristics-Describe-pros-and-cons-and-possible-consequences-to-a-characteristic-Comments-if-the-characteristics-you-choose-are-good-characteristics-or-not" class="headerlink" title="4. Consider the following questions among individuals where we have different characteristics. Select three of them. Describe how people (individuals), can have different characteristics. Describe pros and cons, and possible consequences to a characteristic. Comments if the characteristics you choose are good characteristics or not."></a>4. Consider the following questions among individuals where we have different characteristics. Select three of them. Describe how people (individuals), can have different characteristics. Describe pros and cons, and possible consequences to a characteristic. Comments if the characteristics you choose are good characteristics or not.</h3><p>  <strong>a. Can I interrupt you?</strong><br>  <strong>b. Do you attend agreed meetings?</strong><br>  <strong>c. Are you late to meetings?</strong><br>  <strong>d. Are you focusing on details or the big-picture?</strong><br>  <strong>e. Which tasks do you prefer to commit to?</strong><br>  <strong>f. How quickly do you respond to e-mail?</strong><br>  <strong>g. Do you treat others how you would like to be treated yourself?</strong><br>  <strong>h. Can she/he say no? Can you say no?</strong><br>  <strong>i. Does she/he usually say no/yes?</strong><br>  <strong>(12)</strong></p><h3 id="5-Describe-at-least-4-positive-consequences-to-conflicts-8"><a href="#5-Describe-at-least-4-positive-consequences-to-conflicts-8" class="headerlink" title="5. Describe at least 4 positive consequences to conflicts. (8)"></a>5. Describe at least 4 positive consequences to conflicts. (8)</h3><ul><li>Produces better ideas</li><li>Forces people to search for new approaches</li><li>Causes problems to surface</li><li>Forces clarification</li></ul><h3 id="6-Brown-draws-a-triangle-for-the-model-of-conflict-Specify-this-triangle-and-describe-the-elements-and-how-they-are-connected-9"><a href="#6-Brown-draws-a-triangle-for-the-model-of-conflict-Specify-this-triangle-and-describe-the-elements-and-how-they-are-connected-9" class="headerlink" title="6. Brown draws a triangle for the model of conflict. Specify this triangle and describe the elements and how they are connected. (9)"></a>6. Brown draws a triangle for the model of conflict. Specify this triangle and describe the elements and how they are connected. (9)</h3><p><img src="/2019/01/19/期末复习/Team-Collaboration-and-Career-Development/Team-Collaboration-and-Career-Development for Exam/1547737741192.png" alt=""></p><blockquote><p>Situations: The different ways conflict manifests itself</p><p>Patterns: The behaviors team members can use to deal with conflict</p><p>Traits: The inherent characteristics that shape our behaviors and perceptions</p></blockquote><h4 id="Situations-lt-gt-Patterns"><a href="#Situations-lt-gt-Patterns" class="headerlink" title="Situations &lt; &gt; Patterns"></a>Situations &lt; &gt; Patterns</h4><ul><li>Designers can use patterns (specific behaviors) to untangle situations<ul><li>Situations can also affect the outcome of patterns<h4 id="Patterns-lt-gt-Traits"><a href="#Patterns-lt-gt-Traits" class="headerlink" title="Patterns &lt; &gt; Traits"></a>Patterns &lt; &gt; Traits</h4></li></ul></li><li>A designer’s traits influences which pattern she chooses for a particular situation</li><li>By using a particular pattern successfully, a designer may take that to reinforce part of her personality<h4 id="Traits-lt-gt-Situations"><a href="#Traits-lt-gt-Situations" class="headerlink" title="Traits &lt; &gt; Situations"></a>Traits &lt; &gt; Situations</h4></li><li>Traits can make certain situations worse by reinforcing the misunderstanding between people</li><li>Some situations may amplify a designer’s trait</li></ul><h3 id="7-Brown-lists-three-areas-important-for-self-awareness-Describe-these-areas-and-give-one-example-from-each-area-for-improving-it-9"><a href="#7-Brown-lists-three-areas-important-for-self-awareness-Describe-these-areas-and-give-one-example-from-each-area-for-improving-it-9" class="headerlink" title="7. Brown lists three areas important for self-awareness. Describe these areas and give one example from each area for improving it. (9)"></a>7. Brown lists three areas important for self-awareness. Describe these areas and give one example from each area for improving it. (9)</h3><p>To understand your limitations, your boundaries, strengths</p><ul><li>Limitations: </li><li>Boundaries: By understanding their limitations, designers can be honest and open about their capabilities, their ability to contribute to a project, and their level of comfort in asking for help.</li><li>Strengths: </li></ul>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Software-Architecture-and-Quality</title>
      <link href="/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Software-Architecture-and-Quality/Software-Architecture-and-Quality/"/>
      <url>/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/Software-Architecture-and-Quality/Software-Architecture-and-Quality/</url>
      
        <content type="html"><![CDATA[<h1 id="CH-1-What-is-software-architecture"><a href="#CH-1-What-is-software-architecture" class="headerlink" title="CH 1. What is software architecture?"></a>CH 1. What is software architecture?</h1><h2 id="What-is-software-architecture"><a href="#What-is-software-architecture" class="headerlink" title="What is software architecture"></a>What is software architecture</h2><p>The software architecture of a system is the set of structures needed to reason about the system, which comprise software elements, relations among them, and properties of both.</p><ol><li>To find out what users of the system think about the system. ×</li><li>To assist in marketing activities. ×</li><li>To make estimate for projects planning purposes. √</li><li>To use as input for dividing up the work into tasks. √</li><li>To analyze and predict characteristics of the implemented system. √</li><li>To present the future development of the product. ×</li></ol><h2 id="Categories-of-structures"><a href="#Categories-of-structures" class="headerlink" title="Categories of structures"></a>Categories of structures</h2><ul><li>First, some structures partition systems into implementation units called <strong>modules</strong>.</li><li>Other structures are dynamic, meaning that they focus on the way the elements interact with each other at runtime to carry out the system’s functions. we will call runtime structures <strong>component-and-connector (C&amp;C) structures</strong>.</li><li>A third kind of structure describes the mapping from software structures to the system’s organizational, developmental, installation, and execution environments. These mappings are called <strong>allocation structures</strong>.</li></ul><h2 id="Three-Kinds-of-Structures"><a href="#Three-Kinds-of-Structures" class="headerlink" title="Three Kinds of Structures"></a>Three Kinds of Structures</h2><h3 id="Module-structures"><a href="#Module-structures" class="headerlink" title="Module structures"></a><strong>Module structures</strong></h3><p>embody decisions as to how the system is to be structured as a set of code or data units that have to be constructed or procured. </p><ul><li><strong>Decomposition structure</strong>. The units are modules that are related to each other by the is-a-submodule-of relation, showing how modules are decomposed into smaller modules recursively until the modules are small enough to be easily understood.</li><li><strong>Uses structure</strong>. The units are related by the uses relation, a specialized form of dependency.</li><li><strong>Layer structure</strong>. The modules in this structure are called layers. A layer is an abstract “virtual machine” that provides a cohesive set of services through a managed interface.</li></ul><h3 id="Component-and-connector"><a href="#Component-and-connector" class="headerlink" title="Component-and-connector"></a><strong>Component-and-connector</strong></h3><p>structures embody decisions as to how the system is to be structured as a set of elements that have runtime behavior (components) and interactions (connectors). </p><ul><li><strong>Service structure</strong>. The units here are services that interoperate with each other by service coordination mechanisms.</li><li><strong>Concurrency structure</strong>. This component-and-connector structure allows the architect to determine opportunities for parallelism and the locations where resource contention may occur.</li></ul><h3 id="Allocation-structures"><a href="#Allocation-structures" class="headerlink" title="Allocation structures"></a><strong>Allocation structures</strong></h3><p>embody decisions as to how the system will relate to nonsoftware structures in its environment (such as CPUs, file systems, networks, development teams, etc.).</p><ul><li><strong>Deployment structure</strong>. The deployment structure shows how software is assigned to hardware processing and communication elements.</li><li><strong>Implementation structure</strong>. This structure shows how software elements (usually modules) are mapped to the file structure(s) in the system’s development, integration, or configuration control environments.</li><li><strong>Work assignment structure</strong>. This structure assigns responsibility for implementing and integrating the modules to the teams who will carry it out.</li></ul><h1 id="CH-4-Understanding-Quality-Attributes"><a href="#CH-4-Understanding-Quality-Attributes" class="headerlink" title="CH 4. Understanding Quality Attributes"></a>CH 4. Understanding Quality Attributes</h1><h2 id="System-requirements-can-be-categorized-as"><a href="#System-requirements-can-be-categorized-as" class="headerlink" title="System requirements can be categorized as"></a>System requirements can be categorized as</h2><p><strong>Functional requirements</strong>. These requirements state what the system must do, and how it must behave or react to run-time stimuli. </p><p><strong>Quality attribute requirements</strong>. These requirements annotate (qualify) functional requirements. Qualification might be how fast the function must be performed, how resilient it must be to erroneous input, how easy the function is to learn, etc.</p><p><strong>Constraints</strong>. A constraint is a design decision with zero degrees of freedom. That is, it’s a design decision that has already been made for you.</p><h2 id="Quality-Attribute-Requirements-six-parts"><a href="#Quality-Attribute-Requirements-six-parts" class="headerlink" title="Quality Attribute Requirements six parts"></a>Quality Attribute Requirements six parts</h2><ol><li><strong>Source of stimulus</strong>. This is some entity (a human, a computer system, or any other actuator) that generated the stimulus.</li><li><strong>Stimulus</strong>. The stimulus is a condition that requires a response when it arrives at a system.</li><li><strong>Environment</strong>. The stimulus occurs under certain conditions. The system may be in an overload condition or in normal operation, or some other relevant state. For many systems, “normal” operation can refer to one of a number of modes. For these kinds of systems, the environment should specify in which mode the system is executing.</li><li><strong>Artifact</strong>. Some artifact is stimulated. This may be a collection of systems, the whole system, or some piece or pieces of it.</li><li><strong>Response</strong>. The response is the activity undertaken as the result of the arrival of the stimulus.</li><li><strong>Response measure</strong>. When the response occurs, it should be measurable in some fashion so that the requirement can be tested.</li></ol><p><img src="/2019/01/19/期末复习/Software-Architecture-and-Quality/Software-Architecture-and-Quality/1547890359658.png" alt=""></p><h2 id="Guiding-Quality-Design-Decisions"><a href="#Guiding-Quality-Design-Decisions" class="headerlink" title="Guiding Quality Design Decisions"></a>Guiding Quality Design Decisions</h2><ul><li>Architecture design is a systematic approach to making design decisions.<h3 id="We-categorize-the-design-decisions-that-an-architect-needs-to-make-as-follows"><a href="#We-categorize-the-design-decisions-that-an-architect-needs-to-make-as-follows" class="headerlink" title="We categorize the design decisions that an architect needs to make as follows:"></a>We categorize the design decisions that an architect needs to make as follows:</h3><ul><li>Allocation of responsibilities</li><li><strong>Coordination model</strong></li><li><strong>Data model</strong></li><li>Management of resources</li><li>Mapping among architectural elements</li><li><strong>Binding time decisions</strong></li><li>Choice of technology<h2 id="Coordination-model"><a href="#Coordination-model" class="headerlink" title="Coordination model"></a><strong>Coordination model</strong></h2><h3 id="Software-works-by-having-elements-interact-with-each-other-through-designed-mechanisms-These-mechanisms-are-collectively-referred-to-as-a-coordination-model-Decisions-about-the-coordination-model-include-these"><a href="#Software-works-by-having-elements-interact-with-each-other-through-designed-mechanisms-These-mechanisms-are-collectively-referred-to-as-a-coordination-model-Decisions-about-the-coordination-model-include-these" class="headerlink" title="Software works by having elements interact with each other through designed mechanisms. These mechanisms are collectively referred to as a coordination model. Decisions about the coordination  model include these:"></a>Software works by having elements interact with each other through designed mechanisms. These mechanisms are collectively referred to as a coordination model. Decisions about the coordination  model include these:</h3></li></ul></li><li>Identifying the elements of the system that must coordinate, or are prohibited from coordinating.</li><li>Determining the <strong>properties of the coordination</strong>, such as <strong>timeliness, currency, completeness, correctness, and consistency</strong>.</li><li>Choosing the <strong>communication mechanisms</strong> (between systems, between our system and external entities, between elements of our system) that realize those properties. Important properties of the communication mechanisms include <strong>stateful versus stateless</strong>, <strong>synchronous versus asynchronous</strong>, <strong>guaranteed versus nonguaranteed delivery</strong>, and performance-related properties such as <strong>throughput and latency</strong>.<h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3></li><li>Both asynchronous communication and synchronous  communication can be used in the same system</li><li>Asynchronous communication does not block the program thread until a response is ready </li><li>Asynchronous communication guarantees when a response is returned<h2 id="Data-model"><a href="#Data-model" class="headerlink" title="Data model"></a><strong>Data model</strong></h2><h3 id="Every-system-must-represent-artifacts-of-system-wide-interest—data—in-some-internal-fashion-The-collection-of-those-representations-and-how-to-interpret-them-is-referred-to-as-the-data-model-Decisions-about-the-data-model-include-the-following"><a href="#Every-system-must-represent-artifacts-of-system-wide-interest—data—in-some-internal-fashion-The-collection-of-those-representations-and-how-to-interpret-them-is-referred-to-as-the-data-model-Decisions-about-the-data-model-include-the-following" class="headerlink" title="Every system must represent artifacts of system-wide interest—data—in some internal fashion. The collection of those representations and how to interpret them is referred to as the data model. Decisions about the data model include the following:"></a>Every system must represent artifacts of system-wide interest—data—in some internal fashion. The collection of those representations and how to interpret them is referred to as the data model. Decisions about the data model include the following:</h3></li><li>Choosing the major <strong>data abstractions</strong>, their operations, and their properties. This includes determining how the data items are created, initialized, accessed, persisted, manipulated, translated, and destroyed.</li></ul><ol><li><strong>Compiling metadata</strong> needed for consistent interpretation of the data.</li><li><strong>Organizing the data</strong>. This includes determining whether the data is going to be kept in a relational database, a collection of objects, or both. If both, then the mapping between the two different locations of the data must be determined.<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example:"></a>Example:</h3></li></ol><ul><li>Choosing the major data abstractions, their operations, and their  properties.</li><li>Compiling metadata needed for consistent interpretation of the data.</li><li>Organizing the data.<h2 id="Binding-time-decisions"><a href="#Binding-time-decisions" class="headerlink" title="Binding time decisions"></a><strong>Binding time decisions</strong></h2></li><li>Binding time decisions introduce allowable ranges of variation. This variation can be bound at different times in the software life cycle by different entities— from design time by a developer to runtime by an end user. A binding time decision establishes the scope, the point in the life cycle, and the mechanism for achieving the variation.<br>The decisions in the other six categories have an associated binding time decision. Examples of such binding time decisions include the following:</li><li>For allocation of responsibilities, you can have <strong>build-time selection of modules</strong> via a parameterized makefile.</li><li>For choice of coordination model, you can design <strong>runtime negotiation of protocols</strong>.</li><li>For resource management, you can design a system to <strong>accept new peripheral devices plugged in at runtime</strong>, after which the system recognizes them and <strong>downloads and installs the right drivers automatically</strong>.</li><li>For choice of technology, you can build an app store for a smartphone that <strong>automatically downloads the version of the app</strong> appropriate for the phone of the customer buying the app.<h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example:"></a>Example:</h3></li><li>Setting the hostname of the server in a configuration file</li><li>Using the user input to set the destination of a message</li><li>Using inheritance in the code to execute the different subclass implementations depending on program state</li></ul><h2 id="Quality-attributes"><a href="#Quality-attributes" class="headerlink" title="Quality attributes"></a>Quality attributes</h2><ol><li><strong>Availability</strong></li><li>Interoperability</li><li><strong>Modifiability</strong></li><li><strong>Performance</strong></li><li><strong>Security</strong></li><li><strong>Testability</strong></li><li>Usability</li></ol><h2 id="Development-time-qualities"><a href="#Development-time-qualities" class="headerlink" title="Development time qualities"></a>Development time qualities</h2><ul><li>Modifiability</li><li>Testability</li></ul><h1 id="CH5-Availability"><a href="#CH5-Availability" class="headerlink" title="CH5. Availability"></a>CH5. Availability</h1><h2 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h2><h3 id="Fault"><a href="#Fault" class="headerlink" title="Fault"></a><strong>Fault</strong></h3><ul><li>A failure’s cause is called a <strong>fault</strong>. A fault can be either internal or  external to the system under consideration. Intermediate states between the occurrence of a fault and the occurrence of a failure are called <strong>errors</strong>. </li></ul><h3 id="Failure"><a href="#Failure" class="headerlink" title="Failure"></a><strong>Failure</strong></h3><ul><li>A <strong>failure</strong> is the deviation of the system from its specification, where the deviation is externally visible.</li></ul><h3 id="Fault-and-failure"><a href="#Fault-and-failure" class="headerlink" title="Fault and failure"></a><strong>Fault and failure</strong></h3><h4 id="Fault-1"><a href="#Fault-1" class="headerlink" title="Fault"></a><strong>Fault</strong></h4><ul><li>Internal or external deviation of correct function<h4 id="Failure-1"><a href="#Failure-1" class="headerlink" title="Failure"></a><strong>Failure</strong></h4></li><li>When the system cannot provide its intended service</li><li>Caused by faults that could not be handled/repaired<h3 id="Resilient"><a href="#Resilient" class="headerlink" title="Resilient"></a><strong>Resilient</strong></h3></li><li>Faults can be prevented, tolerated, removed, or forecast. In this way a system becomes “<strong>resilient</strong>” to faults.</li></ul><h3 id="Degraded-operation-mode"><a href="#Degraded-operation-mode" class="headerlink" title="Degraded operation mode"></a><strong>Degraded operation mode</strong></h3><ul><li>we are often concerned with the level of capability that remains when a failure has occurred—a degraded operating mode.<h3 id="MTBF"><a href="#MTBF" class="headerlink" title="MTBF"></a><strong>MTBF</strong></h3><ul><li>mean time between failures<h3 id="MTTR"><a href="#MTTR" class="headerlink" title="MTTR"></a><strong>MTTR</strong></h3></li><li>mean time to repair<h3 id="Formula"><a href="#Formula" class="headerlink" title="Formula"></a><strong>Formula</strong></h3>$$<br>MTBF\over(MTBF+MTTR)<br>$$</li></ul></li></ul><h2 id="Service-Level-Agreement-SLA"><a href="#Service-Level-Agreement-SLA" class="headerlink" title="Service Level Agreement, SLA"></a><strong>Service Level Agreement, SLA</strong></h2><ul><li>The availability provided by a computer system or hosting service is frequently expressed as a <strong>service-level agreement</strong>. This SLA specifies the availability level that is guaranteed and, usually, the penalties that the computer system or hosting service will suffer if the SLA is violated.</li></ul><h2 id="Tactic"><a href="#Tactic" class="headerlink" title="Tactic"></a>Tactic</h2><p><img src="/2019/01/19/期末复习/Software-Architecture-and-Quality/Software-Architecture-and-Quality/1547958287611.png" alt=""></p><h3 id="Detect-Faults"><a href="#Detect-Faults" class="headerlink" title="Detect Faults"></a>Detect Faults</h3><h4 id="Heart-beat"><a href="#Heart-beat" class="headerlink" title="Heart-beat"></a><strong>Heart-beat</strong></h4><ul><li>Heartbeat is a fault detection mechanism that employs a periodic message exchange between a system monitor and a process being monitored.<h4 id="Ping-Echo"><a href="#Ping-Echo" class="headerlink" title="Ping/Echo"></a><strong>Ping/Echo</strong></h4></li><li>Ping/echo refers to an asynchronous request/response message pair exchanged between nodes, used to determine reachability and the round-trip delay through the associated network path.<h4 id="Heart-beat-tactic-vs-Ping-Echo-tactic"><a href="#Heart-beat-tactic-vs-Ping-Echo-tactic" class="headerlink" title="Heart-beat tactic vs. Ping/Echo- tactic"></a><strong>Heart-beat tactic</strong> vs. <strong>Ping/Echo- tactic</strong></h4></li><li>The big difference between heartbeat and ping/echo is who holds the responsibility for initiating the health check—the monitor or the component itself.<h3 id="Recover-from-Faults"><a href="#Recover-from-Faults" class="headerlink" title="Recover from Faults"></a>Recover from Faults</h3><h4 id="Active-Redundancy"><a href="#Active-Redundancy" class="headerlink" title="Active Redundancy"></a><strong>Active Redundancy</strong></h4></li><li>Active redundancy (hot spare). This refers to a configuration where all of the nodes (active or redundant spare) in a protection group receive and process identical inputs in parallel, allowing the redundant spare(s) to maintain synchronous state with the active node(s).<h4 id="Passive-Redundancy"><a href="#Passive-Redundancy" class="headerlink" title="Passive Redundancy"></a><strong>Passive Redundancy</strong></h4></li><li>Passive redundancy (warm spare). This refers to a configuration where only the active members of the protection group process input traffic; one of their duties is to provide the redundant spare(s) with periodic state updates.<h4 id="Spare"><a href="#Spare" class="headerlink" title="Spare"></a><strong>Spare</strong></h4></li><li>Spare (cold spare). Cold sparing refers to a configuration where the redundant spares of a protection group remain out of service until a fail-over occurs, at which point a power-on-reset procedure is initiated on the redundant spare prior to its being placed in service.<h4 id="Rollback"><a href="#Rollback" class="headerlink" title="Rollback"></a><strong>Rollback</strong></h4></li><li>Rollback. This tactic permits the system to revert to a previous known good state, referred to as the “rollback line”—rolling back time—upon the detection of a failure.</li></ul><h2 id="Fault-tree"><a href="#Fault-tree" class="headerlink" title="Fault tree"></a>Fault tree</h2><p>Fault tree analysis is an analytical technique that specifies a state of the system that negatively impacts safety or reliability, and then analyzes the system’s context and operation to find all the ways that the undesired state could occur.</p><p><img src="/2019/01/19/期末复习/Software-Architecture-and-Quality/Software-Architecture-and-Quality/1547915772754.png" alt="A simple fault tree. D fails if A fails and either B or C fails."></p><p><img src="/2019/01/19/期末复习/Software-Architecture-and-Quality/Software-Architecture-and-Quality/1547915852136.png" alt="Fault tree gate symbols"></p><h1 id="CH7-Modifiability"><a href="#CH7-Modifiability" class="headerlink" title="CH7. Modifiability"></a>CH7. Modifiability</h1><h2 id="What-is-Modifiability？"><a href="#What-is-Modifiability？" class="headerlink" title="What is Modifiability？"></a>What is Modifiability？</h2><ul><li>Modifiability is about change and our interest in it is in the cost and risk of making change</li><li>To plan for modifiability, an architect has to consider <strong>four questions</strong>:</li></ul><ol><li><strong>What can change?</strong><br>A change can occur to any aspect of a system: the <strong>functions</strong> that the system computes, the <strong>platform</strong> (the hardware, operating system, middleware), the <strong>environment</strong> in which the system operates (the systems with which it must interoperate, the <strong>protocols</strong> it uses to communicate with the rest of the world), the <strong>qualities</strong> the system exhibits (its performance, its reliability, and even its future modifications), and its <strong>capacity</strong> (number of users supported, number of simultaneous operations).</li><li><strong>What is the likelihood of the change?</strong><br>One cannot plan a system for all potential changes—the system would never be done, or if it was done it would be far too expensive and would likely suffer quality attribute problems in other dimensions. Although anything might change, <strong>the architect has to make the tough decisions about which changes are likely, and hence which changes are to be supported, and which are not.</strong></li><li><strong>When is the change made and who makes it?</strong><br>Most commonly in the past, a change was made to source code. Changes can be made to the <strong>implementation</strong> (by modifying the source code), during <strong>compile</strong> (using compile-time switches), during <strong>build</strong> (by choice of libraries), during <strong>configuration setup</strong> (by a range of techniques, including parameter setting), or during <strong>execution</strong> (by parameter settings, plugins, etc.). A change can also be made by a <strong>developer</strong>, an <strong>end user</strong>, or a <strong>system administrator</strong>.</li><li><strong>What is the cost of the change?</strong><br>Making a system more modifiable involves two types of cost:</li></ol><ul><li>The cost of introducing the mechanism(s) to make the system more modifiable</li><li>The cost of making the modification using the mechanism(s)</li></ul><h1 id="CH8-Performance"><a href="#CH8-Performance" class="headerlink" title="CH8. Performance"></a>CH8. Performance</h1><h2 id="Performance-General-Scenario"><a href="#Performance-General-Scenario" class="headerlink" title="Performance General Scenario"></a>Performance General Scenario</h2><table><thead><tr><th>Portion of Scenario</th><th>Possible Values</th></tr></thead><tbody><tr><td>Source</td><td>Internal or external to the system</td></tr><tr><td>Stimulus</td><td>Arrival of a periodic, sporadic, or stochastic event</td></tr><tr><td>Artifact</td><td>System or one or more components in the system</td></tr><tr><td>Environment</td><td>Operational mode: normal, emergency, peak load, overload</td></tr><tr><td>Response</td><td>Process events, change level of service</td></tr><tr><td>Response Measure</td><td>Latency, deadline, throughput, jitter, miss rate</td></tr></tbody></table><h2 id="Tactics-for-Performance"><a href="#Tactics-for-Performance" class="headerlink" title="Tactics for Performance"></a>Tactics for Performance</h2><p><img src="/2019/01/19/期末复习/Software-Architecture-and-Quality/Software-Architecture-and-Quality/1547962999199.png" alt="Performance tactics"></p><h3 id="Control-Resource-Demand"><a href="#Control-Resource-Demand" class="headerlink" title="Control Resource Demand"></a><strong>Control Resource Demand</strong></h3><ul><li><strong>Manage sampling rate</strong>. If it is possible to reduce the sampling frequency at which a stream of environmental data is captured, then demand can be reduced, typically with some attendant loss of fidelity.</li><li><strong>Limit event response</strong>. Process events only up to a set maximum rate, thereby ensuring more predictable processing when the events are actually processed.</li><li><strong>Prioritize events</strong>. If not all events are equally important, you can impose a priority scheme that ranks events according to how important it is to service them.<h3 id="Manage-Resources"><a href="#Manage-Resources" class="headerlink" title="Manage Resources"></a><strong>Manage Resources</strong></h3></li><li><strong>Increase resources</strong>. Faster processors, additional processors, additional memory, and faster networks all have the potential for reducing latency.</li><li><strong>Introduce concurrency</strong>. Concurrency can be introduced by processing different streams of events on different threads or by creating additional threads to process different sets of activities.</li><li><strong>Maintain multiple copies of computations</strong>. Reduce the contention that would occur if all computations took place on a single server.</li></ul><h1 id="CH13-Patterns-and-Tactics"><a href="#CH13-Patterns-and-Tactics" class="headerlink" title="CH13. Patterns and Tactics"></a>CH13. Patterns and Tactics</h1><h2 id="What-is-a-Pattern"><a href="#What-is-a-Pattern" class="headerlink" title="What is a Pattern?"></a>What is a Pattern?</h2><p>An architectural pattern</p><ul><li>is a package of design decisions that is found repeatedly in practice,</li><li>has known properties that permit reuse, and</li><li>describes a class of architectures.</li></ul><h2 id="Architectural-Pattern"><a href="#Architectural-Pattern" class="headerlink" title="Architectural Pattern"></a>Architectural Pattern</h2><ul><li><strong>A context</strong>. A recuSrring, common situation in the world that gives rise to a problem.</li><li><strong>A problem</strong>. The problem, appropriately generalized, that arises in the given context. </li><li><strong>A solution</strong>. A successful architectural resolution to the problem, appropriately abstracted. The solution for a pattern is determined and described by:<ul><li>A set of element types (for example, data repositories, processes, and objects)</li><li>A set of interaction mechanisms or connectors (for example, method calls, events, or message bus)</li><li>A topological layout of the components</li><li>A set of semantic constraints covering topology, element behavior, and interaction mechanisms</li></ul></li></ul><h1 id="CH18-Architecture-Document"><a href="#CH18-Architecture-Document" class="headerlink" title="CH18. Architecture Document"></a>CH18. Architecture Document</h1><h2 id="View-consistency"><a href="#View-consistency" class="headerlink" title="View consistency"></a>View consistency</h2><h3 id="A-view-is-consistent-with-its-definition-when"><a href="#A-view-is-consistent-with-its-definition-when" class="headerlink" title="A view is consistent with its definition when:"></a>A view is consistent with its definition when:</h3><ul><li>All <strong>elements</strong> that fulfills the selection criterion is in the view</li><li>All <strong>relations</strong> that fulfills the selection criterion is in the view</li><li>That all <strong>properties</strong> that fulfills the selection criterion is in the view</li><li>THAT <strong>NO additional</strong> elements, relation or properties that does not meet the selection is in the view<h4 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h4>All elements in the view must have a corresponding part in the view definition.<h4 id="Relation"><a href="#Relation" class="headerlink" title="Relation"></a>Relation</h4>Only relations that meet the selection criteria must be in the view.<h4 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h4>Properties must have values in the view.<h4 id="Criteria"><a href="#Criteria" class="headerlink" title="Criteria"></a>Criteria</h4>Selection criteria can exclude certain elements or relations from the view.</li></ul><h2 id="4-1-view-model"><a href="#4-1-view-model" class="headerlink" title="4+1 view model"></a>4+1 view model</h2><p>Logical, Process, Development, Physical + Use Cases</p>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The-design-and-analysis-of-algorithms for Exam</title>
      <link href="/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms%20for%20Exam/"/>
      <url>/2019/01/19/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms%20for%20Exam/</url>
      
        <content type="html"><![CDATA[<h1 id="This-question-tests-your-knowledge-on-algorithms-and-algorithm-construction"><a href="#This-question-tests-your-knowledge-on-algorithms-and-algorithm-construction" class="headerlink" title="This question tests your knowledge on algorithms and algorithm construction:"></a>This question tests your knowledge on algorithms and algorithm construction:</h1><p><strong>(a) A function that is defined in terms of itself is called a recursive function. Describe the purpose of a base case in a recursive function.(3p)</strong></p><p>A base case is an (input) value for which the function can be calculated without recursion. </p><p>There needs to be at least one base case, which can be solved without recursion. </p><p>For the cases that are solved using recursion, the recursive calls must progress towards a base case.</p><p><strong>(b) Mergesort is based on the principles of divide-and-conquer. Briefly describe what the mergesort algorithm does in the divide step and in the conquer step. (4p)</strong></p><p><strong>Divide step:</strong> Divide the array into two parts to convert the problem of sorting the entire array into sub-problems (to sort the left and right arrays separately) until the size of the array is 1.</p><p><strong>Conquer step:</strong> Repeatedly merging sorted lists into sorted lists of larger size until the initial list is sorted.</p><p><strong>(c) A constructive heuristic is a method that iteratively “builds up” a solution. It starts with nothing and adds (fixes) the value of exactly one variable (solution component) in each of the iterations. The algorithm ends when all variables have been assigned a value. Describe what is a greedy constructive heuristic. (3p)</strong></p><p>Each variable fixing is chosen as the variable that (locally) improves the objective most. Of course, variable fixings are chosen without breaking feasibility.</p><h1 id="This-question-test-your-knowledge-on-graphs-and-trees"><a href="#This-question-test-your-knowledge-on-graphs-and-trees" class="headerlink" title="This question test your knowledge on graphs and trees."></a>This question test your knowledge on graphs and trees.</h1><p><strong>(a) What does a “worst case” binary tree look like? (5p)</strong></p><p>In the <em>worst case</em>, if the binary search tree has n nodes,  it can have O(n) height, when the unbalanced <em>tree</em> looks like a linked list. </p><p>The worst case occurs when inserting an sorted list into the tree in order.</p><p><strong>(b) Describe what is a topological ordering. (4p)</strong></p><p>A topological ordering of a directed non-cyclic graph is an ordering of the vertices such that if there is an edge (u, v) between u and v, then u comes before v in the ordering.</p><p><strong>(c) Illustrate and explain using an example why there can be no topological ordering of a graph that contains a cycle. (6p)</strong></p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547384256672.png" alt="graph"> </p><p>Consider the cycle v5 -&gt; v6 -&gt; v8 -&gt; v5:</p><ul><li>(v5, v6) 属于 E =&gt; v5 needs to come before v6 in the topological order.</li><li>(v6, v8) 属于  E =&gt; v6 needs to come before v8 in the topological order =&gt; v5 before v8 in the topological order.</li><li>(v8, v5) 属于  E =&gt; v8 needs to come before v5 in the topological order, which is not possible as we previously concluded the opposite.</li></ul><h1 id="This-question-concerns-complexity-analysis"><a href="#This-question-concerns-complexity-analysis" class="headerlink" title="This question concerns complexity analysis."></a>This question concerns complexity analysis.</h1><p><strong>(a) Briefly describe the complexity class P. (3p)</strong></p><p>All problems that can be solved using a polynomial bound algorithm belongs to the same complexity class (complexity class P).</p><p><strong>(b) Describe what is a basic operation of an algorithm. (3p)</strong></p><p>A basic operation can be seen as an operation that is fundamental for the performance of a particular algorithm.</p><p>The performance of the algorithm is in principle proportional to the number of basic operations.</p><p><strong>(c) Describe the concepts of worst-case and average-case complexity of an algorithm. (6p)</strong></p><p><strong>The worst-case</strong> complexity W(n) of an algorithm is the maximum number of basic operations performed for any input of size n.</p><p><strong>The average-case</strong> complexity A(n) of an algorithm is the average number of basic operations performed by the algorithm, where each input I occurs with some probability p(I).</p><p><strong>(d) What does it mean to say that a data structure has an amortized bound of O(n) per operation? (3p).</strong></p><p>This means that regardless of which sequence of n operations, the worst-case average cost per operation is O(n).</p><h1 id="Your-task-for-this-question-is-to-insert-a-node-with-value-5-into-the-following-splay-tree"><a href="#Your-task-for-this-question-is-to-insert-a-node-with-value-5-into-the-following-splay-tree" class="headerlink" title="Your task for this question is to insert a node with value 5 into the following splay tree."></a>Your task for this question is to insert a node with value 5 into the following splay tree.</h1><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547391999965.png" alt="tree"></p><p>You are required to show what the tree looks like after inserting the new node and after each of the (3) splay operations.</p><p>Hint: you will have to perform all three types of splay operations. (20p)</p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547392108870.png" alt="1"></p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547392250882.png" alt="2"></p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547392299434.png" alt="3"></p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547392316867.png" alt="4"></p><h1 id="Your-task-is-to-apply-dynamic-programming-in-order-to-solve-a-knapsack"><a href="#Your-task-is-to-apply-dynamic-programming-in-order-to-solve-a-knapsack" class="headerlink" title="Your task is to apply dynamic programming in order to solve a knapsack"></a>Your task is to apply dynamic programming in order to solve a knapsack</h1><p>problem instance with 4 items:<br>Item 1: Value: p1 = 8 - Weight: w1 = 2<br>Item 2: Value: p2 = 6 - Weight: w2 = 1<br>Item 3: Value: p3 = 7 - Weight: w3 = 2<br>Item 4: Value: p4 = 5 - Weight: w4 = 1<br>The knapsack (bag) has a weight capacity of 4 (W = 4).<br>You should graphically illustrate your solution. (20p)</p><p><img src="/2019/01/19/期末复习/The-design-and-analysis-of-algorithms/The-design-and-analysis-of-algorithms for Exam/1547392549396.png" alt="solution"></p>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTH </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 Tomcat开机自启动配置</title>
      <link href="/2019/01/13/Linux/CentOS/CentOS%207%20Tomcat%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/13/Linux/CentOS/CentOS%207%20Tomcat%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-7-Tomcat开机自启动配置"><a href="#CentOS-7-Tomcat开机自启动配置" class="headerlink" title="CentOS 7 Tomcat开机自启动配置"></a>CentOS 7 Tomcat开机自启动配置</h1><h2 id="配置开机运行"><a href="#配置开机运行" class="headerlink" title="配置开机运行"></a>配置开机运行</h2><h3 id="Tomcat增加启动参数"><a href="#Tomcat增加启动参数" class="headerlink" title="Tomcat增加启动参数"></a>Tomcat增加启动参数</h3><p>Tomcat需要增加一个pid文件，在 <code>$CATALINA_HOME/bin</code> 目录下面，增加 <code>setenv.sh</code> 配置，<code>catalina.sh</code>启动的时候会调用，同时配置Java内存参数。添加如下命令：<br><code>[root@vps bin]# vim setenv.sh</code></p><pre><code class="sh">#Tomcat startup pid#set Java runtime environment variable export JAVA_HOME=/usr/java/jdk1.8.0_191-amd64export PATH=$PATH:$JAVA_HOME/binexport CATALINA_HOME=/developer/apache-tomcat-7.0.91export CATALINA_BASE=/developer/apache-tomcat-7.0.91#add Tomcat pidCATALINA_PID=&quot;$CATALINA_BASE/tomcat.pid&quot;#add Java optsJAVA_OPTS=&quot;-server -XX:PermSize=256M -XX:MaxPermSize=1024m -Xms512M -Xmx1024M -XX:MaxNewSize=256m&quot;</code></pre><p><strong>注意:</strong> 配置开机运行时,需要再次添加 JAVA_HOME</p><h3 id="增加-tomcat-service"><a href="#增加-tomcat-service" class="headerlink" title="增加 tomcat.service"></a>增加 tomcat.service</h3><p>在/usr/lib/systemd/system目录下增加tomcat.service，目录必须是绝对目录，添加如下命令：<br><code>[root@vps bin]# vim /usr/lib/systemd/system/tomcat.service</code></p><pre><code class="sh"># conf service desc ,set do this after network started[Unit]Description=tomcat After=syslog.target network.target remote-fs.target nss-lookup.target# conf service pid, start,stop and restart[Service]Type=forkingPIDFile=/developer/apache-tomcat-7.0.91/tomcat.pidExecStart=/developer/apache-tomcat-7.0.91/bin/startup.shExecStop=/bin/kill -s QUIT $MAINPIDExecReload=/bin/kill -s HUP $MAINPIDPrivateTmp=true# conf user [Install]WantedBy=multi-user.target</code></pre><p><em>[unit]:</em> 配置了服务的描述，规定了在network启动之后执行，</p><p><em>[service]:</em> 配置服务的pid，服务的启动，停止，重启</p><p><em>[install]:</em> 配置了使用用户</p><h3 id="使用tomcat-service"><a href="#使用tomcat-service" class="headerlink" title="使用tomcat.service"></a>使用tomcat.service</h3><p>centos7使用systemctl替换了service命令，如需设置其他服务，替换此处的tomcat即可，如:<code>systemctl start vsftp.service</code></p><ul><li>启动服务<br>systemctl start tomcat.service</li><li>停止服务<br>systemctl stop tomcat.service</li><li>重启服务<br>systemctl restart tomcat.service</li><li>增加开机启动<br>systemctl enable tomcat.service</li><li>删除开机启动<br>systemctl disable tomcat.service</li></ul><p>因为配置pid，在启动的时候会在Tomcat的根目录下生产tomcat.pid文件,服务停止后删除。<br>同时Tomcat在启动时，执行start不会启动两个Tomcat，保证始终只有一个Tomcat服务在运行。多个Tomcat可以配置在多个目录下，互不影响。</p><h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>重启服务器后,通过wget访问，终端输出如下所示，配置tomcat开机自启动成功！</p><pre><code class="shell">[root@vps ~]# wget 35.234.8.23:8080--2019-01-12 16:02:41--  http://35.234.8.23:8080/Connecting to 35.234.8.23:8080... connected.HTTP request sent, awaiting response... 200 OKLength: 909 [text/html]Saving to: ‘index.html’100%[===========================================================&gt;] 909         --.-K/s   in 0s      2019-01-12 16:02:41 (157 MB/s) - ‘index.html’ saved [909/909]</code></pre><p>同时,客户端浏览器也能成功访问。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>J2EE基础知识</title>
      <link href="/2019/01/04/Java/J2EE/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/01/04/Java/J2EE/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Servlet总结"><a href="#Servlet总结" class="headerlink" title="Servlet总结"></a>Servlet总结</h2><p>在Java Web程序中，<strong>Servlet</strong>主要负责接收用户请求<strong>HttpServletRequest</strong>,在<strong>doGet()</strong>,<strong>doPost()中做相应的处理，并将回应HttpServletResponse</strong>反馈给用户。Servlet可以设置初始化参数，供Servlet内部使用。一个Servlet类只会有一个实例，在它初始化时调用<strong>init()方法</strong>，销毁时调用<strong>destroy()方法</strong>。<strong>Servlet需要在web.xml中配置</strong>（MyEclipse中创建Servlet会自动配置），<strong>一个Servlet可以设置多个URL访问</strong>。<strong>Servlet不是线程安全</strong>，因此要谨慎使用类变量。</p><h2 id="阐述Servlet和CGI的区别"><a href="#阐述Servlet和CGI的区别" class="headerlink" title="阐述Servlet和CGI的区别?"></a>阐述Servlet和CGI的区别?</h2><h3 id="CGI的不足之处"><a href="#CGI的不足之处" class="headerlink" title="CGI的不足之处:"></a>CGI的不足之处:</h3><p>1，需要为每个请求启动一个操作CGI程序的系统进程。如果请求频繁，这将会带来很大的开销。</p><p>2，需要为每个请求加载和运行一个CGI程序，这将带来很大的开销</p><p>3，需要重复编写处理网络协议的代码以及编码，这些工作都是非常耗时的。</p><h3 id="Servlet的优点"><a href="#Servlet的优点" class="headerlink" title="Servlet的优点:"></a>Servlet的优点:</h3><p>1，只需要启动一个操作系统进程以及加载一个JVM，大大降低了系统的开销</p><p>2，如果多个请求需要做同样处理的时候，这时候只需要加载一个类，这也大大降低了开销</p><p>3，所有动态加载的类可以实现对网络协议以及请求解码的共享，大大降低了工作量。</p><p>4，Servlet能直接和Web服务器交互，而普通的CGI程序不能。Servlet还能在各个程序之间共享数据，使数据库连接池之类的功能很容易实现。</p><p>补充：Sun Microsystems公司在1996年发布Servlet技术就是为了和CGI进行竞争，Servlet是一个特殊的Java程序，一个基于Java的Web应用通常包含一个或多个Servlet类。Servlet不能够自行创建并执行，它是在Servlet容器中运行的，容器将用户的请求传递给Servlet程序，并将Servlet的响应回传给用户。通常一个Servlet会关联一个或多个JSP页面。以前CGI经常因为性能开销上的问题被诟病，然而Fast CGI早就已经解决了CGI效率上的问题，所以面试的时候大可不必信口开河的诟病CGI，事实上有很多你熟悉的网站都使用了CGI技术。</p><p>参考：《javaweb整合开发王者归来》P7</p><h2 id="Servlet接口中有哪些方法及Servlet生命周期探秘"><a href="#Servlet接口中有哪些方法及Servlet生命周期探秘" class="headerlink" title="Servlet接口中有哪些方法及Servlet生命周期探秘"></a>Servlet接口中有哪些方法及Servlet生命周期探秘</h2><p>Servlet接口定义了5个方法，其中<strong>前三个方法与Servlet生命周期相关</strong>：</p><ul><li><strong>void init(ServletConfig config) throws ServletException</strong></li><li><strong>void service(ServletRequest req, ServletResponse resp) throws ServletException, java.io.IOException</strong></li><li><strong>void destory()</strong></li><li>java.lang.String getServletInfo()</li><li>ServletConfig getServletConfig()</li></ul><p><strong>生命周期：</strong> <strong>Web容器加载Servlet并将其实例化后，Servlet生命周期开始</strong>，容器运行其<strong>init()方法</strong>进行Servlet的初始化；请求到达时调用Servlet的<strong>service()方法</strong>，service()方法会根据需要调用与请求对应的<strong>doGet或doPost</strong>等方法；当服务器关闭或项目被卸载时服务器会将Servlet实例销毁，此时会调用Servlet的<strong>destroy()方法</strong>。<strong>init方法和destory方法只会执行一次，service方法客户端每次请求Servlet都会执行</strong>。Servlet中有时会用到一些需要初始化与销毁的资源，因此可以把初始化资源的代码放入init方法中，销毁资源的代码放入destroy方法中，这样就不需要每次处理客户端的请求都要初始化与销毁资源。</p><p>参考：《javaweb整合开发王者归来》P81</p><h2 id="get和post请求的区别"><a href="#get和post请求的区别" class="headerlink" title="get和post请求的区别"></a>get和post请求的区别</h2><blockquote><p>网上也有文章说：get和post请求实际上是没有区别，大家可以自行查询相关文章！我下面给出的只是一种常见的答案。</p></blockquote><p>①get请求用来从服务器上获得资源，而post是用来向服务器提交数据；</p><p>②get将表单中数据按照name=value的形式，添加到action 所指向的URL 后面，并且两者使用”?”连接，而各个变量之间使用”&amp;”连接；post是将表单中的数据放在HTTP协议的请求头或消息体中，传递到action所指向URL；</p><p>③get传输的数据要受到URL长度限制（1024字节即256个字符）；而post可以传输大量的数据，上传文件通常要使用post方式；</p><p>④使用get时参数会显示在地址栏上，如果这些数据不是敏感数据，那么可以使用get；对于敏感数据还是应用使用post；</p><p>⑤get使用MIME类型application/x-www-form-urlencoded的URL编码（也叫百分号编码）文本的格式传递参数，保证被传送的参数由遵循规范的文本组成，例如一个空格的编码是”%20”。</p><p>补充：GET方式提交表单的典型应用是搜索引擎。GET方式就是被设计为查询用的。</p><p>还有另外一种回答。推荐大家看一下：</p><ul><li><a href="https://www.zhihu.com/question/28586791" target="_blank" rel="noopener">https://www.zhihu.com/question/28586791</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI3NzIzMzg3Mw==&amp;mid=100000054&amp;idx=1&amp;sn=71f6c214f3833d9ca20b9f7dcd9d33e4#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI3NzIzMzg3Mw==&amp;mid=100000054&amp;idx=1&amp;sn=71f6c214f3833d9ca20b9f7dcd9d33e4#rd</a></li></ul><h2 id="什么情况下调用doGet-和doPost"><a href="#什么情况下调用doGet-和doPost" class="headerlink" title="什么情况下调用doGet()和doPost()"></a>什么情况下调用doGet()和doPost()</h2><p>Form标签里的method的属性为get时调用doGet()，为post时调用doPost()。</p><h2 id="转发-Forward-和重定向-Redirect-的区别"><a href="#转发-Forward-和重定向-Redirect-的区别" class="headerlink" title="转发(Forward)和重定向(Redirect)的区别"></a>转发(Forward)和重定向(Redirect)的区别</h2><p><strong>转发是服务器行为，重定向是客户端行为。</strong></p><p><strong>转发（Forword）</strong> 通过RequestDispatcher对象的forward（HttpServletRequest request,HttpServletResponse response）方法实现的。RequestDispatcher可以通过HttpServletRequest 的getRequestDispatcher()方法获得。例如下面的代码就是跳转到login_success.jsp页面。</p><pre><code>     request.getRequestDispatcher(&quot;login_success.jsp&quot;).forward(request, response);</code></pre><p><strong>重定向（Redirect）</strong> 是利用服务器返回的状态吗来实现的。客户端浏览器请求服务器的时候，服务器会返回一个状态码。服务器通过HttpServletRequestResponse的setStatus(int status)方法设置状态码。如果服务器返回301或者302，则浏览器会到新的网址重新请求该资源。</p><ol><li><strong>从地址栏显示来说</strong></li></ol><p>forward是服务器请求资源,服务器直接访问目标地址的URL,把那个URL的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,所以它的地址栏还是原来的地址. redirect是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的URL.</p><ol><li><strong>从数据共享来说</strong></li></ol><p>forward:转发页面和转发到的页面可以共享request里面的数据. redirect:不能共享数据.</p><ol><li><strong>从运用地方来说</strong></li></ol><p>forward:一般用于用户登陆的时候,根据角色转发到相应的模块. redirect:一般用于用户注销登陆时返回主页面和跳转到其它的网站等</p><ol><li>从效率来说</li></ol><p>forward:高. redirect:低.</p><h2 id="自动刷新-Refresh"><a href="#自动刷新-Refresh" class="headerlink" title="自动刷新(Refresh)"></a>自动刷新(Refresh)</h2><p>自动刷新不仅可以实现一段时间之后自动跳转到另一个页面，还可以实现一段时间之后自动刷新本页面。Servlet中通过HttpServletResponse对象设置Header属性实现自动刷新例如：</p><pre><code>Response.setHeader(&quot;Refresh&quot;,&quot;5;URL=http://localhost:8080/servlet/example.htm&quot;);</code></pre><p>其中5为时间，单位为秒。URL指定就是要跳转的页面（如果设置自己的路径，就会实现每过一秒自动刷新本页面一次）</p><h2 id="Servlet与线程安全"><a href="#Servlet与线程安全" class="headerlink" title="Servlet与线程安全"></a>Servlet与线程安全</h2><p><strong>Servlet不是线程安全的，多线程并发的读写会导致数据不同步的问题。</strong> 解决的办法是尽量不要定义name属性，而是要把name变量分别定义在doGet()和doPost()方法内。虽然使用synchronized(name){}语句块可以解决问题，但是会造成线程的等待，不是很科学的办法。 注意：多线程的并发的读写Servlet类属性会导致数据不同步。但是如果只是并发地读取属性而不写入，则不存在数据不同步的问题。因此Servlet里的只读属性最好定义为final类型的。</p><p>参考：《javaweb整合开发王者归来》P92</p><h2 id="JSP和Servlet是什么关系"><a href="#JSP和Servlet是什么关系" class="headerlink" title="JSP和Servlet是什么关系"></a>JSP和Servlet是什么关系</h2><p>其实这个问题在上面已经阐述过了，Servlet是一个特殊的Java程序，它运行于服务器的JVM中，能够依靠服务器的支持向浏览器提供显示内容。JSP本质上是Servlet的一种简易形式，JSP会被服务器处理成一个类似于Servlet的Java程序，可以简化页面内容的生成。Servlet和JSP最主要的不同点在于，Servlet的应用逻辑是在Java文件中，并且完全从表示层中的HTML分离开来。而JSP的情况是Java和HTML可以组合成一个扩展名为.jsp的文件。有人说，Servlet就是在Java中写HTML，而JSP就是在HTML中写Java代码，当然这个说法是很片面且不够准确的。JSP侧重于视图，Servlet更侧重于控制逻辑，在MVC架构模式中，JSP适合充当视图（view）而Servlet适合充当控制器（controller）。</p><h2 id="JSP工作原理"><a href="#JSP工作原理" class="headerlink" title="JSP工作原理"></a>JSP工作原理</h2><p>JSP是一种Servlet，但是与HttpServlet的工作方式不太一样。HttpServlet是先由源代码编译为class文件后部署到服务器下，为先编译后部署。而JSP则是先部署后编译。JSP会在客户端第一次请求JSP文件时被编译为HttpJspPage类（接口Servlet的一个子类）。该类会被服务器临时存放在服务器工作目录里面。下面通过实例给大家介绍。 工程JspLoginDemo下有一个名为login.jsp的Jsp文件，把工程第一次部署到服务器上后访问这个Jsp文件，我们发现这个目录下多了下图这两个东东。 .class文件便是JSP对应的Servlet。编译完毕后再运行class文件来响应客户端请求。以后客户端访问login.jsp的时候，Tomcat将不再重新编译JSP文件，而是直接调用class文件来响应客户端请求。<img src="/2019/01/04/Java/J2EE/J2EE基础知识/68747470733a2f2f757365722d676f6c642d63646e2e786974752e696f2f323031382f332f33312f313632376265653037333037396132383f773d36373526683d32393226663d6a70656726733d313333353533.jpg" alt="JSP工作原理"> </p><p>由于JSP只会在客户端第一次请求的时候被编译 ，因此第一次请求JSP时会感觉比较慢，之后就会感觉快很多。如果把服务器保存的class文件删除，服务器也会重新编译JSP。</p><p>开发Web程序时经常需要修改JSP。Tomcat能够自动检测到JSP程序的改动。如果检测到JSP源代码发生了改动。Tomcat会在下次客户端请求JSP时重新编译JSP，而不需要重启Tomcat。这种自动检测功能是默认开启的，检测改动会消耗少量的时间，在部署Web应用的时候可以在web.xml中将它关掉。</p><p>参考：《javaweb整合开发王者归来》P97</p><h2 id="JSP有哪些内置对象、作用分别是什么"><a href="#JSP有哪些内置对象、作用分别是什么" class="headerlink" title="JSP有哪些内置对象、作用分别是什么"></a>JSP有哪些内置对象、作用分别是什么</h2><p><a href="http://blog.csdn.net/qq_34337272/article/details/64310849" target="_blank" rel="noopener">JSP内置对象 - CSDN博客</a></p><p>JSP有9个内置对象：</p><ul><li>request：封装客户端的请求，其中包含来自GET或POST请求的参数；</li><li>response：封装服务器对客户端的响应；</li><li>pageContext：通过该对象可以获取其他对象；</li><li>session：封装用户会话的对象；</li><li>application：封装服务器运行环境的对象；</li><li>out：输出服务器响应的输出流对象；</li><li>config：Web应用的配置对象；</li><li>page：JSP页面本身（相当于Java程序中的this）；</li><li>exception：封装页面抛出异常的对象。</li></ul><h2 id="Request对象的主要方法有哪些"><a href="#Request对象的主要方法有哪些" class="headerlink" title="Request对象的主要方法有哪些"></a>Request对象的主要方法有哪些</h2><ul><li>setAttribute(String name,Object)：设置名字为name的request 的参数值</li><li>getAttribute(String name)：返回由name指定的属性值</li><li>getAttributeNames()：返回request 对象所有属性的名字集合，结果是一个枚举的实例</li><li>getCookies()：返回客户端的所有 Cookie 对象，结果是一个Cookie 数组</li><li>getCharacterEncoding() ：返回请求中的字符编码方式 = getContentLength() ：返回请求的 Body的长度</li><li>getHeader(String name) ：获得HTTP协议定义的文件头信息</li><li>getHeaders(String name) ：返回指定名字的request Header 的所有值，结果是一个枚举的实例</li><li>getHeaderNames() ：返回所以request Header 的名字，结果是一个枚举的实例</li><li>getInputStream() ：返回请求的输入流，用于获得请求中的数据</li><li>getMethod() ：获得客户端向服务器端传送数据的方法</li><li>getParameter(String name) ：获得客户端传送给服务器端的有 name指定的参数值</li><li>getParameterNames() ：获得客户端传送给服务器端的所有参数的名字，结果是一个枚举的实例</li><li>getParameterValues(String name)：获得有name指定的参数的所有值</li><li>getProtocol()：获取客户端向服务器端传送数据所依据的协议名称</li><li>getQueryString() ：获得查询字符串</li><li>getRequestURI() ：获取发出请求字符串的客户端地址</li><li>getRemoteAddr()：获取客户端的 IP 地址</li><li>getRemoteHost() ：获取客户端的名字</li><li>getSession([Boolean create]) ：返回和请求相关 Session</li><li>getServerName() ：获取服务器的名字</li><li>getServletPath()：获取客户端所请求的脚本文件的路径</li><li>getServerPort()：获取服务器的端口号</li><li>removeAttribute(String name)：删除请求中的一个属性</li></ul><h2 id="request-getAttribute-和-request-getParameter-有何区别"><a href="#request-getAttribute-和-request-getParameter-有何区别" class="headerlink" title="request.getAttribute()和 request.getParameter()有何区别"></a>request.getAttribute()和 request.getParameter()有何区别</h2><p><strong>从获取方向来看：</strong></p><p>getParameter()是获取 POST/GET 传递的参数值；</p><p>getAttribute()是获取对象容器中的数据值；</p><p><strong>从用途来看：</strong></p><p>getParameter用于客户端重定向时，即点击了链接或提交按扭时传值用，即用于在用表单或url重定向传值时接收数据用。</p><p>getAttribute用于服务器端重定向时，即在 sevlet 中使用了 forward 函数,或 struts 中使用了 mapping.findForward。 getAttribute 只能收到程序用 setAttribute 传过来的值。</p><p>另外，可以用 setAttribute,getAttribute 发送接收对象.而 getParameter 显然只能传字符串。 setAttribute 是应用服务器把这个对象放在该页面所对应的一块内存中去，当你的页面服务器重定向到另一个页面时，应用服务器会把这块内存拷贝另一个页面所对应的内存中。这样getAttribute就能取得你所设下的值，当然这种方法可以传对象。session也一样，只是对象在内存中的生命周期不一样而已。getParameter只是应用服务器在分析你送上来的 request页面的文本时，取得你设在表单或 url 重定向时的值。</p><p><strong>总结：</strong></p><p>getParameter 返回的是String,用于读取提交的表单中的值;（获取之后会根据实际需要转换为自己需要的相应类型，比如整型，日期类型啊等等）</p><p>getAttribute 返回的是Object，需进行转换,可用setAttribute 设置成任意对象，使用很灵活，可随时用</p><h2 id="include指令include的行为的区别"><a href="#include指令include的行为的区别" class="headerlink" title="include指令include的行为的区别"></a>include指令include的行为的区别</h2><p><strong>include指令：</strong> JSP可以通过include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。 语法格式如下： &lt;%@ include file=”文件相对 url 地址” %&gt;</p><p>i<strong>nclude动作：</strong> jsp:include动作元素用来包含静态和动态的文件。该动作把指定文件插入正在生成的页面。语法格式如下： &lt;jsp:include page=”相对 URL 地址” flush=”true” /&gt;</p><h2 id="JSP九大内置对象，七大动作，三大指令"><a href="#JSP九大内置对象，七大动作，三大指令" class="headerlink" title="JSP九大内置对象，七大动作，三大指令"></a>JSP九大内置对象，七大动作，三大指令</h2><p><a href="http://blog.csdn.net/qq_34337272/article/details/64310849" target="_blank" rel="noopener">JSP九大内置对象，七大动作，三大指令总结</a></p><h2 id="讲解JSP中的四种作用域"><a href="#讲解JSP中的四种作用域" class="headerlink" title="讲解JSP中的四种作用域"></a>讲解JSP中的四种作用域</h2><p>JSP中的四种作用域包括page、request、session和application，具体来说：</p><ul><li><strong>page</strong>代表与一个页面相关的对象和属性。</li><li><strong>request</strong>代表与Web客户机发出的一个请求相关的对象和属性。一个请求可能跨越多个页面，涉及多个Web组件；需要在页面显示的临时数据可以置于此作用域。</li><li><strong>session</strong>代表与某个用户与服务器建立的一次会话相关的对象和属性。跟某个用户相关的数据应该放在用户自己的session中。</li><li><strong>application</strong>代表与整个Web应用程序相关的对象和属性，它实质上是跨越整个Web应用程序，包括多个页面、请求和会话的一个全局作用域。</li></ul><h2 id="如何实现JSP或Servlet的单线程模式"><a href="#如何实现JSP或Servlet的单线程模式" class="headerlink" title="如何实现JSP或Servlet的单线程模式"></a>如何实现JSP或Servlet的单线程模式</h2><p>对于JSP页面，可以通过page指令进行设置。 &lt;%@page isThreadSafe=”false”%&gt;</p><p>对于Servlet，可以让自定义的Servlet实现SingleThreadModel标识接口。</p><p>说明：如果将JSP或Servlet设置成单线程工作模式，会导致每个请求创建一个Servlet实例，这种实践将导致严重的性能问题（服务器的内存压力很大，还会导致频繁的垃圾回收），所以通常情况下并不会这么做。</p><h2 id="实现会话跟踪的技术有哪些"><a href="#实现会话跟踪的技术有哪些" class="headerlink" title="实现会话跟踪的技术有哪些"></a>实现会话跟踪的技术有哪些</h2><ol><li><strong>使用Cookie</strong></li></ol><p>向客户端发送Cookie</p><pre><code>Cookie c =new Cookie(&quot;name&quot;,&quot;value&quot;); //创建Cookie c.setMaxAge(60*60*24); //设置最大时效，此处设置的最大时效为一天response.addCookie(c); //把Cookie放入到HTTP响应中</code></pre><p>从客户端读取Cookie</p><pre><code>String name =&quot;name&quot;; Cookie[]cookies =request.getCookies(); if(cookies !=null){    for(int i= 0;i&lt;cookies.length;i++){     Cookie cookie =cookies[i];     if(name.equals(cookis.getName()))     //something is here.     //you can get the value     cookie.getValue();    } }</code></pre><p><strong>优点:</strong> 数据可以持久保存，不需要服务器资源，简单，基于文本的Key-Value</p><p><strong>缺点:</strong> 大小受到限制，用户可以禁用Cookie功能，由于保存在本地，有一定的安全风险。</p><ol><li>URL 重写</li></ol><p>在URL中添加用户会话的信息作为请求的参数，或者将唯一的会话ID添加到URL结尾以标识一个会话。</p><p><strong>优点：</strong> 在Cookie被禁用的时候依然可以使用</p><p><strong>缺点：</strong> 必须对网站的URL进行编码，所有页面必须动态生成，不能用预先记录下来的URL进行访问。</p><p>3.隐藏的表单域</p><pre><code>&lt;input type=&quot;hidden&quot; name =&quot;session&quot; value=&quot;...&quot;/&gt;</code></pre><p><strong>优点：</strong> Cookie被禁时可以使用</p><p><strong>缺点：</strong> 所有页面必须是表单提交之后的结果。</p><ol><li>HttpSession</li></ol><p>在所有会话跟踪技术中，HttpSession对象是最强大也是功能最多的。当一个用户第一次访问某个网站时会自动创建 HttpSession，每个用户可以访问他自己的HttpSession。可以通过HttpServletRequest对象的getSession方 法获得HttpSession，通过HttpSession的setAttribute方法可以将一个值放在HttpSession中，通过调用 HttpSession对象的getAttribute方法，同时传入属性名就可以获取保存在HttpSession中的对象。与上面三种方式不同的 是，HttpSession放在服务器的内存中，因此不要将过大的对象放在里面，即使目前的Servlet容器可以在内存将满时将HttpSession 中的对象移到其他存储设备中，但是这样势必影响性能。添加到HttpSession中的值可以是任意Java对象，这个对象最好实现了 Serializable接口，这样Servlet容器在必要的时候可以将其序列化到文件中，否则在序列化时就会出现异常。</p><h2 id="Cookie和Session的的区别"><a href="#Cookie和Session的的区别" class="headerlink" title="Cookie和Session的的区别"></a>Cookie和Session的的区别</h2><ol><li>由于HTTP协议是无状态的协议，所以服务端需要记录用户的状态时，就需要用某种机制来识具体的用户，这个机制就是Session.典型的场景比如购物车，当你点击下单按钮时，由于HTTP协议无状态，所以并不知道是哪个用户操作的，所以服务端要为特定的用户创建了特定的Session，用用于标识这个用户，并且跟踪用户，这样才知道购物车里面有几本书。这个Session是保存在服务端的，有一个唯一标识。在服务端保存Session的方法很多，内存、数据库、文件都有。集群的时候也要考虑Session的转移，在大型的网站，一般会有专门的Session服务器集群，用来保存用户会话，这个时候 Session 信息都是放在内存的，使用一些缓存服务比如Memcached之类的来放 Session。</li><li>思考一下服务端如何识别特定的客户？这个时候Cookie就登场了。每次HTTP请求的时候，客户端都会发送相应的Cookie信息到服务端。实际上大多数的应用都是用 Cookie 来实现Session跟踪的，第一次创建Session的时候，服务端会在HTTP协议中告诉客户端，需要在 Cookie 里面记录一个Session ID，以后每次请求把这个会话ID发送到服务器，我就知道你是谁了。有人问，如果客户端的浏览器禁用了 Cookie 怎么办？一般这种情况下，会使用一种叫做URL重写的技术来进行会话跟踪，即每次HTTP交互，URL后面都会被附加上一个诸如 sid=xxxxx 这样的参数，服务端据此来识别用户。</li><li>Cookie其实还可以用在一些方便用户的场景下，设想你某次登陆过一个网站，下次登录的时候不想再次输入账号了，怎么办？这个信息可以写到Cookie里面，访问网站的时候，网站页面的脚本可以读取这个信息，就自动帮你把用户名给填了，能够方便一下用户。这也是Cookie名称的由来，给用户的一点甜头。所以，总结一下：Session是在服务端保存的一个数据结构，用来跟踪用户的状态，这个数据可以保存在集群、数据库、文件中；Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，也是实现Session的一种方式。</li></ol><blockquote><p>参考：</p><p><a href="https://www.zhihu.com/question/19786827/answer/28752144" target="_blank" rel="noopener">https://www.zhihu.com/question/19786827/answer/28752144</a></p><p>《javaweb整合开发王者归来》P158 Cookie和Session的比较</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> J2EE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础知识</title>
      <link href="/2019/01/03/Java/Java%E6%A0%B8%E5%BF%83/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/01/03/Java/Java%E6%A0%B8%E5%BF%83/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-面向对象和面向过程的区别"><a href="#1-面向对象和面向过程的区别" class="headerlink" title="1. 面向对象和面向过程的区别"></a>1. 面向对象和面向过程的区别</h2><h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><p><strong>优点：</strong> 性能比面向对象高，因为类调用时需要实例化，开销比较大，比较消耗资源;比如单片机、嵌入式开发、Linux/Unix等一般采用面向过程开发，性能是最重要的因素。</p><p><strong>缺点：</strong> 没有面向对象易维护、易复用、易扩展</p><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p><strong>优点：</strong> 易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护</p><p><strong>缺点：</strong> 性能比面向过程低</p><h2 id="2-Java-语言有哪些特点"><a href="#2-Java-语言有哪些特点" class="headerlink" title="2. Java 语言有哪些特点"></a>2. Java 语言有哪些特点</h2><ol><li>简单易学；</li><li>面向对象（封装，继承，多态）；</li><li>平台无关性（ Java 虚拟机实现平台无关性）；</li><li>可靠性；</li><li>安全性；</li><li>支持多线程（ C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持）；</li><li>支持网络编程并且很方便（ Java 语言诞生本身就是为简化网络编程设计的，因此 Java 语言不仅支持网络编程而且很方便）；</li><li>编译与解释并存；</li></ol><h2 id="3-什么是-JDK-什么是-JRE-什么是-JVM-三者之间的联系与区别"><a href="#3-什么是-JDK-什么是-JRE-什么是-JVM-三者之间的联系与区别" class="headerlink" title="3. 什么是 JDK 什么是 JRE 什么是 JVM 三者之间的联系与区别"></a>3. 什么是 JDK 什么是 JRE 什么是 JVM 三者之间的联系与区别</h2><p>这几个是Java中很基本很基本的东西，但是我相信一定还有很多人搞不清楚！为什么呢？因为我们大多数时候在使用现成的编译工具以及环境的时候，并没有去考虑这些东西。</p><p><strong>JDK:</strong> JDK（Java Development Kit）顾名思义它是给开发者提供的开发工具箱,是给程序开发者用的。它除了包括完整的JRE（Java Runtime Environment），Java运行环境，还包含了其他供开发者使用的工具包。</p><p><strong>JRE:</strong> 普通用户而只需要安装 JRE（Java Runtime Environment）来运行 Java 程序。而程序开发者必须安装JDK来编译、调试程序。</p><p><strong>JVM：</strong> 当我们运行一个程序时，JVM 负责将字节码转换为特定机器代码，JVM 提供了内存管理/垃圾回收和安全机制等。这种独立于硬件和操作系统，正是 java 程序可以一次编写多处执行的原因。</p><p><strong>区别与联系：</strong></p><ol><li>JDK 用于开发，JRE 用于运行java程序 ；</li><li>JDK 和 JRE 中都包含 JVM ；</li><li>JVM 是 java 编程语言的核心并且具有平台独立性。</li></ol><h2 id="4-什么是字节码-采用字节码的最大好处是什么"><a href="#4-什么是字节码-采用字节码的最大好处是什么" class="headerlink" title="4. 什么是字节码 采用字节码的最大好处是什么"></a>4. 什么是字节码 采用字节码的最大好处是什么</h2><h3 id="先看下-java-中的编译器和解释器："><a href="#先看下-java-中的编译器和解释器：" class="headerlink" title="先看下 java 中的编译器和解释器： 　　"></a>先看下 java 中的编译器和解释器： 　　</h3><p>Java 中引入了虚拟机的概念，即在机器和编译程序之间加入了一层抽象的虚拟的机器。这台虚拟的机器在任何平台上都提供给编译程序一个的共同的接口。</p><p>编译程序只需要面向虚拟机，生成虚拟机能够理解的代码，然后由解释器来将虚拟机代码转换为特定系统的机器码执行。在 Java 中，这种供虚拟机理解的代码叫做<code>字节码</code>（即扩展名为 <code>.class</code> 的文件），它不面向任何特定的处理器，只面向虚拟机。</p><p>每一种平台的解释器是不同的，但是实现的虚拟机是相同的。Java 源程序经过编译器编译后变成字节码，字节码由虚拟机解释执行，虚拟机将每一条要执行的字节码送给解释器，解释器将其翻译成特定机器上的机器码，然后在特定的机器上运行。这也就是解释了 Java 的编译与解释并存的特点。</p><p>Java 源代码—-&gt;编译器—-&gt;jvm 可执行的 Java 字节码(即虚拟指令)—-&gt;jvm—-&gt;jvm 中解释器—–&gt;机器可执行的二进制机器码—-&gt;程序运行。</p><h3 id="采用字节码的好处："><a href="#采用字节码的好处：" class="headerlink" title="采用字节码的好处：　"></a>采用字节码的好处：　</h3><p><strong>Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不专对一种特定的机器，因此，Java程序无须重新编译便可在多种不同的计算机上运行。</strong></p><blockquote><p>解释型语言：解释型语言，是在运行的时候将程序翻译成机器语言。解释型语言的程序不需要在运行前编译，在运行程序的时候才翻译，专门的解释器负责在每个语句执行的时候解释程序代码。这样解释型语言每执行一次就要翻译一次，效率比较低。——百度百科</p></blockquote><h2 id="5-Java和C-的区别"><a href="#5-Java和C-的区别" class="headerlink" title="5. Java和C++的区别"></a>5. Java和C++的区别</h2><p>我知道很多人没学过 C++，但是面试官就是没事喜欢拿咱们 Java 和 C++ 比呀！没办法！！！就算没学过C++，也要记下来！</p><ul><li>都是面向对象的语言，都支持封装、继承和多态</li><li>Java 不提供指针来直接访问内存，程序内存更加安全</li><li>Java 的类是单继承的，C++ 支持多重继承；虽然 Java 的类不可以多继承，但是接口可以多继承。</li><li>Java 有自动内存管理机制，不需要程序员手动释放无用内存</li></ul><h2 id="6-什么是-Java-程序的主类-应用程序和小程序的主类有何不同"><a href="#6-什么是-Java-程序的主类-应用程序和小程序的主类有何不同" class="headerlink" title="6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同"></a>6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同</h2><p>一个程序中可以有多个类，但只能有一个类是主类。在 Java 应用程序中，这个主类是指包含 main（）方法的类。而在 Java 小程序中，这个主类是一个继承自系统类 JApplet 或 Applet 的子类。应用程序的主类不一定要求是 public 类，但小程序的主类要求必须是 public 类。主类是 Java 程序执行的入口点。</p><h2 id="7-Java-应用程序与小程序之间有那些差别"><a href="#7-Java-应用程序与小程序之间有那些差别" class="headerlink" title="7. Java 应用程序与小程序之间有那些差别"></a>7. Java 应用程序与小程序之间有那些差别</h2><p>简单说应用程序是从主线程启动(也就是 main() 方法)。applet 小程序没有main方法，主要是嵌在浏览器页面上运行(调用init()线程或者run()来启动)，嵌入浏览器这点跟 flash 的小游戏类似。</p><h2 id="8-字符型常量和字符串常量的区别"><a href="#8-字符型常量和字符串常量的区别" class="headerlink" title="8. 字符型常量和字符串常量的区别"></a>8. 字符型常量和字符串常量的区别</h2><ol><li>形式上: 字符常量是单引号引起的一个字符 字符串常量是双引号引起的若干个字符</li><li>含义上: 字符常量相当于一个整形值( ASCII 值),可以参加表达式运算 字符串常量代表一个地址值(该字符串在内存中存放位置)</li><li>占内存大小 字符常量只占2个字节 字符串常量占若干个字节(至少一个字符结束标志) (<strong>注意： char在Java中占两个字节</strong>)</li></ol><blockquote><p> <img src="/2019/01/03/Java/Java核心/Java基础知识/687474703a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d392d31352f38363733353531392e6a7067.jpg" alt="java编程思想第四版：2.2.2节"></p></blockquote><h2 id="9-构造器-Constructor-是否可被-override"><a href="#9-构造器-Constructor-是否可被-override" class="headerlink" title="9. 构造器 Constructor 是否可被 override"></a>9. 构造器 Constructor 是否可被 override</h2><p>在讲继承的时候我们就知道父类的私有属性和构造方法并不能被继承，所以 Constructor 也就不能被 override（重写）,但是可以 overload（重载）,所以你可以看到一个类中有多个构造函数的情况。</p><h2 id="10-重载和重写的区别"><a href="#10-重载和重写的区别" class="headerlink" title="10. 重载和重写的区别"></a>10. 重载和重写的区别</h2><p><strong>重载：</strong> 发生在同一个类中，方法名必须相同，参数类型不同、个数不同、顺序不同，方法返回值和访问修饰符可以不同，发生在编译时。 　　</p><p><strong>重写：</strong> 发生在父子类中，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类；如果父类方法访问修饰符为 private 则子类就不能重写该方法。</p><h2 id="11-Java-面向对象编程三大特性-封装、继承、多态"><a href="#11-Java-面向对象编程三大特性-封装、继承、多态" class="headerlink" title="11. Java 面向对象编程三大特性:封装、继承、多态"></a>11. Java 面向对象编程三大特性:封装、继承、多态</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>封装把一个对象的属性私有化，同时提供一些可以被外界访问的属性的方法，如果属性不想被外界访问，我们大可不必提供方法给外界访问。但是如果一个类没有提供给外界访问的方法，那么这个类也没有什么意义了。</p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。通过使用继承我们能够非常方便地复用以前的代码。</p><p><strong>关于继承如下 3 点请记住：</strong></p><ol><li>子类拥有父类非 private 的属性和方法。</li><li>子类可以拥有自己属性和方法，即子类可以对父类进行扩展。</li><li>子类可以用自己的方式实现父类的方法。（以后介绍）。</li></ol><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>所谓多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。</p><p>在Java中有两种形式可以实现多态：继承（多个子类对同一方法的重写）和接口（实现接口并覆盖接口中同一方法）。</p><h2 id="12-String-和-StringBuffer、StringBuilder-的区别是什么-String-为什么是不可变的"><a href="#12-String-和-StringBuffer、StringBuilder-的区别是什么-String-为什么是不可变的" class="headerlink" title="12. String 和 StringBuffer、StringBuilder 的区别是什么 String 为什么是不可变的"></a>12. String 和 StringBuffer、StringBuilder 的区别是什么 String 为什么是不可变的</h2><p><strong>可变性</strong> 　</p><p>简单的来说：String 类中使用 final 关键字字符数组保存字符串，<code>private　final　char　value[]</code>，所以 String 对象是不可变的。而StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串<code>char[]value</code> 但是没有用 final 关键字修饰，所以这两种对象都是可变的。</p><p>StringBuilder 与 StringBuffer 的构造方法都是调用父类构造方法也就是 AbstractStringBuilder 实现的，大家可以自行查阅源码。</p><p>AbstractStringBuilder.java</p><pre><code>abstract class AbstractStringBuilder implements Appendable, CharSequence {    char[] value;    int count;    AbstractStringBuilder() {    }    AbstractStringBuilder(int capacity) {        value = new char[capacity];    }</code></pre><p><strong>线程安全性</strong></p><p>String 中的对象是不可变的，也就可以理解为常量，线程安全。AbstractStringBuilder 是 StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如 expandCapacity、append、insert、indexOf 等公共方法。StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。StringBuilder 并没有对方法进行加同步锁，所以是非线程安全的。 　　</p><p><strong>性能</strong></p><p>每次对 String 类型进行改变的时候，都会生成一个新的 String 对象，然后将指针指向新的 String 对象。StringBuffer 每次都会对 StringBuffer 对象本身进行操作，而不是生成新的对象并改变对象引用。相同情况下使用 StirngBuilder 相比使用 StringBuffer 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。</p><p><strong>对于三者使用的总结：</strong></p><ol><li>操作少量的数据 = String</li><li>单线程操作字符串缓冲区下操作大量数据 = StringBuilder</li><li>多线程操作字符串缓冲区下操作大量数据 = StringBuffer</li></ol><h2 id="13-自动装箱与拆箱"><a href="#13-自动装箱与拆箱" class="headerlink" title="13. 自动装箱与拆箱"></a>13. 自动装箱与拆箱</h2><p><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</p><p><strong>拆箱</strong>：将包装类型转换为基本数据类型；</p><h2 id="14-在一个静态方法内调用一个非静态成员为什么是非法的"><a href="#14-在一个静态方法内调用一个非静态成员为什么是非法的" class="headerlink" title="14. 在一个静态方法内调用一个非静态成员为什么是非法的"></a>14. 在一个静态方法内调用一个非静态成员为什么是非法的</h2><p>由于静态方法可以不通过对象进行调用，因此在静态方法里，不能调用其他非静态变量，也不可以访问非静态变量成员。</p><h2 id="15-在-Java-中定义一个不做事且没有参数的构造方法的作用"><a href="#15-在-Java-中定义一个不做事且没有参数的构造方法的作用" class="headerlink" title="15. 在 Java 中定义一个不做事且没有参数的构造方法的作用"></a>15. 在 Java 中定义一个不做事且没有参数的构造方法的作用</h2><p>　Java 程序在执行子类的构造方法之前，如果没有用 super() 来调用父类特定的构造方法，则会调用父类中“没有参数的构造方法”。因此，如果父类中只定义了有参数的构造方法，而在子类的构造方法中又没有用 super() 来调用父类中特定的构造方法，则编译时将发生错误，因为 Java 程序在父类中找不到没有参数的构造方法可供执行。解决办法是在父类里加上一个不做事且没有参数的构造方法。 　</p><h2 id="16-import-java和javax有什么区别"><a href="#16-import-java和javax有什么区别" class="headerlink" title="16. import java和javax有什么区别"></a>16. import java和javax有什么区别</h2><p>刚开始的时候 JavaAPI 所必需的包是 java 开头的包，javax 当时只是扩展 API 包来说使用。然而随着时间的推移，javax 逐渐的扩展成为 Java API 的组成部分。但是，将扩展从 javax 包移动到 java 包将是太麻烦了，最终会破坏一堆现有的代码。因此，最终决定 javax 包将成为标准API的一部分。</p><p>所以，实际上java和javax没有区别。这都是一个名字。</p><h2 id="17-接口和抽象类的区别是什么"><a href="#17-接口和抽象类的区别是什么" class="headerlink" title="17. 接口和抽象类的区别是什么"></a>17. 接口和抽象类的区别是什么</h2><ol><li>接口的方法默认是 public，所有方法在接口中不能有实现(Java 8 开始接口方法可以有默认实现），抽象类可以有非抽象的方法</li><li>接口中的实例变量默认是 final 类型的，而抽象类中则不一定</li><li>一个类可以实现多个接口，但最多只能实现一个抽象类</li><li>一个类实现接口的话要实现接口的所有方法，而抽象类不一定</li><li>接口不能用 new 实例化，但可以声明，但是必须引用一个实现该接口的对象 从设计层面来说，抽象是对类的抽象，是一种模板设计，接口是行为的抽象，是一种行为的规范。</li></ol><h2 id="18-成员变量与局部变量的区别有那些"><a href="#18-成员变量与局部变量的区别有那些" class="headerlink" title="18. 成员变量与局部变量的区别有那些"></a>18. 成员变量与局部变量的区别有那些</h2><ol><li>从语法形式上，看成员变量是属于类的，而局部变量是在方法中定义的变量或是方法的参数；成员变量可以被 public,private,static 等修饰符所修饰，而局部变量不能被访问控制修饰符及 static 所修饰；但是，成员变量和局部变量都能被 final 所修饰；</li><li>从变量在内存中的存储方式来看，成员变量是对象的一部分，而对象存在于堆内存，局部变量存在于栈内存</li><li>从变量在内存中的生存时间上看，成员变量是对象的一部分，它随着对象的创建而存在，而局部变量随着方法的调用而自动消失。</li><li>成员变量如果没有被赋初值，则会自动以类型的默认值而赋值（一种情况例外被 final 修饰的成员变量也必须显示地赋值）；而局部变量则不会自动赋值。</li></ol><h2 id="19-创建一个对象用什么运算符？对象实体与对象引用有何不同？"><a href="#19-创建一个对象用什么运算符？对象实体与对象引用有何不同？" class="headerlink" title="19. 创建一个对象用什么运算符？对象实体与对象引用有何不同？"></a>19. 创建一个对象用什么运算符？对象实体与对象引用有何不同？</h2><p>new运算符，new创建对象实例（对象实例在堆内存中），对象引用指向对象实例（对象引用存放在栈内存中）。一个对象引用可以指向0个或1个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有n个引用指向它（可以用n条绳子系住一个气球）。</p><h2 id="20-什么是方法的返回值？返回值在类的方法里的作用是什么？"><a href="#20-什么是方法的返回值？返回值在类的方法里的作用是什么？" class="headerlink" title="20. 什么是方法的返回值？返回值在类的方法里的作用是什么？"></a>20. 什么是方法的返回值？返回值在类的方法里的作用是什么？</h2><p>方法的返回值是指我们获取到的某个方法体中的代码执行后产生的结果！（前提是该方法可能产生结果）。返回值的作用:接收出结果，使得它可以用于其他的操作！</p><h2 id="21-一个类的构造方法的作用是什么-若一个类没有声明构造方法，该程序能正确执行吗-为什么"><a href="#21-一个类的构造方法的作用是什么-若一个类没有声明构造方法，该程序能正确执行吗-为什么" class="headerlink" title="21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法，该程序能正确执行吗 为什么"></a>21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法，该程序能正确执行吗 为什么</h2><p>主要作用是完成对类对象的初始化工作。可以执行。因为一个类即使没有声明构造方法也会有默认的不带参数的构造方法。</p><h2 id="22-构造方法有哪些特性"><a href="#22-构造方法有哪些特性" class="headerlink" title="22. 构造方法有哪些特性"></a>22. 构造方法有哪些特性</h2><ol><li>名字与类名相同；</li><li>没有返回值，但不能用void声明构造函数；</li><li>生成类的对象时自动执行，无需调用。</li></ol><h2 id="23-静态方法和实例方法有何不同"><a href="#23-静态方法和实例方法有何不同" class="headerlink" title="23. 静态方法和实例方法有何不同"></a>23. 静态方法和实例方法有何不同</h2><ol><li>在外部调用静态方法时，可以使用”类名.方法名”的方式，也可以使用”对象名.方法名”的方式。而实例方法只有后面这种方式。也就是说，调用静态方法可以无需创建对象。</li><li>静态方法在访问本类的成员时，只允许访问静态成员（即静态成员变量和静态方法），而不允许访问实例成员变量和实例方法；实例方法则无此限制.</li></ol><h2 id="24-对象的相等与指向他们的引用相等，两者有什么不同？"><a href="#24-对象的相等与指向他们的引用相等，两者有什么不同？" class="headerlink" title="24. 对象的相等与指向他们的引用相等，两者有什么不同？"></a>24. 对象的相等与指向他们的引用相等，两者有什么不同？</h2><p>对象的相等，比的是内存中存放的内容是否相等。而引用相等，比较的是他们指向的内存地址是否相等。</p><h2 id="25-在调用子类构造方法之前会先调用父类没有参数的构造方法，其目的是？"><a href="#25-在调用子类构造方法之前会先调用父类没有参数的构造方法，其目的是？" class="headerlink" title="25. 在调用子类构造方法之前会先调用父类没有参数的构造方法，其目的是？"></a>25. 在调用子类构造方法之前会先调用父类没有参数的构造方法，其目的是？</h2><p>帮助子类做初始化工作。</p><h2 id="26-与-equals-重要"><a href="#26-与-equals-重要" class="headerlink" title="26. == 与 equals(重要)"></a>26. == 与 equals(重要)</h2><p><strong>==</strong> : 它的作用是判断两个对象的地址是不是相等。即，判断两个对象是不是同一个对象。(基本数据类型==比较的是值，引用数据类型==比较的是内存地址)</p><p><strong>equals()</strong> : 它的作用也是判断两个对象是否相等。但它一般有两种使用情况：</p><ul><li>情况1：类没有覆盖 equals() 方法。则通过 equals() 比较该类的两个对象时，等价于通过“==”比较这两个对象。</li><li>情况2：类覆盖了 equals() 方法。一般，我们都覆盖 equals() 方法来两个对象的内容相等；若它们的内容相等，则返回 true (即，认为这两个对象相等)。</li></ul><p><strong>举个例子：</strong></p><pre><code>public class test1 {    public static void main(String[] args) {        String a = new String(&quot;ab&quot;); // a 为一个引用        String b = new String(&quot;ab&quot;); // b为另一个引用,对象的内容一样        String aa = &quot;ab&quot;; // 放在常量池中        String bb = &quot;ab&quot;; // 从常量池中查找        if (aa == bb) // true            System.out.println(&quot;aa==bb&quot;);        if (a == b) // false，非同一对象            System.out.println(&quot;a==b&quot;);        if (a.equals(b)) // true            System.out.println(&quot;aEQb&quot;);        if (42 == 42.0) { // true            System.out.println(&quot;true&quot;);        }    }}</code></pre><p><strong>说明：</strong></p><ul><li>String 中的 equals 方法是被重写过的，因为 object 的 equals 方法是比较的对象的内存地址，而 String 的 equals 方法比较的是对象的值。</li><li>当创建 String 类型的对象时，虚拟机会在常量池中查找有没有已经存在的值和要创建的值相同的对象，如果有就把它赋给当前引用。如果没有就在常量池中重新创建一个 String 对象。</li></ul><h2 id="27-hashCode-与-equals（重要）"><a href="#27-hashCode-与-equals（重要）" class="headerlink" title="27. hashCode 与 equals（重要）"></a>27. hashCode 与 equals（重要）</h2><p>面试官可能会问你：“你重写过 hashcode 和 equals 么，为什么重写equals时必须重写hashCode方法？”</p><h3 id="hashCode（）介绍"><a href="#hashCode（）介绍" class="headerlink" title="hashCode（）介绍"></a>hashCode（）介绍</h3><p>hashCode() 的作用是获取哈希码，也称为散列码；它实际上是返回一个int整数。这个哈希码的作用是确定该对象在哈希表中的索引位置。hashCode() 定义在JDK的Object.java中，这就意味着Java中的任何类都包含有hashCode() 函数。</p><p>散列表存储的是键值对(key-value)，它的特点是：能根据“键”快速的检索出对应的“值”。这其中就利用到了散列码！（可以快速找到所需要的对象）</p><h3 id="为什么要有-hashCode"><a href="#为什么要有-hashCode" class="headerlink" title="为什么要有 hashCode"></a>为什么要有 hashCode</h3><p><strong>我们以“HashSet 如何检查重复”为例子来说明为什么要有 hashCode：</strong></p><p>当你把对象加入 HashSet 时，HashSet 会先计算对象的 hashcode 值来判断对象加入的位置，同时也会与其他已经加入的对象的 hashcode 值作比较，如果没有相符的hashcode，HashSet会假设对象没有重复出现。但是如果发现有相同 hashcode 值的对象，这时会调用 equals（）方法来检查 hashcode 相等的对象是否真的相同。如果两者相同，HashSet 就不会让其加入操作成功。如果不同的话，就会重新散列到其他位置。（摘自我的Java启蒙书《Head fist java》第二版）。这样我们就大大减少了 equals 的次数，相应就大大提高了执行速度。</p><h3 id="hashCode（）与equals（）的相关规定"><a href="#hashCode（）与equals（）的相关规定" class="headerlink" title="hashCode（）与equals（）的相关规定"></a>hashCode（）与equals（）的相关规定</h3><ol><li>如果两个对象相等，则hashcode一定也是相同的</li><li>两个对象相等,对两个对象分别调用equals方法都返回true</li><li>两个对象有相同的hashcode值，它们也不一定是相等的</li><li><strong>因此，equals 方法被覆盖过，则 hashCode 方法也必须被覆盖</strong></li><li>hashCode() 的默认行为是对堆上的对象产生独特值。如果没有重写 hashCode()，则该 class 的两个对象无论如何都不会相等（即使这两个对象指向相同的数据）</li></ol><h2 id="28-为什么Java中只有值传递"><a href="#28-为什么Java中只有值传递" class="headerlink" title="28. 为什么Java中只有值传递"></a>28. 为什么Java中只有值传递</h2><p><a href="https://github.com/Snailclimb/Java-Guide/blob/master/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E6%9C%80%E6%9C%80%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84Java%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/%E7%AC%AC%E4%B8%80%E5%91%A8%EF%BC%882018-8-7%EF%BC%89.md" target="_blank" rel="noopener">为什么Java中只有值传递？</a></p><h2 id="29-简述线程，程序、进程的基本概念。以及他们之间关系是什么"><a href="#29-简述线程，程序、进程的基本概念。以及他们之间关系是什么" class="headerlink" title="29. 简述线程，程序、进程的基本概念。以及他们之间关系是什么"></a>29. 简述线程，程序、进程的基本概念。以及他们之间关系是什么</h2><p><strong>线程</strong>与进程相似，但线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享同一块内存空间和一组系统资源，所以系统在产生一个线程，或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。</p><p><strong>程序</strong>是含有指令和数据的文件，被存储在磁盘或其他的数据存储设备中，也就是说程序是静态的代码。</p><p><strong>进程</strong>是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。简单来说，一个进程就是一个执行中的程序，它在计算机中一个指令接着一个指令地执行着，同时，每个进程还占有某些系统资源如CPU时间，内存空间，文件，文件，输入输出设备的使用权等等。换句话说，当程序在执行时，将会被操作系统载入内存中。 线程是进程划分成的更小的运行单位。线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同一进程中的线程极有可能会相互影响。从另一角度来说，进程属于操作系统的范畴，主要是同一段时间内，可以同时执行一个以上的程序，而线程则是在同一程序内几乎同时执行一个以上的程序段。</p><h2 id="30-线程有哪些基本状态？这些状态是如何定义的"><a href="#30-线程有哪些基本状态？这些状态是如何定义的" class="headerlink" title="30. 线程有哪些基本状态？这些状态是如何定义的?"></a>30. 线程有哪些基本状态？这些状态是如何定义的?</h2><ol><li><strong>新建(new)</strong>：新创建了一个线程对象。</li><li><strong>可运行(runnable)</strong>：线程对象创建后，其他线程(比如main线程）调用了该对象的start()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获 取cpu的使用权。</li><li><strong>运行(running)</strong>：可运行状态(runnable)的线程获得了cpu时间片（timeslice），执行程序代码。</li><li><strong>阻塞(block)</strong>：阻塞状态是指线程因为某种原因放弃了cpu使用权，也即让出了cpu timeslice，暂时停止运行。直到线程进入可运行(runnable)状态，才有 机会再次获得cpu timeslice转到运行(running)状态。阻塞的情况分三种： (一). 等待阻塞：运行(running)的线程执行o.wait()方法，JVM会把该线程放 入等待队列(waitting queue)中。 (二). 同步阻塞：运行(running)的线程在获取对象的同步锁时，若该同步锁 被别的线程占用，则JVM会把该线程放入锁池(lock pool)中。 (三). 其他阻塞: 运行(running)的线程执行Thread.sleep(long ms)或t.join()方法，或者发出了I/O请求时，JVM会把该线程置为阻塞状态。当sleep()状态超时join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入可运行(runnable)状态。</li><li><strong>死亡(dead)</strong>：线程run()、main()方法执行结束，或者因异常退出了run()方法，则该线程结束生命周期。死亡的线程不可再次复生。</li></ol><p><img src="/2019/01/03/Java/Java核心/Java基础知识/68747470733a2f2f757365722d676f6c642d63646e2e786974752e696f2f323031382f382f392f313635316631396437633465393361333f773d38373626683d34393226663d706e6726733d313238303932.jpg" alt=""></p><p>备注： 可以用早起坐地铁来比喻这个过程：</p><p>还没起床：sleeping</p><p>起床收拾好了，随时可以坐地铁出发：Runnable</p><p>等地铁来：Waiting</p><p>地铁来了，但要排队上地铁：I/O阻塞</p><p>上了地铁，发现暂时没座位：synchronized阻塞</p><p>地铁上找到座位：Running</p><p>到达目的地：Dead</p><h2 id="31-关于-final-关键字的一些总结"><a href="#31-关于-final-关键字的一些总结" class="headerlink" title="31 关于 final 关键字的一些总结"></a>31 关于 final 关键字的一些总结</h2><p>final关键字主要用在三个地方：变量、方法、类。</p><ol><li>对于一个final变量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。</li><li>当用final修饰一个类时，表明这个类不能被继承。final类中的所有成员方法都会被隐式地指定为final方法。</li><li>使用final方法的原因有两个。第一个原因是把方法锁定，以防任何继承类修改它的含义；第二个原因是效率。在早期的Java实现版本中，会将final方法转为内嵌调用。但是如果方法过于庞大，可能看不到内嵌调用带来的任何性能提升（现在的Java版本已经不需要使用final方法进行这些优化了）。类中所有的private方法都隐式地指定为final。</li></ol><h2 id="32-Java-中的异常处理"><a href="#32-Java-中的异常处理" class="headerlink" title="32 Java 中的异常处理"></a>32 Java 中的异常处理</h2><h3 id="Java异常类层次结构图"><a href="#Java异常类层次结构图" class="headerlink" title="Java异常类层次结构图"></a>Java异常类层次结构图</h3><p><img src="/2019/01/03/Java/Java核心/Java基础知识/687474703a2f2f696d61676573323031352e636e626c6f67732e636f6d2f626c6f672f3634313030332f3230313630372f3634313030332d32303136303730363233323034343238302d3335353335343739302e706e67.png" alt="Java异常类层次结构图"></p><p>在 Java 中，所有的异常都有一个共同的祖先java.lang包中的 <strong>Throwable类</strong>。Throwable： 有两个重要的子类：<strong>Exception（异常）</strong> 和 <strong>Error（错误）</strong> ，二者都是 Java 异常处理的重要子类，各自都包含大量子类。</p><p><strong>Error（错误）:是程序无法处理的错误</strong>，表示运行应用程序中较严重问题。大多数错误与代码编写者执行的操作无关，而表示代码运行时 JVM（Java 虚拟机）出现的问题。例如，Java虚拟机运行错误（Virtual MachineError），当 JVM 不再有继续执行操作所需的内存资源时，将出现 OutOfMemoryError。这些异常发生时，Java虚拟机（JVM）一般会选择线程终止。</p><p>这些错误表示故障发生于虚拟机自身、或者发生在虚拟机试图执行应用时，如Java虚拟机运行错误（Virtual MachineError）、类定义错误（NoClassDefFoundError）等。这些错误是不可查的，因为它们在应用程序的控制和处理能力之 外，而且绝大多数是程序运行时不允许出现的状况。对于设计合理的应用程序来说，即使确实发生了错误，本质上也不应该试图去处理它所引起的异常状况。在 Java中，错误通过Error的子类描述。</p><p><strong>Exception（异常）:是程序本身可以处理的异常</strong>。Exception 类有一个重要的子类 <strong>RuntimeException</strong>。RuntimeException 异常由Java虚拟机抛出。<strong>NullPointerException</strong>（要访问的变量没有引用任何对象时，抛出该异常）、<strong>ArithmeticException</strong>（算术运算异常，一个整数除以0时，抛出该异常）和 <strong>ArrayIndexOutOfBoundsException</strong> （下标越界异常）。</p><p><strong>注意：异常和错误的区别：异常能被程序本身可以处理，错误是无法处理。</strong></p><h3 id="Throwable类常用方法"><a href="#Throwable类常用方法" class="headerlink" title="Throwable类常用方法"></a>Throwable类常用方法</h3><ul><li><strong>public string getMessage()</strong>:返回异常发生时的详细信息</li><li><strong>public string toString()</strong>:返回异常发生时的简要描述</li><li><strong>public string getLocalizedMessage()</strong>:返回异常对象的本地化信息。使用Throwable的子类覆盖这个方法，可以声称本地化信息。如果子类没有覆盖该方法，则该方法返回的信息与getMessage（）返回的结果相同</li><li><strong>public void printStackTrace()</strong>:在控制台上打印Throwable对象封装的异常信息</li></ul><h3 id="异常处理总结"><a href="#异常处理总结" class="headerlink" title="异常处理总结"></a>异常处理总结</h3><ul><li>try 块：用于捕获异常。其后可接零个或多个catch块，如果没有catch块，则必须跟一个finally块。</li><li>catch 块：用于处理try捕获到的异常。</li><li>finally 块：无论是否捕获或处理异常，finally块里的语句都会被执行。当在try块或catch块中遇到return语句时，finally语句块将在方法返回之前被执行。</li></ul><p><strong>在以下4种特殊情况下，finally块不会被执行：</strong></p><ol><li>在finally语句块中发生了异常。</li><li>在前面的代码中用了System.exit()退出程序。</li><li>程序所在的线程死亡。</li><li>关闭CPU。</li></ol><h2 id="33-Java序列话中如果有些字段不想进行序列化-怎么办"><a href="#33-Java序列话中如果有些字段不想进行序列化-怎么办" class="headerlink" title="33 Java序列话中如果有些字段不想进行序列化 怎么办"></a>33 Java序列话中如果有些字段不想进行序列化 怎么办</h2><p>对于不想进行序列化的变量，使用transient关键字修饰。</p><p>transient关键字的作用是：阻止实例中那些用此关键字修饰的的变量序列化；当对象被反序列化时，被transient修饰的变量值不会被持久化和恢复。transient只能修饰变量，不能修饰类和方法。</p><h2 id="34-获取用键盘输入常用的的两种方法"><a href="#34-获取用键盘输入常用的的两种方法" class="headerlink" title="34 获取用键盘输入常用的的两种方法"></a>34 获取用键盘输入常用的的两种方法</h2><p>方法1：通过 Scanner</p><pre><code>Scanner input = new Scanner(System.in);String s  = input.nextLine();input.close();</code></pre><p>方法2：通过 BufferedReader</p><pre><code>BufferedReader input = new BufferedReader(new InputStreamReader(System.in)); String s = input.readLine(); </code></pre><h1 id="Java基础学习书籍推荐"><a href="#Java基础学习书籍推荐" class="headerlink" title="Java基础学习书籍推荐"></a>Java基础学习书籍推荐</h1><p><strong>《Head First Java.第二版》：</strong> 可以说是我的 Java 启蒙书籍了，特别适合新手读当然也适合我们用来温故Java知识点。</p><p><strong>《Java核心技术卷1+卷2》：</strong> 很棒的两本书，建议有点 Java 基础之后再读，介绍的还是比较深入的，非常推荐。</p><p><strong>《Java编程思想(第4版)》：</strong> 这本书要常读，初学者可以快速概览，中等程序员可以深入看看 Java，老鸟还可以用之回顾 Java 的体系。这本书之所以厉害，因为它在无形中整合了设计模式，这本书之所以难读，也恰恰在于他对设计模式的整合是无形的。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
